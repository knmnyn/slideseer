41,32,0.28125,0.5625,0.125,approximate xml query answers neoklis polyzotis punct uc santa cruz punct minos garofalakis punct bell labs punct yannis ioannidis punct u dot of athens comma hellas punct represented by punct gal zach,approximate xml query answers neoklis,-100,296,-100,normal.
21,79,0.0886075949367089,0.126582278481013,0.20253164556962,motivation xml punct de punct facto standard for data exchange over the internet dot conflict between zz zz zz on punct line zz zz zz and query execution cost increased query response times users might wait for un punct interesting results processing the query over a concise synopsis of the xml data dot the approximate result should be punct computed fast similar in its value content to the true result similar in its hierarchical structure to the true result,motivation xml punct de punct,296,-116,-412,normal.
12,26,0.0384615384615385,0.538461538461538,0.153846153846154,outline motivation background punct synopsis model treesketch synopses summarization model zz zz zz structural clustering of elements efficient processing and construction element simulation distance experimental results,outline motivation background punct synopsis,-116,83,199,na.
20,88,0.306818181818182,0.0795454545454545,0.420454545454545,twig query punct example for q1 in punct punct a punct punct punct b punct for q2 in q1 punct punct p return q1 punct punct n comma for q3 in q2 punct punct k return q3 q0 q1 q2 q3 q4 punct punct a punct punct punct b punct punct punct p punct punct k punct punct n a p k n a p k n d twig query query tree nesting tree b the is for the paths that are specified in the return clause dot,twig query punct example for,83,-17,-100,normal.
29,141,0.212765957446809,0.049645390070922,0.347517730496454,synopsis model let g punct punct vg comma eg punct a direct node punct labeled graph dot a graph synopsis s punct g punct punct punct vs comma es punct is a direct node punct labeled graph where punct each node v zz zz zz vs corresponds to a subset of element punct or attribute punct node in vg comma termed the extent of v zz zz zz extent punct v punct comma that have the same label dot an edge punct u comma v punct zz zz zz eg is represented in es as an edge between nodes whose extent contains the two endpoints u and v dot each synopsis node u store a tag tag punct u punct for the common tag of its element and a count field punct u punct for the size of its extent dot,synopsis model let g punct,-17,2,19,normal.
21,29,0.137931034482759,0.206896551724138,0.413793103448276,synopsis model synopsis node zz zz zz set of elements of the same tag synopsis edge zz zz zz document edge punct s punct r a punct 3 punct,synopsis model synopsis node zz,2,-60,-62,normal.
15,88,0.375,0.0909090909090909,0.386363636363636,xml data graph p0 pb3 a1 a2 n4 n8 v8 v4 e14 p6 f13 b5 f10 p7 b9 t12 v10 v11 v12 v13 v14 t11 synopsis model punct example p punct 1 punct a punct 2 punct pb punct 1 punct n punct 2 punct p punct 2 punct t punct 2 punct b punct 2 punct f punct 2 punct e punct 1 punct count punct a punct punct punct extent punct a punct punct punct punct punct a1 comma a2 punct punct punct 2 synopsis graph,xml data graph p0 pb3,-60,52,112,normal.
11,34,0.176470588235294,0.294117647058824,0.176470588235294,example for twig punct xsketch document t1 twig punct xsketch b punct f punct backward forward document t2 note punct the numbers on the edges represent how many edges are of this kind dot,example for twig punct xsketch,52,-43,-95,normal.
38,8,0.125,0.5,0.125,count punct stability and the zz treesketch synopsis,count punct stability and the,-43,-3,40,normal.
43,140,0.207142857142857,0.0285714285714286,0.385714285714286,definitions let r zz zz zz v x v denote an equivalence relation over the nodes of t punct v comma e punct comma and let punct u comma v punct denote a pair of equivalence classes punct i dot e dot element node partition punct induced by r dot the pair punct u comma v punct is k punct stable punct k zz zz zz 0 punct iff each element e zz zz zz u has exactly k child elements in v dot the relation r and the graph synopsis sr punct t punct resulting from the corresponding element partition are said to be count stable iff for every possible pair of element partitions punct u comma v punct there exists some k zz zz zz 0 such that punct u comma v punct is k punct stable dot,definitions let r zz zz,-3,56,59,normal.
15,78,0.358974358974359,0.0897435897435897,0.384615384615385,examples tree t1 sr punct t1 punct the pair punct r comma a punct is 2 punct stable dot the pair punct a comma b punct is not k punct stable for any k zz zz zz 0 dot tree t2 sr punct t2 punct the pair punct r comma a punct is 2 punct stable dot the pair punct a comma b punct is 3 punct stable dot sr punct t2 punct is count punct stable dot,examples tree t1 sr punct,56,-59,-115,normal.
56,68,0.176470588235294,0.0735294117647059,0.308823529411765,lemma given a data tree t punct v comma e punct there exists a unique minimal punct in terms of the number of equivalence classes punct count punct stable equivalence relation r zz zz zz v x v dot furthermore comma there exists a function expand from stable relations to xml trees comma such that expand punct r punct is isomorphic to the original document tree t dot,lemma given a data tree,-59,-117,-58,normal.
4,9,0.444444444444444,0.111111111111111,0.444444444444444,example sr punct t1 punct sr punct t2 punct,example sr punct t1 punct,-117,114,231,normal.
60,84,0.273809523809524,0.0595238095238095,0.297619047619048,treesketch synopsis treesketch synopsis ts for an xml data tree t is a graph punct synopsis for t where punct each node u in ts stores an element count count punct u punct punct punct extent punct u punct punct dot each edge punct u comma v punct in ts stores an punct average punct child count count punct u comma v punct equal to the average number of children in extent punct v punct for each element in extent punct u punct dot,treesketch synopsis treesketch synopsis ts,114,-1,-115,normal.
25,33,0.151515151515152,0.121212121212121,0.303030303030303,treesketch synopsis the interpretation of the stored average is simple punct all elements in the extent of u have count punct u comma v punct child elements in the extent of v dot,treesketch synopsis the interpretation of,-1,-7,-6,normal.
12,3,0,0.666666666666667,0,treesketches and clustering,,-7,3,10,normal.
33,125,0.224,0.04,0.424,treesketches and clustering let u be a synopsis node with outgoing edges u v1 comma zz zz zz comma u vn dot the set of outgoing edges defines a n punct dimnetional space where an element e zz zz zz u is mapped to point punct c1 punct e punct comma zz zz zz comma cn punct e punct punct if it has ci punct e punct children to node vi comma 1 zz zz zz i zz zz zz n dot the recorded average edge counts essentially map all points in this space to point punct count punct u comma v1 punct comma zz zz zz comma count punct u comma vn punct punct comma which actually represents the centroid of the cluster dot,treesketches and clustering let u,3,-3,-6,normal.
18,9,0.111111111111111,0.555555555555556,0,treesketches and clustering punct example synopsis tree original tree,treesketches and clustering punct example,-3,3,6,na.
42,121,0.132231404958678,0.0578512396694215,0.380165289256198,treesketches and clustering we can characterize the quality of a treesketch synopsis by using a metric that quantifies the quality of the induced clustering dot the metric used in the article is the squared error of the clustering which essentially measures the euclidean distance between points and their corresponding centroid dot the squared error of a single cluster u is defined as sq punct u punct punct zz zz e zz zz zz u zz zz 1 zz zz zz i zz zz zz n punct ci punct e punct punct count punct ui comma vi punct punct zz zz sq punct ts punct for a synopsis ts is simply the sum of squared errors for all the induced clusters dot,treesketches and clustering we can,3,-1,-4,normal.
30,60,0.116666666666667,0.1,0.183333333333333,treesketches and clustering note that the squared error for a count punct stable synopsis is zero since all edge punct count centroids are exact comma i dot e dot comma the child count for any element in a given synopsis node extent are identical dot tight clusters zz zz zz accurate synopsis the perfect synopsis corresponds to a perfect clustering,treesketches and clustering note that,-1,-5,-4,normal.
44,6,0.166666666666667,0.666666666666667,0,building the count punct stable summery,building the count punct stable,-5,-4,1,normal.
37,172,0.38953488372093,0.0465116279069767,0.395348837209302,buildstable algorithm input punct xml document t dot output punct count punct stable synopsis s to t dot begin h punct zz zz punct s punct zz zz foreach e zz zz zz t in post punct order do c punct punct punct ui comma ci punct punct ui is a node in s and ci punct punct children punct e punct zz zz zz extent punct ui punct punct punct 0 punct if punct h punct lable punct e punct comma c punct punct zz zz punct than add node u to s with label punct u punct punct label punct e punct h punct lable punct e punct comma c punct punct u for punct ui comma ci punct zz zz zz c do add edge u ui to s endif u punct h punct lable punct e punct comma c punct punct extent punct u punct punct extent punct u punct u punct e punct endfor end punct punct the algorithm time punct o punct punct t punct punct,buildstable algorithm input punct xml,-4,49,53,normal.
22,178,0.331460674157303,0.00561797752808989,0.662921348314607,example r a1 b2 b1 b3 a2 b zz zz zz a zz zz zz a zz zz zz zz zz zz r zz zz zz 1 1 1 2 t s h punct b comma zz zz punct punct b zz zz zz punct a comma punct punct b zz zz zz comma 2 punct punct punct punct a zz zz zz punct a comma punct punct b zz zz zz comma 1 punct punct punct punct a zz zz zz zz zz zz punct r comma punct punct a zz zz zz comma 1 punct comma punct a zz zz zz zz zz zz comma 1 punct punct punct punct r zz zz zz c punct zz zz c punct punct punct b zz zz zz comma 2 punct punct c punct zz zz c punct punct punct b zz zz zz comma 1 punct punct c punct punct punct a zz zz zz comma 1 punct comma punct a zz zz zz zz zz zz comma 1 punct punct b1 b2 a1 b3 a2 r,example r a1 b2 b1,49,-44,-93,na.
17,50,0.04,0.26,0.26,space budget limitations given an xml tree t comma build a treesketch of size b difficult clustering problem space dimensionality depends on the clustering itself construction based on bottom punct up clustering compress perfect synopsis by merging clusters best merge determined by marginal gains perfect space budget zz zz zz,space budget limitations given an,-44,-14,30,normal.
29,118,0.288135593220339,0.0338983050847458,0.313559322033898,tsbuild algorithm maintain a pool of candidate operations for merging 2 nodes of ts in size uh punct given as input to the algorithm punct dot m punct ts punct denotes the resulting synopsis after applying merge m on ts dot m dot errd punct sq punct m punct ts punct punct punct sq punct ts punct is the increase in squared error from ts to m punct ts punct dot m dot sized punct size punct ts punct punct size punct m punct ts punct punct is the decrease in synopsis size dot the operations pool is organized in min punct heap according to the marginal punct gain ratio m dot errd punct m dot sized dot,tsbuild algorithm maintain a pool,-14,3,17,normal.
20,111,0.216216216216216,0.189189189189189,0.297297297297297,tsbuild punct main steps input punct xml tree t dot space budget s dot upper punct lower bounds for heap size punct uh comma lh punct dot output punct treesketch synopsis ts of t of size zz zz zz s dot main steps punct ts punct buildstable punct t punct punct creates the pool of candidates merge operations on size uh dot applying each merge operation on it zz zz zz s turn on ts dot after each merge comma recompute all necessary parameters of ts dot if ts drops bellow size s comma the algorithm stops dot if the pool size drops below the bound lh comma replenish it dot,tsbuild punct main steps input,3,-100,-100,normal.
0,1,0,0,0,tsbuild,,-100,-100,-100,normal.
17,85,0.164705882352941,0.117647058823529,0.176470588235294,createpool algorithm generate all possible pair punct wise merges and keep the top uh o punct n zz zz punct merge operations dot key observation punct two elements have similar structure comma if their children have similar structure dot children clusters should be merged first dot bottom punct up merging comma based on depth depth punct distance from the leaves of the tree dot build a pool of candidate merges by increasing depth dot replenish the pool when it falls below a given threshold dot,createpool algorithm generate all possible,-100,-100,-100,normal.
0,1,0,0,0,createpool,,-100,-100,-100,normal.
50,3,0,1,0,approximate query processing,,-100,-7,-100,normal.
20,103,0.184466019417476,0.135922330097087,0.398058252427184,evalquery punct main steps input punct treesketch ts of document t dot twig query q dot output punct treesketch tq that approximates the nesting tree nt punct q punct dot main steps punct go in pre punct order traversal on q dot after qj was added comma go to it zz zz zz s son qi dot add the node qi zz zz zz q if it doesn zz zz zz t exists yet comma and calculate the paths number from qj to it comma acording to ts dot connect qi to qj punct the parent node punct by adding an edge dot,evalquery punct main steps input,-7,21,28,normal.
14,2,0,0.5,0,evalquery algorithm,,21,-100,-100,normal.
0,1,0,0,0,evalembed,,-100,-100,-100,normal.
12,5,0,0.6,0,example query treesketch result treesketchtsq,,-100,6,-100,normal.
34,182,0.313186813186813,0.0384615384615385,0.379120879120879,example cont dot let us consider the processing of node q1 punct on the query punct comma and more specifically the computation of bindings from q1 to q3 dot starting from node a comma which appears in the bindings of q1 comma we can identify exactly one simple embedding of path punct q1 comma q3 punct punct d punct punct g punct punct punct f comma namely e punct a punct d punct f dot the bindings of q3 comma therefore comma will be the descendants of a along the given embedding dot the number of descendants for each element in a punct nt punct count punct a comma d punct zz zz count punct d comma f punct punct 2 zz zz 0 dot 5 punct 1 dot s punct 0 dot 6 punct 0 dot 7 punct 0 dot 6 zz zz 0 dot 7 punct 0 dot 88 dot punct punct the number descendants along d punct punct g punct punct punct f for each binding q1 is 1 zz zz 0 dot 88 punct 0 dot 88 dot,example cont dot let us,6,-28,-34,normal.
22,59,0.135593220338983,0.135593220338983,0.186440677966102,error of approximation punct abstract the error of approximation is quantified by the distance between the 2 xml trees dot the distance represents how much 2 trees are similar comma by the aspects of structure and meaning dot esd punct element simulation distance punct is a metric described on the article which quantifies the above punct mentioned distance dot,error of approximation punct abstract,-28,-17,11,normal.
20,60,0.216666666666667,0.216666666666667,0.05,experimental study data sets punct imdb punct real punct life data set from the internet movie data base dot xmark punct synthetic data set that models transactions on an online punct action dot swissprot punct real punct life data set with annotations on proteins dot workload punct 1000 random twig queries dot evaluation metrics punct average esd for approximate answers,experimental study data sets punct,-17,6,23,normal.
28,3,0,1,0,data sets characteristics,,6,-8,-14,normal.
21,17,0.352941176470588,0.352941176470588,0.0588235294117647,approximate answers imdb punct punct 102k elements punct avg dot result size punct 3 comma 477 tuples,approximate answers imdb punct punct,-8,0,8,normal.
19,20,0.35,0.45,0.05,approximate answers xmark punct punct 103k elements punct avg dot result size punct 2 comma 436 tuples dot treeskethces twigxskethces,approximate answers xmark punct punct,0,0,0,normal.
19,20,0.35,0.45,0,approximate answers swissport punct punct 182k elements punct avg dot result size punct 104 comma 592 tuples dot treeskethces twigxskethces,approximate answers swissport punct punct,0,-26,-26,normal.
27,14,0.285714285714286,0.285714285714286,0,construction times construction times punct minutes punct for treesketches and twig punct xsketches dot,construction times construction times punct,-26,66,92,normal.
28,85,0.211764705882353,0.0588235294117647,0.235294117647059,error of approximation let nts punct q punct be the approximate nesting tree that is computed over a concise synopsis ts comma and let nt punct q punct be the true nesting tree of the query q dot the error of approximation is quantified by the distance between the 2 xml trees comma denoted as dista punct nts punct q punct comma nt punct q punct punct dot we will use the tree punct edit distance metric comma which measure only the syntactic differences dot,error of approximation let nts,66,-2,-68,normal.
21,45,0.2,0.133333333333333,0.177777777777778,tree punct edit distance metric the tree punct edit distance diste punct t1 comma t2 punct between 2 xml trees measures the minimum cost sequence of edit operations the transform t1 to t2 dot operations on tree nodes punct basic punct punct adding deleting relabeling,tree punct edit distance metric,-2,0,2,normal.
11,55,0.381818181818182,0.163636363636364,0.418181818181818,tree punct edit distance metric punct example query answer t approximation t1 approximation t2 diste punct t comma t1 punct punct 3 zz zz punct sc punct punct 3 zz zz punct sc punct punct 3 zz zz punct sc punct punct 3 zz zz punct sd punct punct diste punct t comma t2 punct,tree punct edit distance metric,0,189,189,normal.
29,61,0.163934426229508,0.131147540983607,0.114754098360656,element simulation distance new distance metric for xml trees dot considers both the overall path structure and the distribution of document edges dot defined recursively dot uses existing distance metric such as mac punct match and compare punct and emd punct earth mover zz zz zz s distance punct dot 	note punct these metrics are not described on the article dot,element simulation distance new distance,189,-206,-395,normal.
15,62,0.0967741935483871,0.0645161290322581,0.290322580645161,element simulation distance mac punct a numerical measure to quantify the quality of an approximate answer to a set punct valued query dot emd punct measures a distance between 2 distributions comma which reflects the minimal amount of work that must be performed to transform one distribution into the other by moving zz zz zz distribution mass zz zz zz around dot,element simulation distance mac punct,-206,-3,203,normal.
31,134,0.208955223880597,0.119402985074627,0.470149253731343,element simulation distance let u zz zz zz t1 v zz zz zz t2 be elements of the compared trees where label punct u punct punct label punct v punct dot let ut comma vt denote the children sets of u comma v respectively comma that have tag t dot esd punct u zz zz zz comma v zz zz zz punct denotes the distance between any 2 elements u zz zz zz zz zz zz ut comma v zz zz zz zz zz zz vt dot the distance dist zz zz punct ut comma vt punct between ut comma vt is defined by using an existing value set distance metric comma like mac or emd dot esd punct u comma v punct punct zz zz dist zz zz punct ut comma vt punct,element simulation distance let u,-3,-1,2,normal.
27,117,0.290598290598291,0.094017094017094,0.418803418803419,element simulation distance assume without loss of generality that vt punct zz zz dot for each element e zz zz zz ut comma we insert a unique element ev in vt with distance esd punct e comma ev punct punct punct e punct comma where punct e punct is the sub punct trees size of e comma and esd punct e zz zz zz comma ev punct punct zz zz zz comma for all e zz zz zz zz zz zz ut comma e zz zz zz zz zz zz e dot esd between two trees punct 		esd punct t1 comma t2 punct punct esd punct root punct t1 punct comma root punct t2 punct punct dot,element simulation distance assume without,-1,-5,-4,normal.
31,132,0.295454545454545,0.0984848484848485,0.363636363636364,esd punct example let u comma v be the left a elements of t and t1 respectively dot element u comma v have children of tags c and d and thus 	esd punct u comma v punct punct dist zz zz punct uc comma vc punct punct dist zz zz punct ud comma vd punct dot 	esd punct ci comma cj punct comma ci zz zz zz uc comma cj zz zz zz vc are equal to 0 comma since the elements have identical sub punct trees dot notice that the 2 value sets contain equal values but at different multiplicities dot 	using the mac metric punct 	dist zz zz punct uc comma vc punct punct 8 punct punct esd punct u comma v punct punct 8 punct 0 punct 8 dot,esd punct example let u,-5,2,7,normal.
22,35,0.285714285714286,0.0857142857142857,0.485714285714286,esd zz zz zz example cont dot let v zz zz zz be the left element a of t2 dot dot dot dot esd punct u comma v zz zz zz punct punct 6 dot,esd zz zz zz example,2,-100,-100,normal.
0,1,0,1,0,questions,,-100,-100,-100,na.
0,3,0.333333333333333,0.666666666666667,0,thank you punct,,-100,-100,-100,na.
35,31,0.129032258064516,0.419354838709677,0.32258064516129,zz adaptive xml storage adaptive xml storage or the importance of being lazy nihan zz zz zman 26 dot 10 dot 2005 instructor punct prof dot taflan g zz zz ndem	,zz adaptive xml storage adaptive,-100,-11,-100,normal.
40,57,0.12280701754386,0.12280701754386,0.157894736842105,xml data building an xml store means finding solutions to the problems of representing comma accessing comma querying and updating xml data dot relational database systems rely on a fixed punct schema of records to represent and manage data dot being irregular in structure and content comma xml data does not seem to allow this approach dot,xml data building an xml,-11,0,11,normal.
31,84,0.130952380952381,0.0476190476190476,0.142857142857143,this paper dot dot dot describes how the notion of database record has been extended and applied to xml storage how the resulted store abstracts the structure of the xml data from the actual storage format the contributions of the paper are punct 	 punct a punct the problem definition for xml stores 	 punct b punct an adaptive xml store and flexible index structures based on the existence of the xml store 	 punct c punct an evaluation of lazy punct partial index,this paper dot dot dot,0,0,0,normal.
15,52,0.134615384615385,0.153846153846154,0.115384615384615,overview problem punct the irregularity of the structure and usage of xml becomes a big obstacle in achieving good performance during accesing comma querying and updating xml data dot new challanges efficient query evaluation dot efficient access and retrieval of xml data dot maintainment of document order dot optimizing xml updates dot,overview problem punct the irregularity,0,-4,-4,normal.
46,91,0.120879120879121,0.032967032967033,0.241758241758242,overview punct 2 existing approaches lack a uniform way of representing and thinking of xml dot focus on one aspect of xml storage and assume that the application will adapt to a particular usage pattern dot function as all punct or punct nothing as regards indexing comma where advantages gained by knowing all node information is lost in poor performance updates dot so comma one can not achieve everything at once comma but should focus on what it can achieve at a given moment comma in a given usage context dot,overview punct 2 existing approaches,-4,-1,3,normal.
40,66,0.106060606060606,0.0909090909090909,0.181818181818182,overview punct 3 this paper presents ranges as a flat representation of desiderata for an xml store dot ranges are logical units similar to tuples in relational databases comma whose size and existence is defined by the application usage patterns ranges provides a lazy approach to storing comma accessing and indexing xml data dot ranges offer enough flexibility to have application punct dependent indexing units dot,overview punct 3 this paper,-1,-9,-8,normal.
21,57,0.105263157894737,0.368421052631579,0.087719298245614,xml store desiderata punct 1 requirements for an xml store store and access any instances of the xquery data model support for xml update allow optimization of reads and punct or updates indexes support different node identifer schemas punct support for stable and comparable identifies punct low storage overhead support psvi punct post schema validation infoset punct,xml store desiderata punct 1,-9,-7,2,normal.
45,65,0.138461538461538,0.138461538461538,0.153846153846154,xml store desiderata punct 2 the xquery data model supports a wide range of xml applications comma either read punct oriented or heavy punct update scenarios dot psvi avoids repeated evaluation of xml schema dot low storage overhead incurs by minimizing the quantity of data actually stored dot node identifiers are assigned comma according to the xquerymodel to each node in the data instance dot,xml store desiderata punct 2,-7,-1,6,normal.
71,56,0.107142857142857,0.0714285714285714,0.160714285714286,xml store desiderata punct 3 the store should support read operations comma entire data source or a single node the store should support update operations that specify a node and allow insertions of the data relative to this node punct as previous siblings comma next sibling comma first child or last child of the node punct,xml store desiderata punct 3,-1,-4,-3,normal.
56,77,0.116883116883117,0.103896103896104,0.194805194805195,optimizing reads vs dot optimizing updates typical storage systems are faced with challenges of optimizing read operations or update operations required by the application a store that achieves both optimality is a utopia dot punct ex punct the structures required to support read operations comma fast indexes comma negatively influence the performance of update operations punct in the paper comma a middle approach is taken for optimizing one or the other depending on the application load dot,optimizing reads vs dot optimizing,-4,-1,3,normal.
69,46,0.0434782608695652,0.108695652173913,0.173913043478261,xml representation the requirements for xml store have been fulfilled in the particular case of an xml store dot there are 3 important choices punct the xml representation the definition of an arbitrarily granular unit range the flexible index structures based on the existence of range,xml representation the requirements for,-1,-3,-2,normal.
54,78,0.0769230769230769,0.0897435897435897,0.230769230769231,choosing an xml representation for representing or storing comma xml data is either shredded on a relational database comma special index structures or the combination of the two there is usually a strong relationship between storing and representing xml on one side comma indexing and querying it on the other side dot current approaches do not seperate them dot the adaptivity requirement in this paper zz zz zz s approach provides both data independence and flexible granularity dot,choosing an xml representation for,-3,-6,-3,normal.
37,57,0.157894736842105,0.210526315789474,0.192982456140351,a flexible representation punct 1 to denote each part of the xquery data model comma tokens comma that are a materialization of enriched sax punct simple api for xml punct events comma are used dot nodes in the xquery data model comma who must have an associated identifier comma are also represented by a sequence of tokens,a flexible representation punct 1,-6,-6,0,normal.
41,89,0.112359550561798,0.168539325842697,0.168539325842697,a flexible representation punct 2 this representation of the xquery data model offers punct complete representation of the xquery data model independence of the api used in the actual application punct flat model as opposed to tree punct based or event punct based representation punct allows flexible data granularity punct token is the most granular unit and tokens can be grouped in more specific units punct post schema validation info set punct token sequence can also be associated to the xml schema type derived after a schema validation punct,a flexible representation punct 2,-6,-3,3,normal.
40,53,0.0943396226415094,0.0754716981132075,0.188679245283019,storage model punct 1 the storage model of the xml data in the store presented consists of token sequences serialized in sequential blocks punct pages in document order dot tokens offer a flat representation of the xml data comma independent of the actual data model of the application that uses the store dot,storage model punct 1 the,-3,0,3,normal.
34,47,0.148936170212766,0.148936170212766,0.127659574468085,storage model punct 2 for example comma each time data is inserted in the store punct the corresponding tokens are generated and stored in the corresponding positions in the storage dot blocks are allocated accordingly dot node ids comma requested in the xquery datamodel are generated dot,storage model punct 2 for,0,-6,-6,normal.
69,82,0.0975609756097561,0.0975609756097561,0.195121951219512,implementing database records for xml the interface to the store defines read comma insert and update operations dot all operations are defined relative to a target node identifier dot so comma it is nodes corresponding to these identifiers that need to be quickly located dot existing approaches to xml data storage take the options of full data indexing in order to optimize queries and accelerate access to specific parts of xml data dot in this way comma updates are too expensive dot,implementing database records for xml,-6,-1,5,normal.
62,65,0.0769230769230769,0.0923076923076923,0.169230769230769,discarding the option of a full index the advantage of a full index is the ability to quickly locate nodes dot on the other hand comma it has main disadvantages punct inserts and updates are more expensive storage requirements are very high the index grows in size for data punct intensive applications and the vast majority of the entries will not even be used dot,discarding the option of a,-1,-5,-4,normal.
53,86,0.127906976744186,0.127906976744186,0.313953488372093,the notion of range range is a sequence of tokens dot each sequence of tokens can constitute a range dot in presented model comma a range is implemented as a sequence of variable punct sized tokens comma where in relational database systems comma a record is implemented as a sequence of variable punct sized fields dot range is defined by the usage pattern of the application comma not by a fixed schema dot an order between ranges is needed to preserve document order of tokens dot,the notion of range range,-5,-2,3,normal.
40,82,0.134146341463415,0.158536585365854,0.170731707317073,the range index punct coarse punct grained index punct the range index is for locating the range corresponding to an id specified in an update operation dot ranges represents insert units where full index would have contained all ids individually dot range index contains less entries comma it refers to an interval of identifiers dot node identifiers need not to be stored together with the tokens they refer to dot the advantage is better space utilization punct low storage overhead punct dot,the range index punct coarse,-2,-3,-1,normal.
66,44,0.136363636363636,0.136363636363636,0.0909090909090909,the storage model ranges are the logical storage units dot storage level comprises chained blocks comma which comma at their turn comma contain ordered ranges dot document order is preserved through the chaining of blocks and through the ordering of ranges inside blocks dot,the storage model ranges are,-3,-9,-6,normal.
36,105,0.219047619047619,0.161904761904762,0.19047619047619,functionality of the range index zz a simple usage scenario punct 1 there is an initially empty data source dot the operations performed punct punct 1 punct insert 2 sibling nodes punct contains 100 nodes in total punct punct 2 punct insert a child punct 40 nodes punct as the last child of the node which is identified by 60 punct 	insertintolast punct 60 comma punct punct new data punct punct punct tokens are created for the inserted data comma and they are stored sequentially on the pages dot node ids are created comma but only the ranges are inserted in the range index dot,functionality of the range index,-9,-2,7,normal.
28,125,0.2,0.152,0.264,functionality of the range index zz a simple usage scenario punct 2 effects of each step on the range index punct punct 1 punct allocate 100 identifiers for the inserted nodes comma create range 1 with ids 1 punct 100 and store it in block 1 dot punct 2 punct insertion of the child punct punct 2a punct locate second node using the range index punct id is in range 1 punct punct 2b punct locate range and offset of the end token of the node with the id 60 punct 2c punct split range number 1 in two punct create range 3 punct punct 2d punct create a new range corresponding to the inserted data punct 2 punct and allocate 40 unique identifiers dot,functionality of the range index,-2,-6,-4,normal.
54,35,0.2,0.257142857142857,0.228571428571429,functionality of the range index zz a simple usage scenario punct 3 punct 2e punct store the new range punct block 1 punct and insert the split range in the storage punct blocks 2 punct,functionality of the range index,-6,-13,-7,normal.
30,75,0.146666666666667,0.173333333333333,0.146666666666667,the lazy punct partial index punct 1 the notion of range and range index allows to optimize update operations punct fewer entries are inserted to the range index punct dot by the way comma reads become more expensive dot nodes can not be accessed directly and additional lookups need to be performed dot the solution is the notion of partial index punct using the advantages of the full index comma but only when needed dot,the lazy punct partial index,-13,-1,12,normal.
37,86,0.13953488372093,0.0697674418604651,0.151162790697674,the lazy punct partial index punct 2 the result of lookup operations comma performed during updates comma is inserted in the partial index comma either punct the range of a token the offset of a token inside its range the location punct range comma offset punct of the end token of the node inside the range the position of the end token of the node inside dot the partial index stores information on the individual nodes punct their exact ranges and offset inside the range dot,the lazy punct partial index,-1,-1,0,normal.
39,60,0.1,0.183333333333333,0.183333333333333,the lazy punct partial index punct 3 the partial index is actually a combination between a real index and a cache dot the combination of the range index and the partial index achieves the goal of being adaptive comma flexible and lazy in xml world the aim is not to index everything comma but only if and when needed dot,the lazy punct partial index,-1,-8,-7,normal.
47,99,0.161616161616162,0.101010101010101,0.242424242424242,the lazy punct partial index punct 4 referring to the previous example punct punct 1 punct considered empty at the beginning comma inserting on empty data source does not create entries in partial index punct 2 punct inserting a new node punct 2a punct locating node with id 60 using the range index in range 1 punct a new entry is inserted in the partial index to indicate the range punct 2b punct locating the end token of the id 60 comma means that after the insert comma the location of the end token is the range 3 dot,the lazy punct partial index,-8,-7,1,normal.
45,85,0.0823529411764706,0.0588235294117647,0.258823529411765,orthogonality of id schemes indexing xml data relies heavily on the fact that nodes in an xml document are assigned an identifier update operations are expressed based on these identifiers indexes can be build on top of them dot proposed model provides a separation from the api of the application punct a range can span over several nodes comma or over parts of a node punct represented as a sequence of tokens punct ids of nodes are comma orthogonal to the way of indexing dot,orthogonality of id schemes indexing,-7,-2,5,normal.
47,65,0.123076923076923,0.2,0.230769230769231,low storage overhead punct 1 the range index is a coarse punct grained index punct lower storage overhead over full index punct the range index uses properties of ids for locating the range of a node with the given id punct id punct is the set of node identifiers in the store punct r punct is the set of all ranges in the range index,low storage overhead punct 1,-2,-2,0,normal.
58,59,0.0847457627118644,0.152542372881356,0.271186440677966,low storage overhead punct 2 a range is defined as a sequence of tokens in document order dot by only storing the identifiers of the first node inside a range comma further decrease storage overhead can be obtained dot the id schemes with this property generate the id of the next token id using a simple factory function punct,low storage overhead punct 2,-2,-4,-2,normal.
74,106,0.0754716981132075,0.0943396226415094,0.179245283018868,stable and comparable identifiers stable identifiers are the way to build indexes on the store punct external and based on logical node identifiers dot stable identifiers can be obtained by assigning unique integer number to nodes at insert times this approach allows to define actual ranges of ids ids inside ranges are comparable ids inside ranges a semi punct stable document order at read time can be obtained punct tokens are stored in document order and read sequentially punct the combination of order between ranges and order of ranges in the storage comma can also be put in connection to partially punct stable identifier schemes dot,stable and comparable identifiers stable,-4,-4,0,normal.
44,33,0.242424242424242,0.303030303030303,0.151515151515152,experiments experimental setup punct based punct on relational database comma java and jdbc used pentium 4 2 comma 8ghz punct 512mb ram comma running suse linux9 dot 0 comma and using a mysql,experiments experimental setup punct based,-4,1,5,normal.
68,45,0.133333333333333,0.0666666666666667,0.133333333333333,predictions the identifier scheme associates unique integer values to each node comma at insert time dot only ranges become entries in the index dot a memory punct based partial index adds information on the location of tokens inside ranges punct begin and end token punct,predictions the identifier scheme associates,1,-2,-3,normal.
80,75,0.12,0.0533333333333333,0.16,parameters the parameters that influence the results of benchmark punct size of the ranges number of the ranges a course punct grained index means low update overhead but large overhead at read and lookup dot an index containing many entries leads to performance decrease at insert time dot the partial index improves reads especially in the case of more coarse punct granular range sizes comma as it builds entries lazily punct cache punct like punct,parameters the parameters that influence,-2,-1,1,normal.
78,49,0.183673469387755,0.0612244897959184,0.163265306122449,micro benchmarks inserts comma sequential reads random reads of small pieces of data in the presence of a full index comma range index comma respectively the combination of range index punct partial index the metric is kilobytes punct second punct read speed comma relative to data size punct dot,micro benchmarks inserts comma sequential,-1,-1,0,normal.
70,9,0.111111111111111,0.222222222222222,0.222222222222222,experimental results punct zz lazy indexing in xml storage,experimental results punct zz lazy,-1,-7,-6,normal.
81,73,0.136986301369863,0.136986301369863,0.0958904109589041,results the results reflect the expected behavior the range index clearly brings advantages in what regards update speed punct less entries are entered the index as the number of entries increases comma the advantages diminish punct many comma granular entries punct the partial index helps to achieve cheaper reads and lookups punct especially when the range index is coarse punct more optimizations of the read punct update punct storage overhead is considered dot,results the results reflect the,-7,-2,5,normal.
21,37,0.0810810810810811,0.135135135135135,0.135135135135135,related work abstraction of tree model of the xml data is used to define partial indexes dot usage of variable punct size range and varying granularity are not entirely contained dot logic identifiers have not been studied,related work abstraction of tree,-2,-4,-2,normal.
30,27,0.0740740740740741,0.185185185185185,0.222222222222222,conclusions and future work the paper describes a data representation and model of an xml store comma inspired by the notion of records in relational databases dot,conclusions and future work the,-4,0,4,normal.
70,59,0.0338983050847458,0.0677966101694915,0.186440677966102,advantages independence of proposed data format from the api used by the xml application the possibility to adapt to the application pattern the store achieves this by lazily creating its storage and index structures optimizes for reads or updates according to how the application focuses on one or the other dot the process is transparent to the application dot,advantages independence of proposed data,0,-2,-2,normal.
39,58,0.0344827586206897,0.172413793103448,0.172413793103448,aspects to explore the effect of functionality of the partial index structural properties of the actual elements of the xquery datamodel concurrency non punct relational world the principles of storage already defined in the context by relational database systems comma the issue that differs from the relational world is the necessity to always maintain the order between ranges,aspects to explore the effect,-2,-100,-100,normal.
31,40,0.275,0.375,0.225,characterizing database user zz zz zz s zz access patterns qingsong yao comma aijun an and xiangji huang punct qingsong comma aan punct punct cs dot yorku dot ca comma jhuang punct yorku dot ca york university toronto comma canada,characterizing database user zz zz,-100,-39,-100,normal.
17,56,0.0714285714285714,0.535714285714286,0,topics motivation user access patterns frequently performed queries comma time punct resource punct consuming queries dot user access event and user access graph mining and modeling user access patterns log data collection and preprocessing sql query classification database user identification database session identification database session clustering database session modeling using user access patterns related works conclusion,topics motivation user access patterns,-39,28,67,na.
25,175,0.0914285714285714,0.0628571428571429,0.217142857142857,motivation the analysis of database workload plays an important role in optimizing the performance of database systems dot previous workload analysis methods are from the view of the server comma such as statistical summaries punct buffer hit ratio dot it has been brought into attention that analysis of task punct oriented user sessions provides useful insight into query behaviour of database users dot a database user session is a sequence of queries issued by a user punct or an application punct to achieve a certain task dot it consists of one or more database transactions comma which are in turn a sequence of operations performed as a logical unit dot the sql queries submitted by a client or a user have specific meaning and have certain format dot the queries within a user session follow certain business logics or rules and have certain order dot our research tries to solve the question of how to model database user behavior punct how to find database user behavior efficiently punct how to use database user behavior punct,motivation the analysis of database,28,-22,-50,normal.
28,85,0.0823529411764706,0.0588235294117647,0.223529411764706,user access patterns we use user access patterns to describe the behaviours of a client application or a group of users dot the user access patterns of a client application or a user group contains punct a collection of frequently performed queries dot a collection of time punct resource punct consuming queries dot a collection of frequent user access event associated with the parameter distributions that represent the query format a collection of frequent user access graphs that represent the query execution order dot 	,user access patterns we use,-22,22,44,normal.
44,225,0.128888888888889,0.0488888888888889,0.28,user access event and user access graph a user access event represents a set of similar queries dot it contains a sql template and a set of parameters sql template punct each value of a query is replaced by char zz zz zz punct zz zz zz dot parameters punct the corresponding values in the query comma and can be constants or variables dot for example comma event punct zz zz zz select punct from customer where id punct zz zz zz punct zz zz zz comma cid punct represent a set of queries retrieving a given customer zz zz zz s info dot a user access graph is a directed dependency graph comma that represents the query execution order within a user session or the session execution order of a user the graph has one start node and one or more end nodes a node has a support value that is the frequency within session dot an edge is represented by punct i comma j comma k punct comma where k is the probability of j following i comma which is called the confidence value dot a basic user access graph comma whose nodes are events represent the query execution order dot a high punct level user access graph comma whose nodes are graphs describes the orders among sessions of the same user dot,user access event and user,22,-19,-41,normal.
24,161,0.136645962732919,0.0434782608695652,0.37888198757764,q33 can not be anticipated since the value zz zz zz t202 zz zz zz is unknown before it is requested comma but q34 does dot thus comma q33 contains a action that assigning variable g punct tid as zz zz zz t202 zz zz zz an instance of treatment history retrieving session punct p3 punct q30 punct select count punct tid punct from treatment where cid punct zz zz zz c101 zz zz zz q31 punct select tid from treatment where cid punct zz zz zz c101 zz zz zz q32 punct select tid from treatment where cid punct zz zz zz c101 zz zz zz 	and status punct zz zz zz 1 zz zz zz q33 punct select punct from treatment punct details where tid punct zz zz zz t202 zz zz zz q34 punct select card name from treatment punct payment	 	 where tid punct zz zz zz t202 zz zz zz an example of user access graphs,q33 can not be anticipated,-19,27,46,normal.
28,73,0.10958904109589,0.164383561643836,0.10958904109589,mining user access patterns database workload characterizing is based on database traces dot traces are a collection of measures comma such as pages read punct written comma locks comma sql statements comma produced by all transactions being processed by the dbms within a time interval dot the mining algorithm contains following steps punct trace data collection and preprocessing sql query classification database user identification database session identification database session clustering database session modeling,mining user access patterns database,27,-3,-30,normal.
28,139,0.129496402877698,0.0935251798561151,0.136690647482014,mining user access patterns punct 1 punct trace data collection and preprocessing trace data can be collected either at the client punct mediator comma or at the server dot client punct side tools can monitor client requests and server responses dot server punct side tools can monitor different kinds of event occurred in the server dot noise data and irrelevant data are removed comma and log entries are transformed to meaningful format dot frequent queries and time punct resource punct consuming queries are obtained dot query classification each sql query is transformed into an sql template and a set of parameters dot a user access event is assigned for each sql template dot the parameter value distributions of a user access event are obtained dot a sequence of events obtained by replacing the query with the corresponding event dot,mining user access patterns punct,-3,-13,-10,normal.
22,2,0,1,0.5,an example,,-13,8,21,na.
24,139,0.122302158273381,0.0863309352517986,0.158273381294964,mining user access patterns punct 2 punct punct database user identification the concept of punct user punct is not the database user that directly connects to the database server comma but the user of database punct based application in a client punct server application comma requests submitted by the same application from the same address and use the same database connection are belonging to the same user dot it is non punct trivial task to identify users from the traces when database users don zz zz zz t connect to the database server directly comma and may share database connections dot queries within a user session usually has the same database connection comma thus identifying sessions can help to find users dot other kinds of log comma such as web access log can help to find database users dot,mining user access patterns punct,8,0,-8,na.
17,155,0.103225806451613,0.103225806451613,0.193548387096774,mining user access patterns punct 3 punct zz punct user session identification the task of session identification is to separate database sessions from a sequence of requests punct events dot the most commonly used session identification method is called timeout dot assuming that the think punct time between user sessions is longer than that between the events of a session dot this session identification method suffers from the problem that it is difficult to set the time threshold dot statistical language modeling punct n punct gram model punct based session identification method is proposed dot using an information theoretic approach to identify session boundaries dynamically by measuring the change of information in the sequence of requests dot has been demonstrated to be more effective than timeout and two other methods in discovering association rules in a web mining dot the successful use of this method depends on how to select values for some parameters dot,mining user access patterns punct,0,-10,-10,na.
11,104,0.134615384615385,0.0576923076923077,0.259615384615385,n punct gram models given a sequence of words comma what is the next possible word punct markov assumption punct the probability of a words depends only on the probability of a limited history dot n punct gram model punct the probability of a word depends on the previous n punct 1 words comma n is called the order of the model given a string w with n words comma the possibility that it is spoken is data sparsity problem punct training data is not big enough to get that much information comma unseen sequence get 0 probability dot solution punct smoothing and discounting,n punct gram models given,-10,10,20,na.
16,227,0.180616740088106,0.066079295154185,0.277533039647577,assumption punct given a sequence w punct w1 comma zz zz zz comma wn punct comma if w crosses session boundary comma p punct w punct is low comma otherwise comma p punct w punct is high dot problem punct probability is not a good measurement dot is a probability value 0 dot 05 small or large punct use entropy value instead dot the empirical entropy of the model on a sentence w with size n is punct punct 1 punct n punct log2p punct w punct entropy is average number of bits per word required to encode test data using this probability model comma and an optimal coder dot entropy is usually between 0 and 10 dot a small probability means a large entropy value comma and the sequence may contain boundaries dot theory punct suppose a set of queries for a task that are frequently issued one after another dot in this case comma the entropy of the sequence is low dot however comma when a new query is observed in the sequence that is not relevant to the original task punct but in fact indicates a shift to a new task punct comma it causes an increase in the entropy of the sequence dot such an entropy increase serves as a signal for session boundary detection dot session identification with n punct gram model,assumption punct given a sequence,10,-13,-23,na.
16,78,0.269230769230769,0.179487179487179,0.41025641025641,use a slide window of size n to process event sequence w punct w1 comma zz zz zz comma wi zz zz zz zz zz zz dot comma for each wi comma assign an entropy value 	value punct wi punct punct entropy punct wi punct n punct 1 comma zz zz zz dot wi punct 1 comma wi punct session identification with n punct gram model punct 2 punct entropy value suddenly increases at a session boundary dot,use a slide window of,-13,13,26,na.
14,155,0.161290322580645,0.0903225806451613,0.129032258064516,the probabilities come from training data dot three kinds of training data punct session identification method exist punct supervised learning punct training data consists of a set of sessions have been identified dot the frequencies of inter punct sesession sequence are set to 0 dot unsupervised learning punct training data is un punct separated request sequence dot contains both inter punct session and intra session frequencies dot more sensitive to the model parameters comma such as entropy threshold and n punct gram order dot semi punct supervised learning punct training data contains part of the boundary points and are thus partially separated by the boundary points dot for supervised learning comma cross punct entropy is used to choose parameters for the data set dot for unsupervise and semi punct supervised learning comma a development data set is used to choose the parameters comma and applying to the data set dot training data and probability estimate,the probabilities come from training,13,-100,-100,na.
0,3,0,1,0,entropy evolution curves,,-100,-100,-100,na.
16,137,0.233576642335766,0.0875912408759124,0.124087591240876,f punct measure punct assume the corrected sessions for test data is known and compare the estimated sessions with the corrected sessions dot f punct measure is defined as 2 punct precision punct recall punct punct precision punct recall punct recall is the hit punct rate punct hit sessions punct total punct sessions punct and precision is the ratio of correct hits to proposed punct hit sessions punct estimated punct sessions punct dot higher f punct measures means better overall performance dot cross punct entropy punct use the n punct gram model to compress the estimated session set comma if the sessions are accurate comma the entropy value is small dot the entropy value is called cross punct entropy for the test data dot can only be used for supervised punct learning method dot performance measurement metric,f punct measure punct assume,-100,15,-100,na.
9,18,0.166666666666667,0.333333333333333,0.111111111111111,relationship between f punct measure and cross entropy f punct measure and cross punct entropy has invert relationship,relationship between f punct measure,15,2,-13,na.
12,81,0.160493827160494,0.0987654320987654,0.148148148148148,parameter selection zz zz zz threshold value performance of n punct gram method greatly depends on the threshold dot automatic method for choosing a threshold is proposed punct estimate average session length from training data punct development data estimate num dot of sessions in test data punct length punct punct average session length punct obtain the value for each point and sort them in decreasing order dot the value near the position length punct punct average session length punct is chosen,parameter selection zz zz zz,2,-17,-19,na.
13,90,0.166666666666667,0.0555555555555556,0.266666666666667,parameter selection zz zz zz n punct gram order an order between 2 and 8 is generally good dot the performance with a lower order punct from 2 to 5 punct is better than that with a higher order punct from 6 to 8 punct dot the best order value is the model with minimal cross punct entropy on the test data punct for supervised learning punct or that with maximal f punct measure on the development data punct for un punct supervised learning or semi punct supervised learning punct,parameter selection zz zz zz,-17,-52,-35,na.
2,11,0.363636363636364,0.636363636363636,0,performance comparisons supervised punct semi punct supervised punct unsupervised punct timeout,performance comparisons supervised punct semi,-52,43,95,na.
15,154,0.201298701298701,0.0844155844155844,0.220779220779221,mining user access patterns punct 4 punct zz punct user session classification the task of session clustering is to group session instances to different session groups dot the number of groups is unknown comma and it is a un punct supervised learning procedure dot a distance punct based session clustering algorithm is proposed punct consider each session instance as a session group comma and calculate the distance between them dot groups are merged according to the intra punct group distances comma intra punct group distances are updated correspondingly dot the clustering procedure will stop when all intra punct group distances are more than a pre punct defined distance threshold dot distance between two sessions i and j is defined as punct distance punct i comma j punct punct 1 dot 0 zz zz zz sim punct i comma j punct comma where sim punct i comma j punct is the similarity between two sessions,mining user access patterns punct,43,9,-34,normal.
13,183,0.278688524590164,0.0765027322404372,0.295081967213115,mining user access patterns punct 4 punct zz punct user session classification cont dot three similarity scores are proposed punct coefficient score punct treat i and j as un punct ordered item set comma the score is the fraction of common events between them punct 			csim punct i comma j punct punct punct i zz zz zz j punct punct punct i zz zz zz j punct alignment score punct asim punct punct treat i and j as request sequences comma aligns them first comma calculates the score based on the aligned sequences dot neighborhood score punct nsim punct punct is the common neighbors between i and j dot zz zz zz two sequences are neighbor if their distance based on the above two scores exceeds certain threshold zz zz zz the overall similarity between i and j is 	sim punct i comma j punct punct a punct csim punct i comma j punct punct b punct asim punct i comma j punct punct c punct nsim punct i comma j punct comma where a punct b punct c punct 1 dot 0,mining user access patterns punct,9,13,4,na.
15,189,0.238095238095238,0.0846560846560847,0.232804232804233,mining user access patterns punct 4 punct zz punct user session classification cont dot in sequence alignment comma two or more strings are aligned together in order to get the highest similarity score dot gaps may be inserted into a string in order to shift the remaining characters into better matches dot two sequence punct abcdd punct and punct abed punct are aligned as punct 			abcdd punct abed punct treat a session sequence as a piece of programming code dot the code may contain branches punct such as if punct else punct or loops punct such as for punct loop and while punct loop punct dot we assign each match with a score of 2 punct a comma and b punct comma each branch with a score of 1 punct c punct e punct comma and each loop with a score of 1 punct dd punct d punct dot to normalize the score comma we divide the value with the length of the aligned sessions dot the length is defined as 2 punct punct num dot of matches punct num dot of branches punct num dot of loops punct,mining user access patterns punct,13,-28,-41,na.
15,98,0.163265306122449,0.173469387755102,0.163265306122449,mining user access patterns punct 4 punct zz punct user session classification cont dot clustering algorithms punct random sampling n sessions comma clustering the sessions into different session groups dot assigning the session remaining in the disk to the groups obtained in step 1 comma creating new group if necessary dot question punct how to choose similarity parameters a comma b and c punct the parameters are the weight of the three similarity scores dot how to choose clustering threshold punct depending on the application domain how to deal with short session punct with some expert knowledge dot,mining user access patterns punct,-28,6,34,na.
12,100,0.3,0.11,0.16,model user access patterns punct 1 punct task punct building user access graph for each session group dot markov model based user access graph generation scan all session instances comma generate states and state transitions prune states and transitions based on min dot support and confidence build state transition diagram first punct order and second punct order pruned punct markov models for session instances punct a comma b comma c punct comma punct a comma b comma c comma b punct comma punct a comma b comma d punct comma punct a comma b comma d comma b punct are,model user access patterns punct,6,22,16,na.
20,184,0.146739130434783,0.0978260869565217,0.239130434782609,model user access patterns punct 2 punct task punct find the relationship between nodes of graph solution punct using idea of functional dependency inference all node parameters make a virtual database relation r all session instances make a instance r of r find function dependencies from relation instance r discovery dependency functions or decision rules prove dependencies and functions with the help of expert extension punct how to deal with parameters within the same node punct how to deal with branch comma i dot e dot comma some parameters will not appear in a session punct assign a zz zz zz unknown zz zz zz value to the columns how to deal with loop comma i dot e dot comma some parameters have multiple values in a session punct 1 punct consider columns that agree on all values in all sessions dot 2 punct consider sequence matching dot how to deal with query result comma i dot e dot comma the value of a parameter may be the execution of a query punct hard punct must have the original data of the database dot,model user access patterns punct,22,-21,-43,na.
15,59,0.23728813559322,0.101694915254237,0.203389830508475,dependency discovery example col row col32 punct 2 is a constant comma col33 punct 1 is an independent variable comma col31 punct 1 comma col32 punct 2 are dependent variables dot what is the relationship between the result of v32 with col33 punct 1 punct what about variable col30 punct 1 punct use high punct level graph relationship dot,dependency discovery example col row,-21,8,29,na.
14,128,0.1640625,0.09375,0.3359375,performance evalution how to measure the accuracy of session clustering and session modeling algorithm punct idea punct model punct based session classification dot given a session instance s comma try to classify it into a session group g by using model punct based bayesian classification algorithm dot if s and g has minimal distance comma it is a zz zz zz hit zz zz zz dot model punct based request prediction dot given a request sequence punct r1 comma zz zz zz dot rn punct comma try to predict the next request r by using model punct based prediction algorithm dot if we predict the next request correctly comma it is a zz zz zz hit zz zz zz dot use f punct measure to measure the performance,performance evalution how to measure,8,18,10,na.
16,105,0.20952380952381,0.0380952380952381,0.323809523809524,experimental results mining result for a client punct server application punct 12 instances of the application comma and 9 comma 344 sql queries dot 190 user access events dot 718 user request sequences belong to 21 frequent user access graphs broken q3 into two queries comma q2 zz zz zz and q2 zz zz zz zz zz zz dot q2 zz zz zz comma q3 comma q4 can be rewrite as punct select count punct punct punct as num comma card punct id comma contract punct last comma contract punct first from customer where cust punct num punct zz zz zz 1074 zz zz zz,experimental results mining result for,18,-35,-53,normal.
25,157,0.159235668789809,0.0764331210191083,0.121019108280255,usage of user access patterns user access patterns can help to optimize sql query to gain fast execution time dot find the system bottleneck comma i dot e dot comma resource punct consumed queries and frequently punct performed queries dot redesign punct optimize them tune the database system dot distinguish the step of finding user behaviors with the step of using them dot tuning database system based on user access patterns is better than analyzing the queries in a workload dot anticipate and pre punct fetch incoming queries dot try to match user request sequence with a user access graph comma and predict the next query dot rewrite queries for caching dot find the relationship between queries comma and rewrite a query to answer subsequent queries dot process queries by using rules dot design a rule punct based database gateway comma use rules to rewrite comma pre punct fetch queries dot find possible data distributions or relationships,usage of user access patterns,-35,-5,30,normal.
28,136,0.139705882352941,0.0808823529411765,0.139705882352941,sql punct relay punct an event punct driven comma rule punct based database gateway each incoming query is one kind of event dot each event associates with a set of pre punct defined execution rules dot sql punct relay contains a set of standard routine to process a given execution rule dot previous query results are cached for answering incoming queries dot two kinds of query cache punct global caches and local caches dot different cache selection and replacement policies are used for different kinds of cache dot a global rewriting rule aims to rewrite a single query to improve query performance punct a pre punct fetching rule predicts the next query and pre punct fetches the answer according to user request sequence dot a local rewriting rule rewrites current query to answer multiple queries dot,sql punct relay punct an,-5,43,48,normal.
15,116,0.198275862068966,0.163793103448276,0.0862068965517241,related works workload characterization clustering database transaction punct based on physical resources punct discovering and using physical resource reference pattern punct disk i punct o comma buffer pool punct predicting and prefetch olap queries dot query stream processing the idea and algorithms discussed can be used on web punct based session identification and clustering dot database cache server and gateway dbcache punct ibm punct comma timesten punct timesten punct comma oracle 9i database cache dot all caches database tables dot mysql has server punct side query caches dot information integrator punct ibm punct allows users to retrieve information from different data sources by using standard query language dot it rewrite queries according to certain rule dot,related works workload characterization clustering,43,-43,-86,normal.
15,210,0.204761904761905,0.180952380952381,0.380952380952381,references q dot yao comma a dot an zz zz zz using user access patterns for semantic query caching zz zz zz in dexa 2003 q dot yao comma a dot an zz zz zz characterizing database user zz zz zz s access patterns zz zz zz in dexa 2004 q dot yao comma a dot an zz zz zz sql punct relay punct an event punct driven comma rule punct based database gateway zz zz zz in dexa 2004 q dot yao comma x dot huang comma a dot an zz zz zz applying language modeling to session identification from database trace logs zz zz zz comma submitted for publication q dot yao comma x dot huang comma a dot an zz zz zz finding and clustering database user sessions zz zz zz comma submitted for publication dot i dot t dot bowman comma k dot salem comma zz zz zz optimization of query streams using semantic prefetching zz zz zz comma in sigmod 2004 dot x dot huang and f dot peng and a dot an and d dot schuurmans comma zz zz zz dynamic web log session identification with statistical language models zz zz zz comma journal of jasist comma special issue on webometrics comma 2003 dot,references q dot yao comma,-43,43,86,normal.
17,60,0.0833333333333333,0.166666666666667,0.133333333333333,conclusion and future work we propose the idea of user access pattern to represent database user navigation behaviors we propose algorithms to cluster sql queries comma identify users and sessions comma cluster and model sessions dot several approaches of using user access patterns are discussed dot future work punct researching on large scale database extending to web log and applications,conclusion and future work we,43,-100,-100,normal.
63,12,0.0833333333333333,0.166666666666667,0.166666666666667,cost punct based labeling of groups of mass spectra sigmod conference 2004,cost punct based labeling of,-100,-100,-100,normal.
12,14,0,0.571428571428571,0,overview	 introduction problem formulation proposed algorithms theoretical cost analysis experimental results and discussion comments,overview	 introduction problem formulation proposed,-100,-251,-100,na.
18,9,0,0.777777777777778,0.222222222222222,introduction working of aerosol time of flight mass spectrometer,introduction working of aerosol time,-251,385,636,normal.
40,3,0,1,0,mass spectrum labeling,,385,-11,-396,normal.
33,291,0.206185567010309,0.0412371134020619,0.43298969072165,problem formulation a mass spectrum can be represented as a normalized vector b comma where zz zz i bi punct 1 and bi is the relative signal intensity at m punct z value i dot the signature of an ion is a vector s comma such that zz zz i si punct 1 comma representing the distribution of its isotopes comma i dot e dot comma si is the relative abundance of isotopes with m punct z value i dot a signature library is a set of signatures s punct punct s1 comma s2 comma dot dot dot comma sn punct where sj is the signature of chemical ion j dot if we arrange the n signatures in the signature library in order comma the signature library can be represented as a matrix a punct punct s1 comma s2 comma dot dot dot comma sn punct comma where the kth column in matrix a presents signature k dot the labeling task consists of finding an n punct dimensional vector x such that x punct j punct is the relative abundance of chemical ion j dot ax punct b comma x zz zz zz 0 to account for noise comma measurement errors and calibration discrepancies define a distance function d and error bound e comma then the solution space of spectrum b is lb punct punct a punct d punct aa comma b punct punct e and a zz zz zz 0 punct the solution can be found using the lp model min zz zz i si s dot t punct aa punct b punct zz zz zz s and punct aa punct b punct zz zz zz punct s where a zz zz zz 0 comma s zz zz zz 0,problem formulation a mass spectrum,-11,-164,-153,normal.
25,99,0.313131313131313,0.0808080808080808,0.232323232323232,solution to the problem the lp model has infinite number of solutions we care about solutions which are significantly different how to deal with continuous infinite space punct punct a threshold vector t punct punct t1 comma t2 comma dot dot dot comma td punct divides each dimension of the search space into d ranges and the index vector i punct punct punct l1 comma h1 punct comma punct l2 comma h2 punct comma dot dot dot comma punct ln comma hn punct punct the of single spectrum labeling reduces to subspace searching punct zheng huang et al punct,solution to the problem the,-164,109,273,normal.
32,128,0.2421875,0.109375,0.3359375,group spectrum labeling a group of spectra that is collected at a single location over a short time punct span is likely be similar dot given a group of spectra punct bi punct we can find a label set punct li punct which consist of labels of the form punct xi punct each of length n define support punct x punct punct punct punct li punct xi zz zz li punct punct punct punct li punct group label punct given a group of spectra b punct punct bi punct and a threshold min sup comma x is a group label if the support of x w dot r dot t dot b is greater than min sup dot how to solve this punct punct punct mining frequent patterns,group spectrum labeling a group,109,-29,-138,normal.
58,138,0.27536231884058,0.130434782608696,0.355072463768116,method1 punct dfs voting algorithm depth first search punct subspace s punct 	if punct zz zz is feasible punct s punct punct 		return 	else 		if punct s is a cell punct punct punct cell corresponds to the finest granularity 			output the corresponding label of s 		else 			pick dimension punct j punct 			split s into a set of subspaces punct si punct s dot t dot each si is not divisible on 			dimension j 			for each result subspace si 				depth first search punct si punct 			end for dfsvoting punct si comma c zz zz zz punct c punct punct b punct b zz zz c comma s is feasible w dot r dot t dot b punct punct c zz zz zz punct punct min punct sup punct w dfsvoting punct subspace s comma set of spectra c punct,method1 punct dfs voting algorithm,-29,-35,-6,normal.
41,115,0.217391304347826,0.11304347826087,0.391304347826087,method 2 punct candidate generation and test gentest l punct punct punct b0 punct punct punct 1 zz zz zz min sup punct punct w punct 1 spectra randomly chosen from b punct for each b in b0 	find fi comma the label set of b 	l punct l u fi 	for each label l in fi 		l dot count punct punct for each spectrum b in b zz zz zz b0 	for each l in l 		if l is a label for the b 		l dot count punct punct punct for each label l in l if punct l dot count punct min sup punct w punct output l as a solution group label,method 2 punct candidate generation,-35,-12,23,normal.
23,116,0.28448275862069,0.155172413793103,0.370689655172414,cost analysis estimate the effect of various inputs on the overall cost of the algorithm study the characteristics of the data punct input w dot r dot t to the algorithm notations punct csingle cost of labeling a single spectrum csingle punct d punct punct n punct 1 punct punct m cvoting cost of dfsvoting algorithm cgentest cost of gentest algorithm cgentest punct csingle punct punct w zz zz zz t punct 1 punct punct punct t zz zz zz 1 punct punct m punct punct punct 1 zz zz zz s punct w punct punct punct w zz zz zz t punct 1 punct punct 1 punct where t punct w punct min punct sup,cost analysis estimate the effect,-12,-141,-129,normal.
18,19,0.0526315789473684,0.263157894736842,0.210526315789474,algorithm profile algorithm choice depends on the choice of min punct sup value algorithm choice also depends on s,algorithm profile algorithm choice depends,-141,123,264,normal.
16,21,0,0.142857142857143,0.0952380952380952,decision plot the boundary between the two regions corresponds to the intersection points between the two methods in the algorithm profile,decision plot the boundary between,123,-119,-242,normal.
40,2,0,1,0,system graph,,-119,-10,109,normal.
22,32,0.0625,0.125,0.15625,results and discussion how close are the derived estimates based on cost metrics to experimental results punct how good is the cost estimation in terms of deriving the right decision plot punct,results and discussion how close,-10,0,10,normal.
16,25,0,0.16,0.16,results and discussion how good is the theoretically derived decision plot in making decisions regarding algorithm selection the differences observed were found to be tolerable,results and discussion how good,0,294,294,normal.
17,22,0,0.227272727272727,0.136363636363636,comments problem formulation in data mining framework evaluation of different algorithms algorithm profiling and cost based optimization analogy to market basket analysis,comments problem formulation in data,294,-100,-100,na.
37,17,0.117647058823529,0.823529411764706,0.0588235294117647,deriving private information from randomized data zhengli huang wenliang punct kevin punct du biao chen syracuse university,deriving private information from randomized,-100,-100,-100,normal.
22,17,0.0588235294117647,0.941176470588235,0,privacy punct preserving data mining data mining data collection data disguising central database classification association rules clustering,privacy punct preserving data mining,-100,-153,-100,normal.
33,12,0.0833333333333333,0.666666666666667,0.25,random perturbation punct original data x random noise r disguised data y,random perturbation punct original data,-153,-77,76,normal.
12,6,0.166666666666667,0.666666666666667,0.166666666666667,how secure is randomization perturbation punct,how secure is randomization perturbation,-77,137,214,normal.
19,84,0.321428571428571,0.119047619047619,0.392857142857143,a simple observation we can zz zz zz t perturb the same number for several times dot if we do that comma we can estimate the original data punct let t be the original data comma disguised data punct t punct r1 comma t punct r2 comma zz zz zz comma t punct rm let z punct punct punct t punct r1 punct punct zz zz zz punct punct t punct rm punct punct punct m mean punct e punct z punct punct t,a simple observation we can,137,-60,-197,normal.
16,67,0.313432835820896,0.0895522388059701,0.402985074626866,this looks familiar zz zz zz this is the data set punct x comma x comma x comma x comma x comma x comma x comma x punct random perturbation punct punct x punct r1 comma x punct r2 comma zz zz zz zz zz zz comma x punct rm punct we know this is not safe dot observation punct the data set is highly correlated dot,this looks familiar zz zz,-60,31,91,normal.
19,50,0.24,0.08,0.34,let zz zz zz s generalize punct data set punct punct x1 comma x2 comma x3 comma zz zz zz zz zz zz comma xm punct if the correlation among data attributes are high comma can we use that to improve our estimation punct from the disguised data punct punct,let zz zz zz s,31,-117,-148,normal.
25,31,0.0967741935483871,0.387096774193548,0.387096774193548,data reconstruction punct dr punct original data x disguised data y distribution of random noise reconstructed data x zz zz zz what zz zz zz s their difference punct data reconstruction,data reconstruction punct dr punct,-117,239,356,normal.
18,11,0.181818181818182,0.727272727272727,0,reconstruction algorithms principal component analysis punct pca punct bayes estimate method,reconstruction algorithms principal component analysis,239,-79,-318,na.
66,5,0.2,0.6,0,pca punct based data reconstruction,,-79,0,79,normal.
27,11,0.0909090909090909,0.818181818181818,0,pca punct based reconstruction disguised information reconstructed information squeeze information loss,pca punct based reconstruction disguised,0,-74,-74,normal.
15,21,0.19047619047619,0.380952380952381,0,how punct observation punct original data are correlated dot noise are not correlated dot principal component analysis useful for lossy compression,how punct observation punct original,-74,72,146,normal.
11,40,0.15,0.05,0.175,pca introduction the main use of pca punct reduce the dimensionality while retaining as much information as possible dot 1st pc punct containing the greatest amount of variation dot 2nd pc punct containing the next largest amount of variation dot,pca introduction the main use,72,-23,-95,normal.
21,28,0.178571428571429,0.178571428571429,0.214285714285714,for the original data they are correlated dot if we remove 50 punct of the dimensions comma the actual information loss might be less than 10 punct dot,for the original data they,-23,1,24,normal.
31,36,0.166666666666667,0.166666666666667,0.222222222222222,for the random noises they are not correlated dot their variance is evenly distributed to any direction dot if we remove 50 punct of the dimensions comma the actual noise loss should be 50 punct dot,for the random noises they,1,24,23,normal.
33,16,0.125,0.6875,0.125,pca punct based reconstruction original data x disguised data reconstructed data pca compression de punct compression,pca punct based reconstruction original,24,0,-24,normal.
37,7,0.285714285714286,0.714285714285714,0,bayes punct estimation punct based data reconstruction,bayes punct estimation punct based,0,-74,-74,normal.
25,21,0.0476190476190476,0.523809523809524,0.333333333333333,a different perspective what is the most likely x punct disguised data y possible x possible x possible x random noise,a different perspective what is,-74,-7,67,normal.
21,48,0.375,0.125,0.375,the problem formulation for each possible x comma there is a probability punct p punct x punct y punct dot find an x comma s dot t dot comma p punct x punct y punct is maximized dot how to compute p punct x punct y punct punct,the problem formulation for each,-7,89,96,normal.
29,37,0.432432432432432,0.108108108108108,0.405405405405405,the power of the bayes rule p punct x punct y punct is difficult punct p punct x punct y punct punct p punct y punct x punct p punct y punct p punct x punct punct,the power of the bayes,89,-83,-172,normal.
20,86,0.383720930232558,0.0930232558139535,0.372093023255814,computing p punct x punct y punct punct p punct x punct y punct punct p punct y punct x punct punct p punct x punct punct p punct y punct p punct y punct x punct punct remember y punct x punct r p punct y punct punct a constant punct we don zz zz zz t care punct how to get p punct x punct punct this is where the correlation can be used dot assume multivariate gaussian distribution the parameters are unknown dot,computing p punct x punct,-83,-38,45,normal.
22,66,0.106060606060606,0.166666666666667,0.545454545454545,multivariate gaussian distribution a multivariate gaussian distribution each variable is a gaussian distribution with mean zz zz zz i mean vector zz zz zz punct punct zz zz zz 1 comma zz zz zz comma zz zz zz m punct covariance matrix zz zz zz both zz zz zz and zz zz zz can be estimated from y so we can get p punct x punct,multivariate gaussian distribution a multivariate,-38,53,91,normal.
23,34,0.294117647058824,0.294117647058824,0.352941176470588,bayes punct estimate punct based data reconstruction original x disguised data y randomization estimated x which x maximizes p punct x punct y punct p punct x punct p punct y punct x punct,bayes punct estimate punct based,53,-100,-100,normal.
0,1,0,1,0,evaluation,,-100,-100,-100,normal.
40,5,0,0.6,0.2,increasing the number of attributes,,-100,-22,-100,normal.
50,8,0.125,0.625,0.125,increasing eigenvalues of the non punct principal components,increasing eigenvalues of the non,-22,127,149,normal.
12,6,0.166666666666667,0.5,0.166666666666667,how to improve random perturbation punct,how to improve random perturbation,127,-141,-268,normal.
19,47,0.106382978723404,0.106382978723404,0.212765957446809,observation from pca how to make it difficult to squeeze out noise punct make the correlation of the noise similar to the original data dot noise now concentrates on the principal components comma like the original data x dot how to get the correlation of x punct,observation from pca how to,-141,1,142,normal.
28,2,0,1,0,improved randomization,,1,218,217,normal.
20,49,0.163265306122449,0.244897959183673,0.102040816326531,conclusion and future work when does randomization fail punct answer punct when the data correlation is high dot can it be cured punct using correlated noise similar to the original data still unknown punct is the correlated punct noise approach really better punct can other information affect privacy punct,conclusion and future work when,218,-100,-100,normal.
15,39,0.128205128205128,0.384615384615385,0.205128205128205,cmpe 521 punct principles of database systems agile punct adaptive indexing for context punct aware information filtres by jens punct peter dittrich peter m dot fischer donald kossmann fall 2005 presented by zz zz erif baht zz zz yar,cmpe 521 punct principles of,-100,-165,-100,normal.
20,25,0.2,0.64,0.04,outline introduction problem statement context punct aware information filters state punct of punct the punct art adaptive indexing punct agile performance experiments and results conclusion,outline introduction problem statement context,-165,160,325,na.
51,90,0.0777777777777778,0.0555555555555556,0.188888888888889,introduction information filtering has become a key technology for modern information systems the goal of an information filter is to route messages to the right recipients punct possibly none punct according to declarative rules called profiles dot this paper presents agile comma a way to extend existing index structures so that the indexes adapt to the message punct update workload and show good performance in all situations dot the focus of all that work was on the development of scalable index structures in order to group and index profiles dot,introduction information filtering has become,160,-5,-165,normal.
40,79,0.0632911392405063,0.113924050632911,0.240506329113924,introduction a major shortcoming of the existing approaches is that they are very inefficient if profiles refer to values in a database that are subject to change dot this paper presents context punct aware information filters punct cif punct differences of cif has two input streams a stream of messages comma a stream of context updates provides a unified solution to tailor information delivery the challenge of building a cif is to route messages and record contex updates efficiently,introduction a major shortcoming of,-5,-5,0,normal.
39,69,0.144927536231884,0.115942028985507,0.101449275362319,introduction use cases for cif message broker with state punct a message broker routes messages to a specific application and location dot generalized location punct based services punct with an increased availability of mobile comma yet network punct connected devices comma the possibilities for personalized information delivery have multiplied dot stock brokering punct financial information systems require sending only the relevant market updates to specific applications or brokers dot,introduction use cases for cif,-5,-7,-2,normal.
47,82,0.109756097560976,0.158536585365854,0.170731707317073,introduction contribution summary introduce the concept of a context punct aware information filter introduce a cif punct architecture in which intermediary filter stages are allowed to generate false positives as trade punct in for higher update rates dot to ensure correctness comma false positives are eliminated in a separate post punct filtering step presents the generic algorithm agile dot this algorithm extends best punct of punct breed index structures to automatically adapt to high update rates the results of comprehensive performance experiments,introduction contribution summary introduce the,-7,-4,3,normal.
72,64,0.078125,0.078125,0.171875,problem statement 	given a large set of profiles comma high message rates and varying rates of context updates comma provide the best possible throughput of messages dot no message must be dropped or sent to the wrong user because a change in context has not yet been considered by the filter dot this constraint rules out methods that update the context only periodically dot,problem statement 	given a large,-4,-4,0,normal.
40,58,0.0689655172413793,0.0689655172413793,0.258620689655172,problem statement context punct a set of attributes associated with an entity punct the values of those attributes can change at varying rates dot the only assumption that is made in this work is that the values of an attribute of a context can change and that these changes are triggered by a stream of context updates dot,problem statement context punct a,-4,-2,2,normal.
22,15,0.133333333333333,0.2,0.333333333333333,problem statement messages punct a message is a set of attributes associated to values dot,problem statement messages punct a,-2,-2,0,normal.
33,46,0.108695652173913,0.130434782608696,0.239130434782609,problem statement profiles punct a profile is a continuous query specifying the information interests of a subscriber dot expressions in profiles can refer to a static condition or a dynamic context dot static conditions change relatively seldom in contrast comma context information can change frequently dot,problem statement profiles punct a,-2,-12,-10,normal.
52,129,0.193798449612403,0.124031007751938,0.186046511627907,context punct aware information filters zz cif processing model the cif keeps profiles of subscribers and context information dot the cif receives two input streams punct a message stream and a context update stream dot these two streams are serialized so that at each point in time either one message or one update is processed dot handle punct message punct message m punct punct find all profiles that match the given message m comma considering the current context state dot update punct context punct context c comma attribute a comma value v punct punct set the attribute a of context c to the new value v comma i dot e dot c dot a punct punct v dot all profiles referencing this context must consider this new value dot,context punct aware information filters,-12,2,14,normal.
35,15,0.133333333333333,0.333333333333333,0.133333333333333,context punct aware information filters zz cif architecture a cif has four main components dot,context punct aware information filters,2,-9,-11,normal.
50,47,0.0638297872340425,0.127659574468085,0.148936170212766,context punct aware information filters zz cif architecture context management punct manages context information dot stores the values of static attributes and values of context attributes which are used in predicates of profiles any context change is recorded by this component interacts heavily with indexes and postfiltering,context punct aware information filters,-9,-1,8,normal.
33,137,0.138686131386861,0.0948905109489051,0.211678832116788,context punct aware information filters zz cif architecture indexes punct filtering can be accelerated by indexing the profiles or predicates of the profiles dot the most important method supported by an index is probe comma which is invoked by the cif zz zz zz s handle punct message method dot probe takes a message as input and returns a set of profiles that potentially match that message dot an index can be classified by four different aspects punct target punct value index or structure index punct accuracy punct exact index or fuzzy index punct punct probing can result false positive dimensionality punct single index or several index punct scope punct full index or partial index punct the key idea to implementing adaptive context punct aware information filters is to control the accuracy and scope of indexes dot,context punct aware information filters,-1,-9,-8,normal.
23,30,0.0666666666666667,0.2,0.166666666666667,context punct aware information filters zz cif architecture merge punct takes several intermediate result sets of profiles as input and carries out conjunctions and disjunctions on those sets of predicates,context punct aware information filters,-9,-3,6,normal.
32,49,0.102040816326531,0.142857142857143,0.204081632653061,context punct aware information filters zz cif architecture postfilter punct eleminates false positives dot in other words comma it takes a set of profiles as input and checks which profiles match the message by reevaluating the predicates of the profiles based on the current state of the context dot,context punct aware information filters,-3,-4,-1,normal.
39,66,0.166666666666667,0.136363636363636,0.212121212121212,state punct of punct the punct art zz no index the brute punct force approach is to use no index at all dot all the work is carried out in the postfilter operation dot the main advantage is the update punct context operation is cheap dot negative side comma the handle punct message operation is expensive because the postfilter operation is applied to all profiles dot,state punct of punct the,-4,-9,-5,normal.
45,80,0.1125,0.1125,0.175,state punct of punct the punct art zz eager full indexing the opposite to the noindex approach is an approach that makes aggressive use of indexes and keeps all indexes uptodate and 100 percent accurate dot the big advantage of eager is that the handle punct message operation is as cheap dot the big disadvantage of the eager approach is that the update punct context operation is expensive because it involves maintaining indexes comma potentially with every context update dot,state punct of punct the,-9,12,21,normal.
44,11,0.272727272727273,0.545454545454545,0.181818181818182,state punct of punct the punct art zz eager full indexing,state punct of punct the,12,-14,-26,normal.
45,83,0.132530120481928,0.108433734939759,0.265060240963855,state punct of punct the punct art zz partial indexing the idea of partial indexes is to reduce the cost of the update punct context operation by reducing the scope of an index dot if an update is outside the scope of an index comma then the index need not be updated dot all non punct indexed values must be processed in a brute punct force manner dot the most important issue is how to define the scope of a partial index dot,state punct of punct the,-14,-4,10,normal.
45,103,0.106796116504854,0.0776699029126214,0.223300970873786,state punct of punct the punct art zz lazy updates comma gbu lately comma there has been work on moving object databases and the basic insight of that work is that updates often exhibit a high degree of locality dot the idea is that updates that remain within the bounding box of a leaf node of an index are not propagated to non punct leaf nodes of the index punct propagation only occurs if the new value is outside of the bounding box of the old value dot if propagation is necessary comma then locality is also exploited as much as possible dot,state punct of punct the,-4,-4,0,normal.
35,72,0.0416666666666667,0.0972222222222222,0.222222222222222,adaptive indexing punct agile zz general idea the key idea of agile is to dynamically reduce the accuracy and scope of an index if context updates are frequent and to increase the accuracy and scope of an index if context updates are seldom and handle punct message calls are frequent dot the operation to reduce the accuracy is called escalation the operation that increases the accuracy of an index is called deescalation,adaptive indexing punct agile zz,-4,-16,-12,normal.
52,116,0.232758620689655,0.0603448275862069,0.25,adaptive indexing punct agile zz general idea punct example in order to implement agile on a binary tree comma the structure of a node is extended dot in addition to the key k comma every node has three sets of identifiers punct left punct this is a set of escalated identifiers punct i dot e dot comma profiles punct which are associated with the key range punct zz zz zz comma k punct right punct this is a set of escalated identifiers punct i dot e dot comma profiles punct which are associated with the key range punct k comma punct punct exact punct the set of non punct escalated identifiers which are associated with k,adaptive indexing punct agile zz,-16,-4,12,normal.
36,51,0.176470588235294,0.176470588235294,0.333333333333333,adaptive indexing punct agile zz general idea zz zz zz example escalation figure 5 shows how an identifier comma a comma is escalated dot this operation is triggered by increasing the stock of warehouse a by one punct i dot e dot comma a context update from two to three dot,adaptive indexing punct agile zz,-4,-2,2,normal.
34,48,0.104166666666667,0.166666666666667,0.25,adaptive indexing punct agile zz general idea zz zz zz example cheap update the index need not be adjusted at all in order to reflect this change and comma thus comma the update punct context operation is as cheap as for the noindex approach in this case dot,adaptive indexing punct agile zz,-2,-1,1,normal.
50,80,0.05,0.1125,0.2625,adaptive indexing punct agile zz general idea zz zz zz example deescalation it is triggered if the handle punct message operation is called several times for orders and warehouse a was returned by the index as a potential candidate and had to be filtered out by the postfilter step dot deescalating from a left or right set of a leaf node involves inserting a new leaf node and moving the identifier into the exact set of this new node dot,adaptive indexing punct agile zz,-1,-5,-4,normal.
35,52,0.288461538461538,0.115384615384615,0.288461538461538,adaptive indexing punct agile zz properties of agile indexes formally comma every index maps each key k to a set of identifiers punct i punct dot this mapping is returned by the probe operation of an index comma i dot e dot probe punct k punct punct punct punct i punct dot,adaptive indexing punct agile zz,-5,-100,-100,normal.
50,7,0.142857142857143,0.428571428571429,0.142857142857143,adaptive indexing punct agile zz agile algorithm,adaptive indexing punct agile zz,-100,-100,-100,normal.
77,95,0.157894736842105,0.105263157894737,0.242105263157895,adaptive indexing punct agile zz agile indexes zz zz zz agile interval skip lists punct isl punct an isl is a hierarchical index structure that is applicable to all ordered domains punct e dot g dot comma numerical values comma dates punct dot each identifier of a profile is associated with one or more ranges of values dot furthermore comma each range is associated with a set of identifiers dot ranges are organized hierarchically so that all ranges covering a given value can be found more quickly punct logarithmic complexity in the average case punct,adaptive indexing punct agile zz,-100,1,-100,normal.
33,17,0.176470588235294,0.352941176470588,0.235294117647059,adaptive indexing punct agile zz agile indexes zz zz zz agile interval skip lists punct isl punct,adaptive indexing punct agile zz,1,-8,-9,normal.
66,122,0.139344262295082,0.131147540983607,0.229508196721311,adaptive indexing punct agile zz agile indexes zz zz zz other agile index structures hash table punct an escalation is implemented by associating an identifier with the whole domain of values dot effectively comma this means deleting the identifier from the hash table and keeping it in a separate list of identifiers that are returned for every probe dot deescalations are implemented by re punct inserting the identifier into the hash table and deleting it from the escalate list dot b punct tree comma b punct punct tree comma r punct tree punct logically comma an escalation is implemented by moving an identifier into the buffer of its parent dot deescalations are implemented by moving an identifier to a child node dot,adaptive indexing punct agile zz,-8,-3,5,normal.
35,98,0.0918367346938776,0.112244897959184,0.244897959183673,adaptive indexing punct agile zz agile indexes zz zz zz deescalation policies ideally comma an index should be deescalated if the cost for the deescalation is lower than the cost of eliminating false positives in the postfilter step of future handle message operations dot some simple heuristics always punct every false positive encountered by the postfilter triggers a deescalation dot fixed punct a fixed number of false positives fp is ignored until a deescalation is performed dot auto punct auto operates like fixed and ignores a certain number of false positives fp before a deescalation is triggered dot,adaptive indexing punct agile zz,-3,-24,-21,normal.
36,62,0.129032258064516,0.258064516129032,0.241935483870968,performance experiments and results zz software and hardware used in order to implement the individual components comma the following design choices were made punct context management indexes merge postfilter all software was implemented in c punct punct dot all experiments were performed on a 3 dot 2 ghz pentium 4 machine with 2 gb of ram running linux 2 dot 4 dot,performance experiments and results zz,-24,-2,22,normal.
52,50,0.12,0.18,0.1,performance experiments and results zz workload when selecting the workloads to test the different methods comma researchers followed the requirements derived from the use cases dot the number of profiles is high comma most profiles refer to contexts dot low comma high and varying context update rates are studied dot,performance experiments and results zz,-2,-11,-9,normal.
54,34,0.117647058823529,0.264705882352941,0.205882352941176,performance experiments and results zz experiment 1 punct throughput in steady state figure 11 shows the relative throughput comma normalized to the throughput of agile dot table 3 shows the absolute throughput results dot,performance experiments and results zz,-11,-13,-2,normal.
34,54,0.111111111111111,0.166666666666667,0.277777777777778,performance experiments and results zz experiment 1 punct throughput in steady state a more detailed understanding of these results can be gained by looking at the number of executed index updates punct table 4 punct and the number of profiles that need to be inspected in the postfilter operation punct table 5 punct dot,performance experiments and results zz,-13,-6,7,normal.
32,59,0.186440677966102,0.169491525423729,0.186440677966102,performance experiments and results zz experiment 2 punct vary updatt the experiment studies the impact of varying the distribution of updates to indexed and non punct indexed attributes punct updatt punct dot figure 12 shows the total time used to execute a workload of 10 dot 000 messages and 500 mio dot updates punct up punct 1000 punct dot,performance experiments and results zz,-6,-2,4,normal.
37,80,0.1125,0.0875,0.3625,performance experiments and results zz experiment 3 punct vary zz zz zz u both gbu and agile take advantage of the locality of context updates dot figure 13 shows the completion time for varying zz zz zz u from very high update locality punct zz zz zz u close to 0 punct to very low update locality punct zz zz zz u punct 2 comma 500 which is 25 percent of the whole scope of possible attribute values punct dot,performance experiments and results zz,-2,-14,-12,normal.
50,57,0.12280701754386,0.175438596491228,0.192982456140351,performance experiments and results zz experiment 4 punct update burst figure 14 shows the throughput at different moments in time punct the throughput is computed for every batch of 100 messages dot it can be seen that the message throughput drops during the update burst punct between message 1 comma 000 and message 2 comma 000 punct,performance experiments and results zz,-14,-9,5,normal.
54,41,0.121951219512195,0.219512195121951,0.146341463414634,performance experiments and results zz experiment 4 punct update burst figure 15 and table 6 show how alternative deescalation strategies fare in this experiment dot indeed comma auto outperforms fixed in this experiment comma but the differences are not large dot,performance experiments and results zz,-9,-4,5,normal.
40,84,0.0595238095238095,0.0952380952380952,0.214285714285714,conclusion information filtering has matured to a key information processing technology dot this work provides simple extensions to existing index structures for information filtering systems dot the key idea is to adapt the accuracy and scope of an index to the workload of a context punct aware information filter dot improve the message throughput of a context punct aware information filter robust to poor physical design can gradually adjust to changes in the locality of updates is able to deal with workloads with bursts,conclusion information filtering has matured,-4,-100,-100,normal.
0,2,0.5,0,0,questions punct,,-100,-100,-100,na.
30,18,0.111111111111111,0.444444444444444,0.388888888888889,automatic physical database tuning punct a relaxation punct based approach bet zz zz l demir zz zz z,automatic physical database tuning punct,-100,-100,-100,normal.
19,47,0.0638297872340425,0.0425531914893617,0.170212765957447,introduction dbms applications have become increasingly complex combinatorial explosion of physical structures to consider structures interact with each other the problem cannot be divided into simpler comma independent sub punct goals to reduce dbms zz zz zz s total cost comma automated physical design tools are used,introduction dbms applications have become,-100,-1,-100,normal.
75,37,0.0810810810810811,0.135135135135135,0.27027027027027,automatic physical design problem punct i w punct workload of representative queries and updates b punct space constraint find the set of physical structures that finds lowest estimated execution cost of queries in w fits in b,automatic physical design problem punct,-1,3,4,normal.
19,36,0.0555555555555556,0.388888888888889,0.111111111111111,automatic physical design problem punct ii aim handle large workloads and multiple kinds of physical structures recent techniques very complex difficult to analyze and extract properties proposed technique simple comma complexity is reduced gives comparable recommendations,automatic physical design problem punct,3,-141,-144,normal.
3,2,0,1,0,problem statement,,-141,141,282,normal.
23,36,0.0277777777777778,0.333333333333333,0.111111111111111,automated selection of physical design recent solutions candidate access paths are heuristicly chosen bottom punct up search is used to identify the best overall configuration proposed solution indexes and views are recommended reduces assumptions and heuristics,automated selection of physical design,141,-8,-149,normal.
26,71,0.028169014084507,0.211267605633803,0.126760563380282,recent techniques what punct if api determine impact without actually materializing physical design dependence on the optimizer keep optimizer and its cost model in sync with the tuning process search framework find a good set of candidate structures indexes and views augment the initial candidate set by merging two or more candidates together search the augmented space bottom punct up techniques are used greedy algorithm or knapsack and subsequent random permutations,recent techniques what punct if,-8,1,9,normal.
14,50,0.18,0.5,0.2,database tuning compress workload candidate selection zz punct per query punct enumeration time punct yes no merging tuning zz client zz zz zz query optimizer database server what punct if zz api metadata punct create hypothetical index punct view dot zz punct optimize query with respect to hypothetical configurations dot,database tuning compress workload candidate,1,-6,-7,normal.
28,78,0.0384615384615385,0.128205128205128,0.141025641025641,proposed technique punct i agrees with what punct if api and dependence on the optimizer changes search framework find a good set of candidate structures for complex queries comma candidate structures can be very large bound on the maximum number of candidate structures to consider per query and rank the candidates using heuristics combine merging and enumeration steps generate many alternatives during merging not to miss good solutions put some constraints over merged structures to avoid large growth,proposed technique punct i agrees,-6,-3,3,normal.
35,60,0.0666666666666667,0.0333333333333333,0.233333333333333,proposed technique punct ii a small set of physical structures are identified structures are guaranteed to result in an optimal configuration a different search technique is used opposite of bottom punct up search start with a large configuration time punct wise optimal but too large to fit in the available storage shrink it using transformations advantages punct quality and performance,proposed technique punct ii a,-3,5,8,normal.
13,46,0.130434782608696,0.478260869565217,0.195652173913043,new architecture zz zz zz query optimizer database server what punct if zz api metadata relaxation time punct yes no tuning client request identification get optimal configuration zz punct per query punct instrumenting the query optimizer dot search strategy based on relaxations dot requests zz api,new architecture zz zz zz,5,-12,-17,normal.
43,65,0.0307692307692308,0.0923076923076923,0.215384615384615,instrumenting the query optimizer optimization of a single query plan is an instance of a template tree that has one or more index seeks at the leaf nodes combines the leaf nodes by binary intersections or unions applies rid lookup to retrieve missing columns applies filter operator for non punct sargable predicates applies a sort operator to enforce order applicable to view requests comma too,instrumenting the query optimizer optimization,-12,-5,7,normal.
42,12,0.5,0.25,0.25,alternative index strategies punct a punct punct b punct punct c punct,alternative index strategies punct a,-5,-10,-5,normal.
27,5,0,0.6,0.2,overview of the query optimizer,,-10,-16,-6,normal.
33,3,0,0.333333333333333,0,bounding the improvement,,-16,-6,10,normal.
32,131,0.145038167938931,0.0610687022900763,0.267175572519084,relaxation punct based search relaxing a configuration is replacing some structures by smaller but less efficient ones advantages merging and enumeration steps are interleaved dot merged structures are obtained lazily comma on demand re punct optimizing a relaxed configuration to evaluate its cost is more efficient c1 has an index on punct a comma b punct c2 has an index on punct a comma d punct replace c1 and c2 with c3 c3 has an index on punct a comma b comma d punct re punct optimize queries that used relaxed structures bottom punct up strategy punct re punct optimize all queries that reference the index table provides more useful information to the db administrator good configurations are iteratively relaxed at the end of tuning process comma we have many alternatives,relaxation punct based search relaxing,-6,-100,-100,normal.
16,2,0,1,0,sample tuning,,-100,-100,-100,normal.
33,47,0,0.127659574468085,0.106382978723404,relaxing configurations replacing a subset of its indexes and views resulting configuration is smaller at the cost less efficient progressively relaxing configurations results with the optimal configuration fits in the available space slightly less efficient than the initial one there are two transformations index transformations view transformations,relaxing configurations replacing a subset,-100,-3,-100,normal.
26,157,0.509554140127389,0.0254777070063694,0.305732484076433,index transformations punct i merging obtain the best index i1 comma 2 that can answer all requests either i1 or i2 makes i1 punct punct punct a comma b comma c punct punct punct d comma e comma f punct punct and i2 punct punct punct c comma d comma g punct punct punct e punct punct i1 comma 2 punct punct punct a comma b comma c punct punct punct d comma e comma f comma g punct punct splitting splitting i1 and i2 produces ic punct common index punct and residual indexes ir1 and ir2 i1 punct punct punct a comma b comma c punct punct punct d comma e comma f punct punct and i2 punct punct punct a comma c punct punct punct e punct punct ic punct punct punct a comma c punct punct punct e punct punct comma ir1 punct punct punct b punct punct punct d comma f punct punct,index transformations punct i merging,-3,-4,-1,normal.
42,40,0.025,0.125,0.275,index transformations punct ii prefixing obtain an index that can answer arbitrary requests promotion to clustered any index i over table t can be promoted to a clustered index removal any index can be removed to obtain a new configuration,index transformations punct ii prefixing,-4,-13,-9,normal.
42,28,0.0357142857142857,0.142857142857143,0.357142857142857,view transformations merging all information from v1 and v2 can be obtained in v1 comma 2 removal any view v can be removed to obtain a new configuration,view transformations merging all information,-13,-1,12,normal.
28,4,0,0.75,0,template for search algorithm,,-1,-9,-8,normal.
27,25,0,0.24,0.16,configurations and transformations relaxing configurations transform configurations useful in other configurations search space is very large crucial to develop good heuristics to guide the search,configurations and transformations relaxing configurations,-9,-2,7,normal.
41,67,0.0597014925373134,0.0746268656716418,0.238805970149254,estimating configuration properties critical properties of a given configuration in a physical design problem the space the current configuration punct c punct consumes the expected execution cost of the workload when c is available dot to make a good decision on applying the given transformation comma we should know the amount of space consumption decrease the expected execution cost increase it is hard to guess these properties,estimating configuration properties critical properties,-2,-5,-3,normal.
42,64,0,0.078125,0.296875,space consumption space consumed by a configuration is the sum of sizes of all its physical structures indexes and views to estimate the space consumed by an index calculate the width of an entry in any node or page calculate the number of entries per page and node the space consumed by a view is estimated as the sum of sizes of each index,space consumption space consumed by,-5,-4,1,normal.
31,87,0.0459770114942529,0.0459770114942529,0.32183908045977,expected execution cost execution cost of the relaxed configuration can be calculated by re punct optimizing all queries in the workload in c zz zz zz and calculate difference very expensive re punct optimizing the subset of queries in the workload that originally used workloads in c but do not appear in c zz zz zz expected to be efficient comma but too costly to estimate the increase in execution cost of each resulting configuration simple non punct intrusive approach can be implemented by simply analysing information,expected execution cost execution cost,-4,-9,-5,normal.
37,4,0.25,0.5,0,estimating execution punct cost,,-9,-15,-6,normal.
19,50,0.12,0.08,0.22,heuristics for guiding the research penalty estimates the increase in execution cost per unit of storage the expected decrease in storage space punct t punct the maximum increase in cost punct s punct penalty punct t punct s a reasonable heuristic would result with an increase in the penalty value,heuristics for guiding the research,-15,-26,-11,normal.
29,67,0.0298507462686567,0.0746268656716418,0.134328358208955,choosing relaxing configuration choose the configuration with minimal estimated cost impractical the most efficient configurations require largest amount of space another alternative if the relaxed configuration does not fit in the available space comma further relax it until it is under space constraints choose the configuration with highest penalty among all relaxed configurations if no candidate configuration is found comma choose the configuration with minimum expected cost,choosing relaxing configuration choose the,-26,14,40,normal.
31,52,0,0.115384615384615,0.115384615384615,variations and optimizations some minor optimizations and variations shortcut evaluation remove current configuration if no further improvement can be achieved multiple transformations per iteration apply more than one transformation to the current current configuration shrinking configurations remove all indexes and views that are not used to evaluate any query in the workload,variations and optimizations some minor,14,-25,-39,normal.
28,81,0.308641975308642,0.111111111111111,0.222222222222222,experimental study synthetic and real databases hundreds of different workloads state punct of punct the punct art alternative punct commercial tuning tool punct ctt punct physical recommendation metric improvement punct 100 punct punct 1 zz zz zz cost punct w comma cr punct punct cost punct w comma ci punct punct ci punct initial configuration comma cr punct recommended configuration comma cost punct w comma c punct punct expected cost of evaluating all queries in the workload w under configuration c,experimental study synthetic and real,-25,-1,24,normal.
33,4,0.25,0.5,0.5,no constraints punct i,,-1,0,1,normal.
33,4,0.25,0.5,0.5,no constraints punct ii,,0,0,0,normal.
33,4,0.25,0.5,0.25,no constraints punct iii,,0,-92,-92,normal.
28,2,0,1,0,space constraints,,-92,198,290,normal.
16,28,0,0.214285714285714,0.107142857142857,conclusion new automatic physical database tuning technique is proposed this technique uses a relaxation based search reduces assumptions and heuristics simple and complexity is reduced gives comparable recommendations,conclusion new automatic physical database,198,-11,-209,normal.
5,5,0.4,0.6,0,thanks any questions punct punct,,-11,-100,-100,normal.
22,51,0.0784313725490196,0.372549019607843,0.470588235294118,conceptual partitioning punct zz an efficient method for continuous nearest neighbour monitoring zz zz by kyriakos mouratidis comma marios hadjieleftheriou and dimitris papadias zz zz june comma 2005 presented by meltem y zz zz ld zz zz r zz zz m bo zz zz azi zz zz i university comma 2005,conceptual partitioning punct zz an,-100,-100,-100,normal.
18,17,0.176470588235294,0.647058823529412,0.0588235294117647,agenda problem solution punct conceptual partitioning monitoring punct cpm punct extensions of the solution performance analysis conclusion,agenda problem solution punct conceptual,-100,105,-100,na.
17,86,0.0930232558139535,0.104651162790698,0.162790697674419,what is the problem punct problem punct 	continously monitoring the nearest neighbours of certain objects in a dynamic environment some wireless mobile applications punct fleet management comma location punct based services a set of moving objects a central server that monitors their positions over time processes continuous queries from geographically distributed clients reports up punct to punct date results naive approach punct the server constantly obtains the most recent position of all objects transmission of a large number of rapid data streams corresponding to location updates,what is the problem punct,105,3,-102,normal.
25,103,0.184466019417476,0.058252427184466,0.281553398058252,purpose punct formal punct spatial data punct data with position information punct location comma shape comma size comma relationships to other entities punct spatial query punct querying objects based on their geometry p punct punct p1 comma p2 comma zz zz zz comma pn punct zz zz zz set of objects 	q punct a query point 	k punct nn query punct k nearest neighbour query which retrieves the k objects in p that lie closest to q the problem is well studied for static datasets but not for highly punct dynamic environments with continuous multiple queries q p1 p2 p3 p4 p5 p6,purpose punct formal punct spatial,3,-37,-40,normal.
33,44,0.227272727272727,0.136363636363636,0.136363636363636,related work methods focusing on range query monitoring punct 	q punct index comma mqm comma mobieyes comma sina 	it is almost impossible to extend them to nn queries methods that explicitly target nn processing punct 	disc comma ypk punct cnn comma sea punct cnn,related work methods focusing on,-37,-4,33,normal.
26,71,0.0985915492957746,0.0985915492957746,0.309859154929577,cpm zz zz zz conceptual partitioning monitoring 2d data objects and queries that change their location frequently and in an unpredictable manner an update from object p is a tuple 	 punct p dot id comma xold comma yold comma xnew comma ynew punct a central server receives the update stream and continuosly monitors the k nns of each query q grid index each cell is zz zz x zz zz,cpm zz zz zz conceptual,-4,-11,-7,normal.
23,51,0.274509803921569,0.176470588235294,0.235294117647059,cpm zz zz zz conceptual space partitioning each rectangle has direction level number for rectangles dirj and dirj punct 1 comma 	mindist punct dirj punct 1 comma q punct punct mindist punct dirj comma q punct punct zz zz cpm visits cells in ascending mindist punct c comma q punct order,cpm zz zz zz conceptual,-11,-117,-106,normal.
14,6,0,0.333333333333333,0.5,cpm zz zz zz data structures,cpm zz zz zz data,-117,99,216,normal.
48,161,0.236024844720497,0.0496894409937888,0.329192546583851,cpm zz zz zz nn computation module initialize an empty heap comma 	best punct dist punct zz zz zz 	and best punct nn punct zz zz comma visit punct list punct zz zz insert the following into h punct cq comma 0 punct punct dir0 comma mindist punct dir0 comma q punct punct repeat punct get the next entry of h if it is a cell comma for each p zz zz c comma update best punct nn and best punct dist if necessary insert an entry for q into the influence list of c insert punct c comma mindist punct c comma q punct punct at the end of the visit punct list else for each cell c in dir comma insert punct c comma mindist punct c comma q punct punct into h insert the next punct level rectangles into h 	until h is empty or the next entry in h has 	mindist zz zz zz best punct dist,cpm zz zz zz nn,99,12,-87,normal.
20,101,0.227722772277228,0.0198019801980198,0.435643564356436,cpm punct example heap empty and ignored enheap the cells of u0 and the rectangle u1 enheap the cells of l0 and the rectangle l1 zz zz zz we come across p1 zz zz c3 comma 3 best punct dist punct dist punct p1 comma q punct punct 1 dot 7 zz zz zz we come across p2 zz zz c2 comma 4 best punct dist punct dist punct p2 comma q punct punct 1 dot 3 zz zz zz we come across c5 comma 6 since mindist punct c5 comma 6 comma q punct zz zz zz best punct dist,cpm punct example heap empty,12,-14,-26,normal.
23,155,0.212903225806452,0.0516129032258065,0.348387096774194,cpm zz zz zz handling a single object update when p moves from cold to cnew delete p from cold and scan the influence punct list of cold if p zz zz q dot best punct nn and dist punct p comma q punct zz zz zz best punct dist zz zz zz reorder best punct nn if p zz zz q dot best punct nn and dist punct p comma q punct punct best punct dist zz zz zz mark q as affected add p into cnew and scan the influence punct list of cnew if dist punct p comma q punct punct q dot best punct dist remove the current kth nn from q dot best punct nn insert p into q dot best punct nn update q dot best punct dist re punct compute the best punct nn of every affected query punct sequential processing of visit punct list and h punct,cpm zz zz zz handling,-14,-27,-13,normal.
24,81,0.197530864197531,0.0740740740740741,0.345679012345679,cpm zz zz zz handling multiple object updates o punct set of outgoing objects i punct set of incoming objects i u best punct nn zz zz zz o if punct i punct zz zz zz punct o punct influence region of q includes at least k objects new best punct nn can be formed easily without invoking recomputation scan visit punct list and look for where 	best punct distnew punct mindist punct c comma q punct punct best punct distold,cpm zz zz zz handling,-27,-4,23,normal.
34,46,0.0217391304347826,0.260869565217391,0.282608695652174,cpm zz zz zz handling query updates when a query is terminated delete its entry from qt remove it from the influence lists of the cells in its influence region when a new query is inserted nn computation algorithm when a query moves termination punct insertion,cpm zz zz zz handling,-4,-39,-35,normal.
13,50,0.22,0.08,0.48,aggregate nn queries punct sum q punct punct q1 comma q2 comma zz zz zz comma qm punct find p minimizing zz zz zz qi zz zz q dist punct p comma q punct difference punct rectangle m containing all qi zz zz q enheap all the cells intersecting m,aggregate nn queries punct sum,-39,-8,31,normal.
21,34,0.235294117647059,0.0882352941176471,0.411764705882353,aggregate nn queries zz zz zz min q punct punct q1 comma q2 comma zz zz zz comma qm punct find objects with the smallest distance punct s punct from any query in q,aggregate nn queries zz zz,-8,88,96,normal.
13,16,0,0.1875,0.1875,constrained nn queries only cells or rectangles intersecting the constraint region are added to the heap,constrained nn queries only cells,88,-47,-135,normal.
13,44,0.113636363636364,0.113636363636364,0.409090909090909,performance analysis cell size punct zz zz zz zz zz cells consume more space comma object punct list zz zz zz comma influence punct list zz zz zz higher number of processed objects zz zz zz zz zz high overhead due to heap operations,performance analysis cell size punct,-47,-58,-11,normal.
15,42,0.238095238095238,0.214285714285714,0.119047619047619,evaluation by simulation roadmap of oldenburg set of temporary objects punct cars comma pedestrians comma etc dot punct and persistent nn queries default velocity values punct slow comma medium comma fast comparison by ypk punct cnn and sea punct cnn system parameters,evaluation by simulation roadmap of,-58,-4,54,normal.
36,8,0.25,0.25,0.25,cpu time v dot s dot grid granularity,cpu time v dot s,-4,-6,-2,normal.
28,9,0.222222222222222,0,0.444444444444444,cpu time v dot s dot n and n,cpu time v dot s,-6,-13,-7,normal.
13,6,0.333333333333333,0.166666666666667,0.5,performance v dot s dot k,performance v dot s dot,-13,-8,5,normal.
35,10,0.2,0.3,0.2,cpu time v dot s dot object and query speed,cpu time v dot s,-8,-8,0,normal.
30,10,0.2,0.3,0.2,cpu time v dot s dot object and query agility,cpu time v dot s,-8,-8,0,normal.
61,8,0,0.5,0,cpu time for constantly moving and static queries,cpu time for constantly moving,-8,107,115,normal.
22,45,0.111111111111111,0.111111111111111,0.133333333333333,conclusion investigating the problem of monitoring continuous nn queries over moving objects cpm punct low running time due to the elimination of unnecessary computations makes use of visit punct list and heap for recomputations extending framework punct aggregate comma constrained nn queries punct performance evaluation,conclusion investigating the problem of,107,-100,-100,normal.
0,2,0.5,0.5,0,questions punct,,-100,-100,-100,normal.
30,66,0.0909090909090909,0.0606060606060606,0.196969696969697,q punct index assumes static range queries over moving objects queries are indexed by an r punct tree 	r punct tree punct splits space with hierarchically nested comma and possibly overlapping comma boxes each object p is assigned a region such that p needs to issue an update only if it exits this area moving objects probe the index to find the queries that they influence,q punct index assumes static,-100,-6,-100,normal.
38,142,0.105633802816901,0.0422535211267606,0.366197183098592,ypk punct cnn objects are indexed with a regular grid of cells where each cell is zz zz x zz zz updates are not processed as they arrive comma each query is re punct evaluated every t time units the first evaluation of a query q punct visit the cells in a square r around the cell cq covering q until k objects are found d punct distance punct q comma kth nn object punct search cells intersecting with square sr centered at cq with side length 2d punct zz zz re punct evaluation of a query q punct 	dmax punct distance of the previous neighbour that moved furthest 	new sr punct square centered at cq with side length 2 zz zz dmax punct zz zz when q changes location comma it is handled as a new one r sr d sr,ypk punct cnn objects are,-6,-5,1,normal.
23,73,0.0821917808219178,0.0410958904109589,0.273972602739726,sea punct cnn no module for the first evaluation of a query q best punct dist punct distance between q and the kth nn answer region of a query q punct circle with center q and radius best punct dist the cells intersecting the answer region of q hold book punct keeping information to indicate this fact determines a circular region sr around q and computes the new k nn set of q,sea punct cnn no module,-5,-21,-16,normal.
17,33,0.272727272727273,0.0909090909090909,0.333333333333333,aggregate nn queries punct max q punct punct q1 comma q2 comma zz zz zz comma qm punct find objects with the lowest maximum distance punct s punct from any query in q,aggregate nn queries punct max,-21,-100,-100,normal.
28,18,0.166666666666667,0.666666666666667,0,privacy preserving olap rakesh agrawal comma ibm almaden ramakrishnan srikant comma ibm almaden dilys thomas comma stanford university,privacy preserving olap rakesh agrawal,-100,-9,-100,normal.
12,44,0.0454545454545455,0.431818181818182,0.340909090909091,horizontally partitioned personal information table t for analysis at server client c1 original row r1 perturbed p1 client c2 original row r2 perturbed p2 client cn original row rn perturbed pn example punct what number of children in this county go to college punct,horizontally partitioned personal information table,-9,-113,-104,normal.
12,49,0.0408163265306122,0.448979591836735,0.408163265306122,vertically partitioned enterprise information original relation d1 perturbed relation d zz zz zz 1 original relation d2 perturbed relation d zz zz zz 2 perturbed joined relation d zz zz zz example punct what fraction of united customers to new york fly virgin atlantic to travel to london punct,vertically partitioned enterprise information original,-113,13,126,normal.
15,10,0,1,0,talk outline motivation problem definition query reconstruction privacy guarantees experiments,talk outline motivation problem definition,13,99,86,normal.
16,64,0.203125,0.09375,0.359375,privacy preserving olap compute select count punct punct punct from t where p1 and p2 and p3 and zz zz zz dot pk i dot e dot countt punct p1 and p2 and p3 and zz zz zz dot pk punct we need to provide error bounds to analyst dot provide privacy guarantees to data sources dot scale to larger punct of attributes dot,privacy preserving olap compute select,99,-215,-314,normal.
23,32,0.28125,0.125,0.40625,uniform retention replacement zz perturbation 5 4 3 1 3 heads punct retain tails punct replace u dot a dot r from punct 1 punct 5 punct bias punct 0 dot 2,uniform retention replacement zz perturbation,-215,93,308,normal.
21,22,0,0.272727272727273,0.0454545454545455,retention replacement perturbation done for each column the replacing pdf need not be uniform different columns can have different biases for retention,retention replacement perturbation done for,93,23,-70,normal.
10,18,0,0.777777777777778,0,talk outline motivation problem definition query reconstruction inversion method single attribute multiple attributes iterative method privacy guarantees experiments,talk outline motivation problem definition,23,-21,-44,normal.
16,85,0.188235294117647,0.129411764705882,0.235294117647059,single attribute example what is the fraction of people in this building with age 30 punct 50 punct assume age between 0 punct 100 whenever a person enters the building flips a coin of bias p punct 0 dot 2 for heads say dot heads punct punct report true age tails punct punct random number uniform in 0 punct 100 reported totally 100 randomized numbers collected dot of these 22 are 30 punct 50 dot how many among the original are 30 punct 50 punct,single attribute example what is,-21,-50,-29,normal.
18,26,0.307692307692308,0.153846153846154,0.346153846153846,analysis 80 perturbed 20 retained out of 100 punct 80 perturbed punct 0 dot 8 fraction punct comma 20 retained punct 0 dot 2 fraction punct,analysis 80 perturbed 20 retained,-50,25,75,normal.
13,57,0.315789473684211,0.157894736842105,0.385964912280702,analysis contd dot zz 64 perturbed comma not age punct 30 punct 50 punct 16 perturbed comma age punct 30 punct 50 punct 20 retained 20 punct of the 80 randomized rows comma i dot e dot 16 of them satisfy age punct 30 punct 50 punct dot the remaining 64 don zz zz zz t dot,analysis contd dot zz 64,25,36,11,normal.
13,68,0.352941176470588,0.161764705882353,0.308823529411765,analysis contd dot since there were 22 randomized rows in punct 30 punct 50 punct dot 22 punct 16 punct 6 of them come from the 20 retained rows dot 16 perturbed comma age punct 30 punct 50 punct 64 perturbed comma not age punct 30 punct 50 punct 6 retained comma age punct 30 punct 50 punct 14 retained comma not age punct 30 punct 50 punct,analysis contd dot since there,36,-45,-81,normal.
16,15,0.2,0.133333333333333,0.4,scaling up punct 30 thus 30 people had age 30 punct 50 in expectation dot,scaling up punct 30 thus,-45,25,70,normal.
28,7,0.428571428571429,0.285714285714286,0.285714285714286,multiple attributes punct k punct 2 punct,multiple attributes punct k punct,25,-100,-100,normal.
0,1,0,1,0,architecture,,-100,-100,-100,normal.
42,68,0.308823529411765,0.0294117647058824,0.367647058823529,formally punct zz select count punct punct punct from r where p p punct retention probability punct 0 dot 2 in example punct 1 punct p punct probability that an element is replaced by replacing p dot d dot f dot b punct probability that an element from the replacing p dot d dot f dot satisfies predicate p punct in example punct a punct 1 punct b,formally punct zz select count,-100,-22,-100,normal.
23,57,0.315789473684211,0.0350877192982456,0.298245614035088,transition matrix punct i dot e dot solve xa punct y a00 punct probability that original element satisfies punct p and after perturbation satisfies punct p p punct probability it was retained punct 1 punct p punct a punct probability it was perturbed and satisfies punct p a00 punct punct 1 punct p punct a punct p,transition matrix punct i dot,-22,-23,-1,normal.
20,38,0.236842105263158,0.184210526315789,0.5,multiple attributes for k attributes comma x comma y are vectors of size 2k x punct y a punct 1 where a punct a1 zz zz a2 zz zz dot dot zz zz ak punct tensor product punct,multiple attributes for k attributes,-23,38,61,normal.
28,124,0.306451612903226,0.032258064516129,0.467741935483871,error bounds in our example comma we want to say when estimated answer is 30 comma the actual answer lies in punct 28 punct 32 punct with probability greater than 0 dot 9 given t punct a t zz zz zz comma with n rows f punct t punct is punct n comma e comma d punct reconstructible by g punct t zz zz zz punct if punct f punct t punct zz zz zz g punct t zz zz zz punct punct punct max punct e comma e f punct t punct punct with probability greater than punct 1 punct d punct dot zz zz zz f punct t punct punct 2 comma zz zz zz punct 0 dot 1 in above example,error bounds in our example,38,-11,-49,normal.
37,97,0.22680412371134,0.0721649484536082,0.350515463917526,results fraction comma f comma of rows in punct low comma high punct in the original table estimated by matrix inversion on the table obtained after uniform perturbation is a punct n comma zz zz zz comma zz zz zz punct estimator for f if n punct 4 log punct 2 punct zz zz zz punct punct p zz zz zz punct punct 2 comma by chernoff bounds vector comma x comma obtained by matrix inversion is the mle punct maximum likelihood estimator punct comma by using lagrangian multiplier method and showing that the hessian is negative,results fraction comma f comma,-11,-53,-42,normal.
12,14,0,0.857142857142857,0,talk outline motivation problem definition query reconstruction inversion method iterative method privacy guarantees experiments,talk outline motivation problem definition,-53,6,59,normal.
19,50,0.34,0.24,0.26,iterative algorithm punct as00 punct iterate punct xpt punct 1 punct s q punct 0t yq punct apqxpt punct punct sr punct 0t arq xrt punct punct punct by application of bayes rule punct initialize punct x0 punct y stop condition punct two consecutive x iterates do not differ much,iterative algorithm punct as00 punct,6,16,10,normal.
15,30,0.266666666666667,0.166666666666667,0.233333333333333,iterative algorithm result punct aa01 punct punct the iterative algorithm gives the mle with the additional constraint that 0 punct xi comma 8 0 punct i punct 2k punct 1,iterative algorithm result punct aa01,16,-22,-38,normal.
15,10,0,1,0,talk outline motivation problem definition query reconstruction privacy guarantees experiments,talk outline motivation problem definition,-22,-8,14,normal.
33,50,0.2,0.12,0.32,privacy guarantees say initially know with probability punct 0 dot 3 that alice zz zz zz s age punct 25 after seeing perturbed value can say that with probability punct 0 dot 95 then we say there is a punct 0 dot 3 comma 0 dot 95 punct privacy breach,privacy guarantees say initially know,-8,-6,2,normal.
30,131,0.251908396946565,0.0916030534351145,0.511450381679389,let x comma y be random variables where x punct original value comma y punct perturbed value dot let q comma s be subsets of their domains apriori probability p punct x 2 q punct punct pq zz zz r1 posteriori probability p punct x 2 q punct y 2 punct zz zz r2 	where 0 punct r1 punct r2 punct 1 and p punct y 2 punct punct 0 s privacy guarantees zz q where pq punct mq punct s comma i dot e dot q is a rare set punct mq punct probability of q under replacing pdf punct punct zz zz zz 1 comma zz zz zz 2 punct privacy breach punct s comma zz zz zz 1 comma zz zz zz 2 punct privacy breach s q,let x comma y be,-6,95,101,normal.
16,62,0.209677419354839,0.0483870967741935,0.241935483870968,punct s comma r1 comma r2 punct vs punct r1 comma r2 punct metric zz provides more privacy to rare sets e dot g dot punct in market basket data comma medicines are rarer than bread comma so we provide more privacy for medicines than for bread for multiple columns comma s expresses correlations works for retention replacement perturbation on numeric attributes,punct s comma r1 comma,95,-290,-385,normal.
30,67,0.194029850746269,0.0447761194029851,0.567164179104478,punct s comma zz zz zz 1 comma zz zz zz 2 punct guarantees the median value of s is 1 there is no punct s comma zz zz zz 1 comma zz zz zz 2 punct privacy breach for s punct f punct zz zz zz 1 comma zz zz zz 2 comma p punct for retention replacement perturbation on single as well as multiple columns,punct s comma zz zz,-290,145,435,normal.
36,103,0.359223300970874,0.0679611650485437,0.330097087378641,application to classification punct as00 punct for the first split to compute split criterion punct gini index count punct age punct 0 punct 30 punct and class punct var punct zz zz zz punct zz zz zz punct count punct age punct 0 punct 30 punct and class punct var punct zz zz zz punct zz zz zz punct count punct punct age punct 0 punct 30 punct and class punct var punct zz zz zz punct zz zz zz punct count punct punct age punct 0 punct 30 punct and class punct var punct zz zz zz punct zz zz zz punct,application to classification punct as00,145,64,-81,normal.
15,10,0,1,0,talk outline motivation problem definition query reconstruction privacy guarantees experiments,talk outline motivation problem definition,64,-67,-131,normal.
20,66,0.166666666666667,0.166666666666667,0.272727272727273,experiments real data punct census data from the uci machine learning repository having 32000 rows synthetic data punct generated multiple columns of zipfian data comma number of rows varied between 1000 and 1000000 error metric punct l1 norm of difference between x and y dot eg for 1 punct dim queries punct x1 zz zz zz y1 punct punct punct x0 zz zz zz y0 punct,experiments real data punct census,-67,72,139,normal.
15,28,0.214285714285714,0.321428571428571,0.142857142857143,inversion vs iterative reconstruction 2 attributes punct census data 3 attributes punct census data iterative algorithm punct mle on constrained space punct outperforms inversion punct global mle punct,inversion vs iterative reconstruction 2,72,-46,-118,normal.
15,15,0,0.2,0.4,privacy obtained privacy as a function of retention probability on 3 attributes of census data,privacy obtained privacy as a,-46,-53,-7,normal.
23,21,0.0476190476190476,0.476190476190476,0.19047619047619,error vs number of columns punct census data inversion algorithm iterative algorithm error increases exponentially with increase in number of columns,error vs number of columns,-53,-17,36,normal.
26,18,0,0.166666666666667,0.388888888888889,error as a function of number of rows error has square root n dependence on number of rows,error as a function of,-17,214,231,normal.
17,45,0.0444444444444444,0.0888888888888889,0.155555555555556,conclusion possible to run olap on data across multiple servers so that probabilistically approximate answers are obtained and data privacy is maintained the techniques have been tested experimentally on real and synthetic data dot more experiments in the paper dot privacy preserving olap is practical,conclusion possible to run olap,214,-22,-236,normal.
13,53,0.39622641509434,0.377358490566038,0.113207547169811,references	 punct as00 punct agrawal comma srikant punct privacy preserving data mining punct aa01 punct agarwal comma aggarwal punct on the quantification of zz zz zz punct w65 punct randomized response dot dot punct egs punct evfimievski comma gehrke comma srikant punct limiting privacy breaches dot dot others in the paper dot dot,references	 punct as00 punct agrawal,-22,-96,-74,normal.
25,29,0.0689655172413793,0.275862068965517,0.310344827586207,zz the error in the iterative algorithm flattens out as its maximum value is bounded by 2 error vs number of columns punct zz iterative algorithm punct zipf data,zz the error in the,-96,111,207,normal.
18,11,0.0909090909090909,0.545454545454545,0.272727272727273,zz supported by privacy group at stanford punct rajeev and hector,zz supported by privacy group,111,-100,-100,normal.
25,19,0.157894736842105,0.210526315789474,0.526315789473684,proactive query zz re punct optimization by zz zz etin meri zz zz li 12 dot 10 dot 2005,proactive query zz re punct,-100,-100,-100,normal.
22,24,0.0833333333333333,0.541666666666667,0.166666666666667,overview query processing query optimization idea problems solutions to problems in query optimization reactive re punct optimization proactive re punct optimization rio implementation details,overview query processing query optimization,-100,-71,-100,normal.
13,17,0,0.411764705882353,0.235294117647059,query processing a sql statement is subjected to four phases of processing parsing optimization code generation execution,query processing a sql statement,-71,-126,-55,normal.
17,55,0.0727272727272727,0.0909090909090909,0.145454545454545,query optimization same result set for a query can be obtained in more than one way dot depending on the query comma different execution plans may have different costs dot query optimizers try to find an execution plan with the lowest cost for a given query based on some statistical estimations about the data dot,query optimization same result set,-126,175,301,normal.
22,56,0.107142857142857,0.0892857142857143,0.160714285714286,query optimization punct cont zz zz zz d punct traditional optimization follows a plan punct first punct execute punct next approach this approach enumerates all execution plans comma computes the cost of each plan and picks the plan with the lowest cost performance highly depends on the accuracy of the estimated statistics used to compute costs,query optimization punct cont zz,175,70,-105,normal.
26,39,0.307692307692308,0.0769230769230769,0.41025641025641,query optimization punct cont zz zz zz d punct example punct 		select punct from r comma s 		where r dot a punct s dot a and 			 r dot b punct k1 and 			 r dot c punct k2,query optimization punct cont zz,70,20,-50,normal.
19,62,0.290322580645161,0.161290322580645,0.370967741935484,query optimization punct cont zz zz zz d punct assume that db buffer cache size is 200 mb punct r punct punct 500 mb punct s punct punct 160 mb punct zz zz punct r punct punct punct 300 mb due to skew and correlations in the data comma optimizer estimates punct zz zz punct r punct punct to be 150 mb,query optimization punct cont zz,20,-1,-21,normal.
25,30,0.2,0.1,0.4,query optimization punct cont zz zz zz d punct two parts of the query s zz zz punct r punct punct result of the selection on r punct p1a p1b,query optimization punct cont zz,-1,-190,-189,normal.
19,59,0.220338983050847,0.0508474576271186,0.271186440677966,query optimization punct cont zz zz zz d punct since punct zz zz punct r punct punct is underestimated comma p1a is selected as the optimal plan comma but p1b should have been selected by the optimizer since the estimation is wrong and p1a gets more costly for greater values of punct zz zz punct r punct punct dot,query optimization punct cont zz,-190,206,396,normal.
22,38,0.157894736842105,0.157894736842105,0.157894736842105,reactive optimization reactive optimizers works in the following way use a traditional optimizer to find the best plan dot use check operators to detect sub punct optimality during execution dot trigger re punct optimization comma if required dot,reactive optimization reactive optimizers works,206,-3,-209,normal.
41,80,0.1,0.0875,0.2,problems with reactive zz re punct optimization the optimizer may pick plans whose performance depends heavily on uncertain statistics comma making re punct optimization very likely the partial work done in a pipelined plan is lost when re punct optimization is triggered and the plan is changed the ability to collect statistics both quickly and accurately during execution is limited so comma when re punct optimization is triggered comma the optimizer may make new mistakes comma leading potentially to thrashing,problems with reactive zz re,-3,-2,1,normal.
55,62,0.112903225806452,0.0967741935483871,0.145161290322581,proactive re punct optimization a novel approach uses bounding boxes instead of single point estimations to represent uncertainty bounding boxes are used during optimization to generate robust and switchable plans comma minimizing the need for re punct optimization punct hence comma the loss of pipelined work punct random punct sample processing is merged with query execution to collect statistics quickly and accurately,proactive re punct optimization a,-2,-100,-100,normal.
75,4,0.25,0.5,0.25,proactive re punct optimization,,-100,-100,-100,normal.
30,46,0.0434782608695652,0.108695652173913,0.130434782608696,representing uncertainty most of the current optimizers uses single punct point estimates of the statistics needed to cost plans using intervals instead of single points allows the optimizer to handle uncertainty about the estimates as the confidence about the estimate increases comma bounding box gets narrower,representing uncertainty most of the,-100,48,-100,normal.
28,2,0,1,0,representing uncertainty,,48,-25,-73,normal.
37,95,0.0947368421052632,0.126315789473684,0.242105263157895,using bounding punct boxes during optimization there is always one optimal plan for a single punct point estimate for a bounding box b comma following cases can occur punct single optimal plan punct a single plan is optimal at all points within b single robust plan punct there is a single plan whose cost is very close to the optimal at all points in b a switchable plan punct explained in the next slide none of the above punct different plans are optimal at different points in b comma but no switchable plan is available,using bounding punct boxes during,-25,0,25,normal.
51,96,0.0208333333333333,0.0520833333333333,0.375,switchable plans a switchable plan in b is a set s of plans with the following properties at each point pt in b comma there is a plan p in s whose cost at pt is close to that of the optimal plan at pt the decision of which plan in s will be executed can be deferred until accurate estimates of uncertain statistics are available if the actual statistics lie within b comma an appropriate plan from s can be picked and run without losing any significant fraction of the execution work done so far,switchable plans a switchable plan,0,-80,-80,normal.
26,26,0.0769230769230769,0.653846153846154,0.0384615384615385,rio implementation details computing bounding punct boxes optimizing with bounding punct boxes generating the seed plans generating the switchable plan extensions to query execution engine experiments,rio implementation details computing bounding,-80,57,137,normal.
35,99,0.171717171717172,0.0606060606060606,0.303030303030303,computing bounding punct boxes rio restricts the computation of bounding boxes to size and selectivity estimates for each such estimate e comma a bounding box b is computed using the following process an uncertainty bucket u is assigned to e the bounding box is computed from the punct e comma u punct pair an integer domain punct 0 comma 6 punct is assigned to u according to some information punct is there an accurate value of e exists in the catalog comma etc dot dot punct from 0 punct no uncertainty punct to 6 punct very high uncertainty punct,computing bounding punct boxes rio,57,-10,-67,normal.
59,65,0.169230769230769,0.123076923076923,0.2,optimizing with bounding punct boxes rio computes bounding boxes for all input sizes used to cost plans then it tries to compute a switchable plan for each distinct punct js comma io punct pair punct js punct join subset comma io punct interesting orders punct if rio fails to find a switchable plan comma it picks the optimal plan based on single punct point estimates,optimizing with bounding punct boxes,-10,-1,9,normal.
81,36,0.138888888888889,0.0833333333333333,0.138888888888889,computing switchable plans rio computes switchable plans in two steps first comma it finds three seed plans for each punct js comma io punct pair then comma it creates the switchable plan from the seed plans,computing switchable plans rio computes,-1,-2,-1,normal.
31,76,0.118421052631579,0.0789473684210526,0.0921052631578947,generating seed plans in rio comma each enumeration for plans considers three different costs clow cest chigh cest is the traditional single punct point estimation clow and chigh are lower left and upper right corners of the bounding box for each punct js comma io punct pair comma we end up with three seed plans bestplanlow punct plan with minimum cost clow bestplanest punct plan with minimum cost cest bestplanhigh punct plan with minimum cost chigh,generating seed plans in rio,-2,-11,-9,normal.
40,86,0.127906976744186,0.116279069767442,0.186046511627907,generating the switchable plan given the seeds bestplanlow comma bestplanest and bestplanhigh comma one of the following cases arises c1 punct the seeds are all the same plan c2 punct they are not the same comma but one is a robust plan c3 punct neither they are the same comma nor one is a robust plan comma but comma a switchable plan can be created from the seeds c4 punct a single optimal plan comma a single robust plan or a switchable plan cannot be found,generating the switchable plan given,-11,-6,5,normal.
24,65,0.123076923076923,0.123076923076923,0.292307692307692,generating the switchable plan punct cont zz zz zz d punct in c1 comma the single optimal plan is the switchable plan in c2 comma rio finds the robust plan among the seeds and uses it as a singleton switchable plan in c3 comma rio tries to find a switchable plan punct next slide punct in c4 comma rio picks bestplanest as the optimal plan,generating the switchable plan punct,-6,-3,3,normal.
47,76,0.0263157894736842,0.0789473684210526,0.197368421052632,finding switchable plans rio tries to find the set s of plans satisfying the following constraints by enumerating the seeds all plans in s have a different joint operator as the root operator all plans in s have the same subplan for the deep subtree input to the root operator all plans in s have the same base table comma but not necessarily the same access path comma as the other input to the root operator,finding switchable plans rio tries,-3,52,55,normal.
37,75,0.16,0.0666666666666667,0.253333333333333,using switchable plans contrary to the single point optimization comma it is seen that p1b is more robust since it has a cost near to the optimal at all points in bounding box dot but comma since two plans are switchable as long as punct zz zz punct r punct punct lies within the bounding box comma it is preferable to select p punct punct p1a comma p1b punct switchable plan instead of selecting p1b,using switchable plans contrary to,52,-79,-131,normal.
26,78,0.0512820512820513,0.0897435897435897,0.166666666666667,extensions to query execution engine following extensions have been made in order to satisfy requirements of the proactive re punct optimization a switch operator for handling switchable plans a buffer operator for buffering the tuples until it can compute an input punct size estimate needed by the switch operator randomization punct aware operators for performing random sampling for more accurate estimations of the statistics an inter punct operator communication mechanism allowing operators to exchange estimates and random samples,extensions to query execution engine,-79,-44,35,normal.
16,28,0.107142857142857,0.214285714285714,0,experiments rio has been tested with the following cases two punct way join queries three punct way join queries correlation punct based mistakes thrashing more increased query complexity,experiments rio has been tested,-44,0,44,normal.
40,8,0.125,0.125,0,results for two punct way join queries experiments,results for two punct way,0,-25,-25,normal.
40,8,0.125,0.125,0,results for three punct way join queries experiments,results for three punct way,-25,-33,-8,normal.
22,5,0,0.2,0,results for correlation mistakes experiments,,-33,243,276,normal.
13,7,0,0.142857142857143,0,results for more increased query compexity experiments,results for more increased query,243,11,-232,normal.
31,65,0.0461538461538462,0.0923076923076923,0.230769230769231,conclusions proactive re punct optimization is a novel approach to query optimization rio is a prototype that uses bounding boxes instead of single point estimates for handling uncertainty switchable plans for reducing the loss in pipelined work random sampling techniques for collecting statistics quickly and more accurately in the experiments comma rio outperforms the current re punct optimizers by up to a factor of three,conclusions proactive re punct optimization,11,-301,-312,normal.
34,54,0.12962962962963,0.351851851851852,0.481481481481481,references babu comma et dot al comma zz zz zz proactive re punct optimization zz zz zz babu and bizarro comma zz zz zz adaptive query processing in the looking glass zz zz zz selinger et dot al comma zz zz zz access path selection in a relational database management system zz zz zz,references babu comma et dot,-301,134,435,normal.
5,9,0.111111111111111,0.333333333333333,0.555555555555556,thanks zz zz zz zz zz any questions punct,thanks zz zz zz zz,134,-100,-100,normal.
34,30,0.133333333333333,0.333333333333333,0.266666666666667,cmpe 521 database systems query sensitive embeddings vassilis athitsos comma marios hadjieleftheriou comma george kollios and stan sclaroff zz zz dr zz zz s yildiz 19 dot 10 dot 2005,cmpe 521 database systems query,-100,1,-100,normal.
18,15,0,0.933333333333333,0.0666666666666667,summary general information related work required background building query sensitive embeddings evaluation of method conclusion,summary general information related work,1,-4,-5,normal.
38,95,0.0631578947368421,0.115789473684211,0.115789473684211,general information motivation of such a work retrieve the most similar matches to a query object nearest neighbor methods are used currently existing solutions are too slow especially in domains where objects are compared using computationally expensive similarity punct or distance punct measures method offered by the paper punct a novel method for approximating nearest neighbor retrieval for object spaces with expensive distance measures embedding based punct maps objects to real vector space while preserving the proximity structure of original space query sensitive punct distance measure change according to query punct measures while finding distances,general information motivation of such,-4,-5,-1,normal.
24,108,0.148148148148148,0.101851851851852,0.12962962962963,general information punct cont dot punct usage punct estimating the properties of a biological sequence punct like a protein comma or dna sequence punct nearest neighbor classification used by pattern recognition techniques for both cases a proximity measure is needed and this measure should be calculated easily dot numerous methods have been proposed for speeding up nearest punct neighbor retrieval but all are for metric spaces punct coordinate space punct dot metric spaces have fixed dimensions dot in case of variable dimensions existing methods do not help query sensitive embeddings methods provide a way of nearest neighbor calculation for non punct euclidean punct also non metric punct spaces,general information punct cont dot,-5,-1,4,normal.
21,84,0.107142857142857,0.130952380952381,0.119047619047619,general information punct cont dot punct method summary construct a function that maps objects into a real vector space find query sensitive coefficients measure the distance between objects by using the vector space calculated with l1 and l2 distances l1 or l2 over vectors should be more efficient than finding the original distance punct usually holds punct the results obtained punct details later punct the proposed method gives better results according to the two well punct known existing embedding methods punct boostmap and fastmap,general information punct cont dot,-1,-7,-6,normal.
30,91,0.10989010989011,0.208791208791209,0.153846153846154,related work hashing and tree structures similarity indexing in multi punct dimensional datasets the performance degrades in high dimensions rely on euclidean or metric properties comma problem in non punct metric spaces embedding based lipschitz embeddings comma fastmap comma metricmap comma sparsemap comma and boostmap zz zz zz speed up nearest neighbor retrieval construct an embedding comma which maps objects into another space with a more efficient distance measure boostmap preserves the original space proximity with original space punct after the embedding punct the proposed method is an extension to boostmap,related work hashing and tree,-7,-9,-2,normal.
16,4,0,1,0,required background embeddings classifiers,,-9,-14,-5,normal.
32,87,0.114942528735632,0.160919540229885,0.206896551724138,embeddings 1d embeddings r is called the reference object dx is the punct non punct metric punct distance between x and r project x into the line x1x2 punct building block for fastmap punct 1d embeddings are considered weak classifiers punct high error rate punct 1d embeddings can be used as building blocks for constructing higher punct dimensional embeddings embedding types punct fx1 comma x2 is used to construct fastmap frs can be combined to form lipschitz embeddings adaboost combines many weak classifiers into a strong classifier,embeddings 1d embeddings r is,-14,40,54,normal.
20,5,0.6,0.4,0,embeddings punct cont dot punct,,40,0,-40,normal.
20,5,0.6,0.4,0,embeddings punct cont dot punct,,0,-41,-41,normal.
31,153,0.189542483660131,0.124183006535948,0.398692810457516,classifiers weak classifiers given three objects q comma a comma b zz zz zz x comma is q closer to a or to b punct find exact distances dx punct q comma a punct and dx punct q comma b punct punct find checking if f punct q punct is closer to f punct a punct or to f punct b punct where f is a d dimensional embedding f punct x zz zz zz rd if the two methods stated above give the same result then f succeeds over punct q comma a comma b punct otherwise f fails over punct q comma a comma b punct 1d embeddings act as weak classifiers because they have a high error rate high dimensional strong classifiers can be built by using 1d embeddings punct method of adaboost punct purpose of weak classifiers punct reducing problem to find a strong classifier by using weak classifiers,classifiers weak classifiers given three,-41,-3,38,normal.
28,16,0,0.875,0,building query sensitive embeddings motivation for constructing query sensitive embeddings construction method training algorithm training data,building query sensitive embeddings motivation,-3,-6,-3,normal.
33,72,0.0972222222222222,0.152777777777778,0.111111111111111,motivation for constructing query sensitive embeddings lack of contrasting punct two high punct dimensional objects are unlikely to be very similar in all the dimensions dot statistical sensitivity punct the data is rarely distributed comma and for a pair of objects there only relatively few coordinates that are significant for comparing those objects dot query sensitive embeddings are required punct use weigths while finding distances those weights will be query specific values,motivation for constructing query sensitive,-6,50,56,normal.
33,4,0,1,0,query sensitive embedding example,,50,-57,-107,normal.
39,108,0.324074074074074,0.0833333333333333,0.305555555555556,query sensitive embedding punct 2 punct f punct x punct punct punct fr1 punct x punct comma fr2 punct x punct comma fr3 punct x punct punct l1 distance is used to compare the embeddings of two objects 20 database objects punct 3 reference points punct comma 10 query objects f fails on 23 dot 5 punct of the 3800 triples punct q comma a comma b punct where q from query objects and a comma b from database objects 1d embeddings fr1 comma fr2 comma fr3 fail respectively on 39 dot 2 punct comma 36 dot 4 punct comma and 26 dot 6 punct of the triples,query sensitive embedding punct 2,-57,-1,56,normal.
62,102,0.205882352941176,0.0980392156862745,0.323529411764706,query sensitive embedding punct 3 punct if q punct q1 then for triples punct q1 comma a comma b punct fr1 does better than f fr1 fails on 5 dot 8 punct of those triples f fails on 11 dot 6 punct of those triples similarly if q punct q2 and q punct q3 respectively comma fr2 and fr3 are more accurate than f dot for query objects q1 comma q2 comma q3 it would be beneficial to use a query punct sensitive weighted l1 measure comma that would respectively use only the first comma second comma and third coordinate of f,query sensitive embedding punct 3,-1,-9,-8,normal.
41,153,0.130718954248366,0.104575163398693,0.38562091503268,construction method specify a large family of 1d embeddings use 1d embeddings to define binary classifiers for estimating for object triples punct q comma a comma b punct if q is closer to a or to b dot these classifiers are expected to be better than a random classifier run adaboost to combine many classifiers into a single classifier punct h punct h is significantly more accurate than the simple classifiers associated with 1d embeddings use h to define a d punct dimensional embedding fout comma and a query punct sensitive weighted l1 distance measure dout h is equivalent to the combination of fout and dout for three objects q comma a comma b zz zz zz x comma h predicts that q is closer to a than it is to b comma then fout punct q punct is closer to fout punct a punct than it is to fout punct b punct,construction method specify a large,-9,0,9,normal.
29,95,0.147368421052632,0.105263157894737,0.484210526315789,construction method punct cont dot punct the classifier punct 1 zz zz zz if q is closer to a punct 1 zz zz zz if q is closer to b punct 1 zz zz zz if q is in equal distance punct d type punct to a comma b classifier may fail if the reference is outside a region of the objects zz zz zz use splitters the splitter punct 0 comma 1 punct punct v is a specified region or a threhold the query sensitive classifer is combination of classifer and the splitter punct,construction method punct cont dot,0,-28,-28,normal.
41,116,0.0431034482758621,0.0948275862068965,0.21551724137931,training algorithm usage punct constructing an embedding and a query sensitive distance measure adaboost algortihm is used as the training algortihm adaboost assumes that we have a zz zz zz weak learner zz zz zz module comma which we can call at each round to obtain a new weak classifier dot the goal is to construct a strong classifier that achieves much higher accuracy than the individual weak classifiers dot at each step algorithm simply determines the appropriate weight for each weak classifier comma and then adjusts the training weights at each round mistakes from previous rounds are corected by some amount some changes and additions are done on the to adapt adaboost to this case,training algorithm usage punct constructing,-28,-3,25,normal.
22,24,0.0833333333333333,0.25,0.375,training data xtr is a subset of x punct object space punct we need to compute dx for all pairs of points in xtr,training data xtr is a,-3,-84,-81,normal.
23,13,0.0769230769230769,0.461538461538462,0.0769230769230769,evaluation of method complexity analysis embedding application punct filter and refine retrieval experiments,evaluation of method complexity analysis,-84,13,97,normal.
56,138,0.036231884057971,0.108695652173913,0.304347826086957,complexity analysis at each training round measure m classifiers with t training triples in order to choose the best weak classifier the computational time per training round is o punct mt punct before we even start the training algorithm comma we need to compute distances dx from punct every object in c to every object in c every object in c to every object in xtr c zz zz zz the set of objects that we use to form 1d embeddings xtr zz zz zz the set of objects from which we form training triples we also need all distances between pairs of objects in xtr computing all those distances can sometimes be the most computationally expensive part of the algorithm comma depending on the complexity of computing dx fortunately all those costs are just onetime preprocessing costs,complexity analysis at each training,13,-7,-20,normal.
45,96,0.15625,0.125,0.260416666666667,complexity analysis punct cont dot punct computing the d punct dimensional embedding of a query object takes o punct d punct time also it requires o punct d punct evaluations of dx result zz zz zz comparing the embedding of the query to the embeddings of n database objects takes time o punct dn punct for a fixed d comma these costs are similar to fastmap comma sparsemap comma and metricmap incase of dynamic data change no performance penalty will be required until the underlying database structure changes punct after too many inserts and deletions punct,complexity analysis punct cont dot,-7,-7,0,normal.
43,157,0.121019108280255,0.0700636942675159,0.222929936305732,embedding application punct filter and refine retrieval in applications where we are interested in retrieving the k nearest neighbors for a query object q comma a d punct dimensional embedding f can be used in a filter punct and punct refine framework compute and store vector f punct x punct for every database object x punct offline step punct for any new query q perform following punct embedding step punct compute f punct q punct comma by measuring the distances between q and the reference objects and punct or pivot objects used to define f filter step punct find the database objects whose associated vectors are the p most similar vectors to f punct q punct refine step punct sort those p candidates by evaluating the exact distance dx between q and each candidate the filter step discards most database objects by measuring distances between vectors the refine step applies dx only to the top p candidates,embedding application punct filter and,-7,-13,-6,normal.
45,88,0.0795454545454545,0.238636363636364,0.181818181818182,experiments comparison of the proposed method to the original boostmap method and fastmap will be done we used two different datasets punct the mnist and a time series dataset mnist punct dataset of handwritten digits punct from 0 to 9 punct shape context distance as the exact distance measure a training set of 60 comma 000 image time series punct dynamic time warping as the exact distance measure 32 comma 768 various sequences are obtained both shape context distance and dynamic time warping are very hard to compute,experiments comparison of the proposed,-13,-30,-17,normal.
45,85,0.152941176470588,0.164705882352941,0.388235294117647,experiments punct cont punct parameter zz zz zz k zz zz zz will be used in experiments as the number of k punct neighbor dot algorithms punct fastmap ra punct qi zz zz zz original boostmap se punct qs zz zz zz proposed method se punct qi zz zz zz intermediate method punct which incorporates our method of choosing training triples comma but still constructs a query punct insensitive embedding punct we will try to achieve all k punct neighbours with minimum number of comparisons,experiments punct cont punct parameter,-30,31,61,normal.
16,8,0.5,0.125,0.125,experiments punct mnist punct punct 90 accuracy punct,experiments punct mnist punct punct,31,0,-31,normal.
16,8,0.5,0.125,0.125,experiments punct mnist punct punct 95 accuracy punct,experiments punct mnist punct punct,0,0,0,normal.
14,9,0.444444444444444,0.333333333333333,0.111111111111111,experiments punct time serials punct punct 90 accuracy punct,experiments punct time serials punct,0,0,0,normal.
14,9,0.444444444444444,0.333333333333333,0.111111111111111,experiments punct time serials punct punct 95 accuracy punct,experiments punct time serials punct,0,-50,-50,normal.
54,78,0.0256410256410256,0.0512820512820513,0.192307692307692,conclusion the main difference of the proposed method with respect to existing embedding methods is that it constructs a query sensitive distance measure such a distance measure captures the fact that different embedding coordinates are important for different queries comma and thus leads to improved retrieval accuracy and speed by using smaller number of comparisions embeddings is a family of methods that is not domain specific and can be applied for efficient retrieval in non punct metric spaces,conclusion the main difference of,-50,-100,-100,normal.
0,4,0.75,0.25,0,thanks dot dot dot,,-100,-100,-100,normal.
21,36,0.138888888888889,0.361111111111111,0.388888888888889,towards a robust query optimizer punct zz a principled and practical approach acm sigmod conference comma 2005 babcock b dot and chaudhuri s dot presented by punct esma k zz zz l zz zz zz zz,towards a robust query optimizer,-100,-100,-100,normal.
21,34,0.0294117647058824,0.852941176470588,0.0882352941176471,outline introduction query optimizer an alternative approach to query optimization cardinality estimation related work the new approach the performance punct predictability tradeoff incorporating the probability distribution analysis of the approach experiments future work conclusion,outline introduction query optimizer an,-100,25,-100,normal.
65,82,0.134146341463415,0.121951219512195,0.146341463414634,introduction zz query optimizer the task punct to select a low punct cost query plan dot the difficulty punct only incomplete and imprecise information about query plan cost is available to the optimizer at query compilation time dot the standard approach punct first comma generate rough guesses as the values of the relevant cost model parameters using some statistics of the data dot next comma using rough guesses as inputs comma invoke a search algorithm to find the least costly plan dot,introduction zz query optimizer the,25,-3,-28,normal.
61,84,0.0833333333333333,0.142857142857143,0.178571428571429,introduction zz an alternative approach to query optimization the problem punct the standard approach ignores the uncertainty about the values of important cost parameters while calculating unique values dot the solution punct the new approach uses probabilistic reasoning to acknowledge uncertainties in the query planning process in a principled manner dot 	therefore comma it is capable of producing query plans that are more robust to estimation errors and changes in the running environment dot 	it focuses on the cardinality estimation phase of optimization dot,introduction zz an alternative approach,-3,-3,0,normal.
66,86,0.0813953488372093,0.0697674418604651,0.186046511627907,cardinality estimation comma zz a central subproblem in query optimization the time that a particular query plan takes to execute is crucially dependent on the sizes of the relations accessed in the query for that plan dot however comma they cannot generally be computed exactly without first executing the query plan dot therefore comma query optimizer needs to estimate them to produce cost estimation of the plan dot the problem of producing accurate size estimates for intermediate results is known as the cardinality estimation problem dot,cardinality estimation comma zz a,-3,-1,2,normal.
49,75,0.0666666666666667,0.0933333333333333,0.226666666666667,cardinality estimation zz estimating the selectivities typically comma the sizes of base relations are known punct the challenging part of cardinality estimation involves estimating the selectivities of the various selection conditions and estimating join predicates in a query dot from the optimizer zz zz zz s point of view comma the best case for the selectivity estimation would be to produce a probability distribution over possible selectivities instead of a point estimate of selectivity dot,cardinality estimation zz estimating the,-1,-5,-4,normal.
33,98,0.295918367346939,0.0714285714285714,0.204081632653061,related work various estimation techniques have been proposed punct histograms comma fourier transformations comma sampling comma dot dot punct dot but they use avi assumption to simplify calculations dot under the attribute value independence punct avi punct assumption comma predicates on different attributes are assumed to be independent of each other dot 	e dot g dot p punct a punct a and b punct b punct punct p punct a punct a punct dot p punct b punct b punct in fact comma avi assumption is violated frequently in real practice and causes serious query optimization errors dot,related work various estimation techniques,-5,-3,2,normal.
36,69,0.101449275362319,0.072463768115942,0.130434782608696,related work new techniques for modeling correlated multidimensional distributions comma such as multidimensional histograms comma have been proposed dot but comma none of them have yet been adopted in commercial dbms and they still provide a single punct point estimate of cardinality without providing any information about the uncertainty of the estimate dot the degree of uncertainty can be quite important in selecting the most appropriate query plan dot,related work new techniques for,-3,11,14,normal.
40,75,0.12,0.133333333333333,0.2,the new approach the proposed method punct a cardinality estimation procedure that is based on bayesian inference from pre punct computed random samples dot the advantages punct by using bayes zz zz zz rule comma the problematic avi assumption of previous studies is avoided dot an appropriate trade punct off between predictability and performance is expressed based on user or application preferences dot the procedure is compatible with the architecture of existing query optimizers dot,the new approach the proposed,11,-13,-24,normal.
31,91,0.175824175824176,0.10989010989011,0.21978021978022,the performance punct predictability tradeoff an example query optimizer problem punct a single query q running against a table with n rows choose an access method to retrieve records from relation r that satisfy the predicate punct a punct a punct and punct b punct b punct comma where a and b are two indexed attributes of r dot two different plans comma p1 and p2 comma exist punct index intersection plan sequential scan plan the two plans have different degrees of dependency on the punct unknown punct query selectivity dot,the performance punct predictability tradeoff,-13,0,13,normal.
47,83,0.108433734939759,0.108433734939759,0.168674698795181,the performance punct predictability tradeoff costs of the plans punct index intersection plan identifies the qualifying records based on the indexes and then retrieves just those records dot 	if the number of records to be retrieved is low comma it performs well dot however comma since the index intersection plan requires one random disk read per record comma it overcomes poorly when the selectivity is high dot sequential scan plan zz zz zz s cost is not directly depends the query selectivity dot,the performance punct predictability tradeoff,0,1,1,normal.
31,37,0.27027027027027,0.189189189189189,0.243243243243243,the performance punct predictability tradeoff 	which plan is preferable punct plan punct 1 comma if query selectivity is less than 26 punct dot plan punct 2 comma if the query selectivity is greater that 26 punct dot,the performance punct predictability tradeoff,1,-7,-8,normal.
29,111,0.135135135135135,0.0990990990990991,0.261261261261261,the performance punct predictability tradeoff as selectivity varies comma execution cost of plan punct 2 does not vary so much comma there is no risk for it to have high cost dot 	however comma cost of plan punct 1 varies so much as selectivity varies dot it may have very small or very large cost value comma depending on the selectivity dot when the probability distribution for selectivity is collapsed to its expected value comma as done in previous studies comma the information is lost dot therefore comma it should not be claimed that zz zz zz the query plan that has least expected cost is selected zz zz zz dot,the performance punct predictability tradeoff,-7,-10,-3,normal.
22,29,0.0689655172413793,0.172413793103448,0.172413793103448,reasoning about uncertainity how can knowledge of the probability distribution for selectivity be used to improve the query optimizer punct how can such a probability distribution be estimated punct,reasoning about uncertainity how can,-10,-9,1,normal.
24,60,0.15,0.116666666666667,0.366666666666667,incorporating the probability distribution 	which plan is preferable punct zz zz zz which part of the probability distribution is more important punct the middle part comma i dot e dot the zz zz zz typical zz zz zz behavior the right punct hand tail comma i dot e dot the zz zz zz realistic worst case zz zz zz behavior,incorporating the probability distribution 	which,-9,0,9,normal.
39,64,0.171875,0.109375,0.15625,incorporating the probability distribution 	which plan is preferable punct plan punct 1 comma if minimizing expected cost is the overriding concern dot plan punct 2 comma if users are more risk punct averse comma since the slightly higher expected cost of plan punct 2 has greater predictability comma the risk that the query will take much longer than expected to execute is reduced dot,incorporating the probability distribution 	which,0,-1,-1,normal.
29,75,0.266666666666667,0.08,0.213333333333333,incorporating the probability distribution zz confidence threshold the desired tradeoff between performance and predictability is expressed by means of an user punct application punct specified parameter called as confidence threshold comma t punct dot t punct can be alternatively punct and equivalently punct described in terms of the cumulative distribution function punct cdf punct for query execution cost dot t punct punct cdf punct c punct c punct cdf punct 1 punct t punct punct,incorporating the probability distribution zz,-1,-11,-10,normal.
36,113,0.221238938053097,0.079646017699115,0.292035398230089,incorporating the probability distribution zz derivation of execution cost distribution pdf punct c punct can be derived from pdf punct s punct where pdf punct s zz zz zz punct punct punct punct of occurence of s zz zz zz punct punct punct punct of tuples punct cost function c punct g punct s punct that is available implicit form through the cost estimation module but deriving cost for various selectivity could be an expensive task dot under the assumption that query execution cost is monotonically increasing function of selectivity comma it is enough to invert the cdf for selectivity dot s zz zz zz punct cdf punct 1 punct t punct punct,incorporating the probability distribution zz,-11,-4,7,normal.
27,81,0.0987654320987654,0.0987654320987654,0.148148148148148,selectivity estimation via sampling in this study comma the selectivity estimation is performed using uniform random samples of the relations in the database dot it improves robustness of the query process dot during query optimization comma the cardinality estimation module is invoked for each relational subexpression dot for each such expression comma how many tuples satisfy the expression is counted dot the number of satisfying tuples and the overall number of tuples in the sample are used in pdf calculation dot,selectivity estimation via sampling in,-4,-2,2,normal.
26,46,0.0434782608695652,0.152173913043478,0.152173913043478,selectivity estimation via sampling random sampling has some advantages over most selectivity estimation techniques punct it does not use the avi assumption comma so estimation errors are lessen the dimensionality of the data does not affect the accuracy of random sampling it is simple to implement,selectivity estimation via sampling random,-2,-54,-52,normal.
22,68,0.220588235294118,0.102941176470588,0.338235294117647,deriving the probability distribution suppose database consists of n tuples the predicate is satisfied by pn tuples 	 punct fraction of p of the database satisfies the predicate and 1 punct p do not punct probability of selecting k tuples out of n satisfying the predicate p punct x punct p punct punct bernoulli distribution punct pk dot punct 1 punct p punct punct n punct k punct,deriving the probability distribution suppose,-54,23,77,normal.
23,79,0.30379746835443,0.10126582278481,0.291139240506329,deriving the probability distribution the conditional density punct punct bayes zz zz zz rule punct 	pdf punct p punct z punct x punct punct p punct x punct p punct z punct dot pdf punct p punct z punct punct p punct x punct posterior punct likelihood punct prior punct evidence the unknown quantity p is treated as a random variable aim is to find the conditional probability distribution for p punct z comma given the observed data x,deriving the probability distribution the,23,13,-10,normal.
28,149,0.389261744966443,0.0469798657718121,0.375838926174497,deriving the probability distribution bayes zz zz zz rule punct 	 pdf punct p punct z punct x punct punct p punct x punct p punct z punct dot pdf punct p punct z punct punct p punct x punct p punct x punct punct does no depend on z comma common for all p punct z p punct x punct p punct z punct punct zk dot punct 1 punct z punct punct n punct k punct pdf punct p punct z punct punct prior knowledge about query workload is lacking is assumed to be uniform distribution	f punct z punct punct 1 for 0 punct punct z punct punct 1 	or is assumed to be beta distribution punct most widely accepted non punct informative prior punct f punct z punct zz zz zz z punct 1 punct 2 dot punct 1 punct z punct punct 1 punct 2,deriving the probability distribution bayes,13,-8,-21,normal.
52,64,0.078125,0.09375,0.171875,summary of zz the estimation procedure the optimizer searches the optimal plan through many possible query plans dot during this search comma the optimizer makes a number of subroutine calls to the cardinality estimation module to estimate the size of various intermediate query results dot in this study comma the cardinality estimation module is modified to estimate the selectivity of each query predicate punct,summary of zz the estimation,-8,-6,2,normal.
37,90,0.122222222222222,0.0888888888888889,0.288888888888889,summary of zz the estimation procedure determine the appropriate random sample of the data to use comma based on the relations involved in the query expression dot evaluate the predicate on the sample and use bayes zz zz zz rule to infer a probability distribution for selectivity dot choose the proper confidence threshold t punct based on user preferences and compute the selectivity 	 s punct cdf punct 1 punct t punct punct dot return zz zz zz s zz zz zz as the estimated selectivity of the predicate dot,summary of zz the estimation,-6,-20,-14,normal.
30,70,0.142857142857143,0.0857142857142857,0.271428571428571,analysis zz an example assume a simple linear cost model punct 	the execution time for query plan pi punct vi punct pn punct fi pn punct the number of tuples satisfying the query predicate comma p punct the query selectivity n punct total number of rows vi is the incremental cost per tuple for plan pi fi is the fixed overhead comma independent of query selectivity comma for plan pi,analysis zz an example assume,-20,0,20,normal.
36,106,0.30188679245283,0.0754716981132075,0.339622641509434,analysis zz an example plan punct 1 and plan punct 2 roughly resemble an index intersection plan and a sequential scan plan dot the parameter values that are chosen empirically punct n punct 6 dot 000 dot 000 comma f1 punct 5 comma v1 punct 3 dot 5 zz zz 10 punct 3 f2 punct 35 comma v2 punct 3 dot 5 zz zz 10 punct 6 the crossover point where plan plan punct 2 becomes better than plan plan punct 1 is at a selectivity of punct 	pc punct punct f1 punct f2 punct punct punct v2n punct v1n punct punct 0 dot 14 punct,analysis zz an example plan,0,-12,-12,normal.
32,68,0.205882352941176,0.0882352941176471,0.294117647058824,analysis zz an example if the query optimizer knew the actual query selectivity exactly comma it would always choose plan plan punct 2 whenever the selectivity p punct the crossover point pc and plan plan punct 1 when p punct pc 0 dot 14 punct dot instead comma the estimated selectivity s zz zz zz punct cdf punct 1 punct t punct punct will be compared with pc,analysis zz an example if,-12,-1,11,normal.
18,52,0.153846153846154,0.115384615384615,0.307692307692308,analytical results higher t punct zz zz zz the query optimizer more prone to overestimation dot punct the optimizer choses p2 when p1 would be better punct lower t punct zz zz zz the query optimizer more prone to underestimation dot punct the optimizer chooses p1 when p2 would be better punct,analytical results higher t punct,-1,-57,-56,normal.
20,38,0.0789473684210526,0.105263157894737,0.210526315789474,analytical results the higher t punct zz zz zz the less variability occurs in the query optimization time the moderate settings t punct are better than extremely high or low settings at producing low expected execution times dot,analytical results the higher t,-57,37,94,normal.
31,72,0.194444444444444,0.0972222222222222,0.166666666666667,experiments the query optimizer of a commercial dbms comma microsoft sql server comma is modified by replacing the existing histogram punct based cardinality estimation module with the proposed module dot larger selectivities are easier to estimate accurately comma so estimation error is less when the selectivity is higher dot therefore comma low punct selectivity queries are concentrated dot the tpc punct h benchmark dataset punct punct 1 gb punct is used dot,experiments the query optimizer of,37,-13,-50,normal.
45,137,0.175182481751825,0.0510948905109489,0.408759124087591,experiments zz single punct table query scenario the template used for this scenario is select sum punct extendedprice punct from lineitem where shipdate between zz zz zz 07 punct 01 punct 97 zz zz zz and zz zz zz 09 punct 30 punct 97 zz zz zz 	 and receiptdate between punct zz zz zz 07 punct 01 punct 97 zz zz zz punct punct punct and punct zz zz zz 09 punct 30 punct 97 zz zz zz punct punct punct the degree of overlap between the set of rows satisfying the condition on shipdate and receiptdate is controlled by the value of zz zz zz punct zz zz zz varied so that the overall query selectivity was between 0 punct and 0 dot 6 punct of the 6 million rows from the lineitem table dot,experiments zz single punct table,-13,-5,8,normal.
22,38,0.157894736842105,0.184210526315789,0.210526315789474,experiments zz single punct table query scenario 	the commercial dbms zz zz zz s standard estimation module is worse punct dot dot because it always selects the index intersection plan comma which performed poorly at higher selectivities dot,experiments zz single punct table,-5,-1,4,normal.
15,51,0.137254901960784,0.196078431372549,0.274509803921569,experiments zz single punct table query scenario 	the variance in execution cost decreases steadily as t punct increases dot commercial dbms zz zz zz s standard estimation is significantly worse punct dot dot because it always uses avi assumption even with correlated data instead of bayes zz zz zz rule dot,experiments zz single punct table,-1,-2,-1,normal.
65,75,0.106666666666667,0.106666666666667,0.173333333333333,experiments zz three punct table join scenario in this query scenario comma the query template consists of a natural join between the lineitem table comma the orders table comma and the part table dot there is an additional selection condition on the part table which is used as the free parameter that is varied in this scenario dot all relations clustered on their primary keys comma with additional indexes on the foreign key columns dot,experiments zz three punct table,-2,-1,1,normal.
84,129,0.116279069767442,0.0697674418604651,0.124031007751938,experiments zz three punct table join scenario in this query scenario comma the optimal query plan has one of three different structures comma depending on the number of rows selected from the part table that satisfy the predicate punct at low selectivities comma the best plan is to first join part to lineitem using indexed nested loops join comma and then hash join with orders dot when the selectivity gets a little higher comma the best plan is a sequence of hash joins comma first between lineitem and part and then with orders dot when the query selectivity goes higher than approximately 10 punct comma the optimal plan is to first merge join the two larger relations comma lineitem and orders comma and then hash join with part dot,experiments zz three punct table,-1,-1,0,normal.
30,51,0.0784313725490196,0.137254901960784,0.196078431372549,experiments zz three punct table join scenario this shows that the properties of the proposed method is applicable for a broader class of queries dot although the types of queries involved in two scenarios are quite different comma each of subfigures is similar to its counterpart from the first scenario dot,experiments zz three punct table,-1,-21,-20,normal.
42,71,0.140845070422535,0.0422535211267606,0.225352112676056,experimental conclusions a confidence threshold of 80 punct achieves both good performance punct low average execution time punct and good predictability punct little variability in execution time punct dot a confidence threshold of 95 punct leads to very stable query plans so it is good for situations where predictability is the major concern dot confidence thresholds below 50 punct are rather speculative and are likely to be of limited applicability dot,experimental conclusions a confidence threshold,-21,37,58,normal.
30,74,0.135135135135135,0.0945945945945946,0.148648648648649,future work as join expressions comma only foreign punct key joins are used dot extending the techniques to work with the full generality of sql is a direction for future work dot the time spent in query optimization was about 30 punct punct 40 punct more than time using standard histograms dot because the implementation lacks even basic optimization such as memorizing dot validation of experimental conclusions will be checked through additional experimentation dot,future work as join expressions,37,-42,-79,normal.
47,67,0.0746268656716418,0.0597014925373134,0.26865671641791,conclusion by one definition comma a robust query optimizer is one that generates plans that work reasonably well even when optimizer assumptions fail to hold dot in this study comma a novel cardinality estimation procedure is developed that manages uncertainty in a principled way by reasoning probabilistically about selectivity dot 	 zz zz zz how can we increase the robustness of query optimizers punct zz zz zz,conclusion by one definition comma,-42,0,42,normal.
32,47,0.106382978723404,0.0638297872340425,0.191489361702128,conclusion users should be allowed to prioritize performance criterions dot in the estimation technique in this study comma the query planning process is incorporated with user or application preferences about the predictability vs dot performance tradeoff comma explicitly expressed through the setting of a single parameter dot,conclusion users should be allowed,0,146,146,normal.
9,4,0,0.5,0,thanks for listening questions,,146,-100,-100,normal.
57,17,0.117647058823529,0.411764705882353,0.117647058823529,adaptive stream filters for entity punct based zz queries with non punct value tolerance zz vldb 2005,adaptive stream filters for entity,-100,-100,-100,normal.
10,57,0.333333333333333,0.263157894736842,0,data streams and applications data stream management systems punct dsms punct sensor networks comma location punct based applications stream punct abb03 punct comma steam punct hafme03 punct comma aurora punct acc03 punct comma cacq punct msh02 punct stream applications telecom call records network security punct bo03 punct habitat monitoring punct mps02 punct structural health monitoring continuous queries,data streams and applications data,-100,4,-100,normal.
10,38,0.184210526315789,0.473684210526316,0.0263157894736842,dsms model user query processing unit central processor continuous query result punct refreshed if needed punct stream stream stream stream network real punct time comma response time requirement massive comma fast limited memory comma cpu comma network bandwidth,dsms model user query processing,4,-8,-12,normal.
18,39,0.0512820512820513,0.128205128205128,0.128205128205128,trading accuracy for query timeliness a user may accept an answer with a carefully controlled error tolerance wide punct area resource accounting load punct balancing in replicated servers the system exploits error tolerance to reduce communication and computation costs,trading accuracy for query timeliness,-8,36,44,normal.
33,55,0.0909090909090909,0.127272727272727,0.236363636363636,value punct based tolerance often assumed in literature punct ojw03 comma jcw04 punct maximum error is a numerical value zz zz zz specified by user max query punct return sensor id with the highest temperature guarantee the sensor id returned has temperature value not lower than zz zz zz from that of the true answer,value punct based tolerance often,36,-1,-37,normal.
39,82,0.280487804878049,0.109756097560976,0.195121951219512,is selecting zz zz zz easy punct location punct based application punct a user inquires about his closest neighbor should the tolerance be 0 dot 1 comma 1 comma or 100 meters punct sensor network collects humidity comma temperature comma uv punct index comma wind speed does user know the range of error for each type punct multi punct dimensional data streams punct e dot g dot comma location punct multimedia data streams punct e dot g dot comma cctv images punct,is selecting zz zz zz,-1,-1,0,normal.
22,75,0.0266666666666667,0.12,0.626666666666667,is selecting zz zz zz for max query easy punct suppose a user accepts an object that ranks 2nd or above dot zz zz zz small if zz zz zz is too small zz zz zz zz zz zz zz zz zz large if zz zz zz is too large zz zz zz zz zz zz zz zz zz ideal the ideal zz zz zz zz zz zz zz zz zz tolerance wasted error unacceptable,is selecting zz zz zz,-1,-1,0,normal.
28,38,0.131578947368421,0.157894736842105,0.157894736842105,rank punct based tolerance express error tolerance as a rank error tolerance punct no dot of positions the returned sensor could rank below the highest one more intuitive and easier to specify rank punct based tolerance punct 1,rank punct based tolerance express,-1,-46,-45,normal.
24,85,0.282352941176471,0.117647058823529,0.352941176470588,non punct value tolerance rank punct based tolerance is non punct value punct tolerance numerical value zz zz zz not used fraction punct based tolerance false positive f punct punct t punct punct punct of returned answers that are incorrect at time t false negative f punct punct t punct punct punct of correct answers not returned at time t f punct punct t punct zz zz zz zz zz zz punct punct f punct punct t punct zz zz zz zz zz zz punct,non punct value tolerance rank,-46,44,90,normal.
27,76,0.289473684210526,0.0789473684210526,0.131578947368421,entity punct based queries return sets of object ids comma not numerical values punct ckp03 punct rank punct based queries punct order of stream values decides the final answer e dot g dot comma top punct k query comma k punct nearest punct neighbor query non punct rank punct based queries punct order of stream values is not important e dot g dot comma range query non punct value tolerance matches entity punct based queries punct,entity punct based queries return,44,-24,-68,normal.
14,3,0,1,0,continuous query classification,,-24,-46,-22,normal.
14,58,0.224137931034483,0.396551724137931,0.258620689655172,adaptive filter punct ojw03 punct punct zz initialization phase constraint assignment unit data stream 1 filter bounds user punct defined tolerance data stream 2 data stream 3 punct l3 comma u3 punct punct l2 comma u2 punct punct l1 comma u1 punct answer tolerance is met as long as no update is generated query processing unit approximate answer,adaptive filter punct ojw03 punct,-46,-31,15,normal.
12,80,0.3125,0.4,0.25,adaptive filter punct maintenance phase constraint assignment unit new filter bound user punct defined tolerance update punct v2 punct u2 or v2 punct l2 punct data stream 1 punct v1 punct data stream 2 punct v2 punct data stream 3 punct v3 punct punct l3 comma u3 punct punct l2 comma u2 punct punct l1 comma u1 punct punct l2 comma u2 punct request value v3 tolerance violated punct trigger maintenance phase query processing unit approximate answer corrected approximate answer,adaptive filter punct maintenance phase,-31,94,125,normal.
22,40,0.2,0.075,0.1,contributions apply filter bounds to rank punct based punct non punct rank punct based queries subject to rank punct based punct fraction punct based tolerance to reduce message costs correctness proofs comma cost analysis and experimental evaluation of each protocol,contributions apply filter bounds to,94,-191,-285,normal.
23,16,0.25,0.1875,0.375,filter bound protocols rtp ft punct rp ft punct nrp zt punct rp zt punct nrp,filter bound protocols rtp ft,-191,66,257,normal.
12,38,0.184210526315789,0.289473684210526,0.5,non punct rank punct based queries s6 s5 s2 s7 s4 s8 s1 s3 ordered values answer set example punct 1d range query 2 6 11 14 23 25 34 41 range punct punct 10 comma 30 punct,non punct rank punct based,66,87,21,normal.
16,29,0.172413793103448,0.379310344827586,0.413793103448276,fraction punct based tolerance s6 s5 s2 s7 s4 s8 s1 s3 range of q punct punct l comma u punct ordered values update update false positive false negative,fraction punct based tolerance s6,87,17,-70,normal.
23,57,0.526315789473684,0.0701754385964912,0.315789473684211,fraction punct based tolerance answer actually returned a punct t punct e punct punct t punct true answer at time t punct a punct t punct punct punct e punct punct t punct e punct punct t punct punct punct a punct t punct punct punct e punct punct t punct punct e punct punct t punct,fraction punct based tolerance answer,17,-70,-87,normal.
30,151,0.251655629139073,0.119205298013245,0.350993377483444,initialization phase given zz zz punct and zz zz punct collect current stream values for streams satisfying the range query calculate no dot of streams punct emax punct punct that can be false positives assign false punct ve filters punct punct zz zz zz comma punct zz zz zz punct to emax streams assign punct l comma u punct to remaining ones for streams failing the range query calculate no dot of streams punct emax punct punct that can be false negatives assign false punct ve filters punct punct zz zz zz comma punct zz zz zz punct to emax punct streams assign punct l comma u punct to remaining ones tolerance is satisfied if no new updates are received at any time t without update comma f punct punct t punct zz zz zz zz zz zz punct f punct punct t punct zz zz zz zz zz zz punct,initialization phase given zz zz,-70,-6,64,normal.
13,84,0.333333333333333,0.0952380952380952,0.5,maintenance phase punct good update s6 s5 s2 s7 s4 s8 s1 s3 insert s7 into a punct tc punct f punct and f punct drop f punct punct tc punct punct f punct punct t0 punct zz zz zz zz zz zz punct f punct punct tc punct punct f punct punct t0 punct zz zz zz zz zz zz punct tolerance is met time tc time t0 filter punct l comma u punct range of q punct punct l comma u punct,maintenance phase punct good update,-6,-16,-10,normal.
16,78,0.230769230769231,0.141025641025641,0.487179487179487,maintenance phase punct bad update remove si from a punct tc punct f punct punct tc punct zz zz zz zz zz zz punct and f punct punct tc punct zz zz zz zz zz zz punct may not be true quality of answer becomes worse procedure fix to maintain tolerance s6 s5 s2 s4 s8 s1 s3 time tc time t0 filter punct l comma u punct range of q punct punct l comma u punct s7,maintenance phase punct bad update,-16,19,35,normal.
16,136,0.264705882352941,0.0882352941176471,0.522058823529412,fix punct consulting false positive filter s6 s5 s2 s7 s4 s8 s1 s3 select stream s4 zz zz zz a punct tc punct with punct punct zz zz zz comma punct zz zz zz punct filter request s4 for its updated value if v4 zz zz zz punct l comma u punct install punct l comma u punct filter to s4 prove that f punct punct tc punct zz zz zz zz zz zz punct and f punct punct tc punct zz zz zz zz zz zz punct are satisfied if v4 zz zz zz punct l comma u punct comma consult a false zz zz zz ve filter worst case punct 5 messages filter punct punct zz zz zz comma punct zz zz zz punct range of q punct punct l comma u punct,fix punct consulting false positive,19,34,15,normal.
25,117,0.239316239316239,0.111111111111111,0.341880341880342,filter bound protocols for rank punct based queries k punct nn query is a representative of nn comma min comma max fraction punct based tolerance punct k punct nn query view a k punct nn query as a range query comma by using the kth nearest neighbor as the zz zz zz range zz zz zz adapt fraction punct based tolerance punct range query rank punct based tolerance punct k punct nn query maintain knowledge about punct k punct r punct th and punct k punct r punct 1 punct st item filter bound is defined by the average of the punct k punct r punct th and punct k punct r punct 1 punct st item,filter bound protocols for rank,34,-98,-132,normal.
23,30,0.0666666666666667,0.2,0.2,experiments compare no filter is used at all filter protocols with zero tolerance our tolerance punct based protocols measure total no dot of messages required for executing a continuous query,experiments compare no filter is,-98,156,254,normal.
12,45,0.133333333333333,0.288888888888889,0.177777777777778,experimental setup real data 30 days of wide punct area traces of tcp connections based on tcp trace punct ita20 punct synthetic data generated by csim 18 data value punct uniform distribution fluctuation of updates punct normal distribution interarrival time of updates punct exponential distribution,experimental setup real data 30,156,-28,-184,normal.
25,10,0.1,0.6,0,fraction punct based tolerance for range query with real data,fraction punct based tolerance for,-28,0,28,normal.
25,10,0.1,0.6,0,fraction punct based tolerance for range query with synthetic data,fraction punct based tolerance for,0,-53,-53,normal.
25,68,0.205882352941176,0.132352941176471,0.0882352941176471,conclusions value punct based tolerance can be difficult to specify for continuous queries in stream systems rank punct based and fraction punct based tolerance applied to rank punct queries and non punct rank punct queries filter bound protocols translate non punct value punct tolerance to filter bounds experiments illustrate protocol effectiveness please contact reynold cheng punct csckcheng punct comp dot polyu dot edu dot hk punct for details,conclusions value punct based tolerance,-53,108,161,normal.
37,35,0.4,0.257142857142857,0.0571428571428571,contact information reynold cheng hong kong polytechnic university email punct csckcheng punct comp dot polyu dot edu dot hk http punct punct punct www dot comp dot polyu dot edu dot hk punct punct csckcheng,contact information reynold cheng hong,108,-148,-256,normal.
21,44,0.0681818181818182,0.159090909090909,0.204545454545455,issues of running out of filters if all false positive and false negative filters run out comma the system degrades to one in which no tolerance is exploited to improve performance comma initialization phase may be executed again experiments over long punct running queries,issues of running out of,-148,-2,146,normal.
12,4,0.25,0.75,0,long punct running queries,,-2,125,127,normal.
26,28,0.178571428571429,0.571428571428571,0,talk outline non punct value punct based tolerance filter bound framework filter bound for fraction punct based tolerance for non punct rank punct based queries experimental results conclusions,talk outline non punct value,125,0,-125,normal.
26,28,0.178571428571429,0.571428571428571,0,talk outline non punct value punct based tolerance filter bound framework filter bound for fraction punct based tolerance for non punct rank punct based queries experimental results conclusions,talk outline non punct value,0,0,0,normal.
26,28,0.178571428571429,0.571428571428571,0,talk outline non punct value punct based tolerance filter bound framework filter bound for fraction punct based tolerance for non punct rank punct based queries experimental results conclusions,talk outline non punct value,0,-175,-175,normal.
16,58,0.275862068965517,0.327586206896552,0.137931034482759,tolerance punct filter bounds punct ojw03 punct user query processing unit processor continuous query punct tolerance result with error guarantee constraint assignment unit stream stream stream stream dropped data constraint filter bound punct l comma u punct punct l comma u punct punct l comma u punct update sent only when value crosses punct l comma u punct,tolerance punct filter bounds punct,-175,154,329,normal.
23,57,0.526315789473684,0.0701754385964912,0.315789473684211,fraction punct based tolerance answer actually returned a punct t punct e punct punct t punct true answer at time t punct a punct t punct punct punct e punct punct t punct e punct punct t punct punct punct a punct t punct punct punct e punct punct t punct punct e punct punct t punct,fraction punct based tolerance answer,154,49,-105,normal.
7,12,0,0.333333333333333,0.666666666666667,zero tolerance s6 s5 s2 s7 s4 s8 s1 s3 update update,zero tolerance s6 s5 s2,49,-114,-163,normal.
25,66,0.242424242424242,0.181818181818182,0.227272727272727,zero punct tolerance protocol punct zt punct nrp punct given a range query punct l comma u punct initialization phase emit punct l comma u punct to each stream source maintenance phase for any stream source comma if its value crosses punct l comma u punct comma send its new value to the server no message from server is needed generates a lot of updates punct,zero punct tolerance protocol punct,-114,-24,90,normal.
7,26,0.230769230769231,0.230769230769231,0.538461538461538,fix punct consulting false positive filter s6 s5 s2 s7 s4 s8 s1 s3 filter punct punct zz zz zz comma punct zz zz zz punct,fix punct consulting false positive,-24,-6,18,normal.
24,149,0.288590604026846,0.087248322147651,0.516778523489933,fix step 2 punct consulting false punct ve filter s6 s5 s2 s7 s4 s8 s1 s3 if s4 zz zz zz a punct tc punct remove s4 from a punct t punct select stream s7 zz zz zz a punct tc punct with punct punct zz zz zz comma punct zz zz zz punct filter if v7 zz zz zz punct l comma u punct comma insert s7 into answer set install the punct l comma u punct filter to s7 prove that f punct punct tc punct zz zz zz zz zz zz punct and f punct punct tc punct zz zz zz zz zz zz punct are satisfied worst case punct 5 messages filter punct punct zz zz zz comma punct zz zz zz punct filter punct punct zz zz zz comma punct zz zz zz punct range of q punct punct l comma u punct,fix step 2 punct consulting,-6,9,15,normal.
8,41,0.292682926829268,0.170731707317073,0.536585365853659,fix step 2 punct consulting false punct ve filter s6 s5 s2 s7 s4 s8 s1 s3 filter punct punct zz zz zz comma punct zz zz zz punct filter punct punct zz zz zz comma punct zz zz zz punct,fix step 2 punct consulting,9,11,2,normal.
10,9,0.333333333333333,0.444444444444444,0.222222222222222,false punct ve punct punct ve filters selection heuristic,false punct ve punct punct,11,-100,-100,normal.
77,9,0.111111111111111,0.666666666666667,0.111111111111111,farmer punct finding interesting rule groups in microarray datasets,farmer punct finding interesting rule,-100,-100,-100,normal.
22,7,0,1,0,outline background motivations algorithms performance studies conclusions,outline background motivations algorithms performance,-100,174,-100,na.
23,114,0.254385964912281,0.087719298245614,0.394736842105263,task mining association rules from dataset dot zz zz a punct easy to understand zz b punct useful for classification what kind of dataset we deal with dot dot a punct dataset d consists of a set of rows r punct punct r1 comma r2 dot dot rn punct b punct there exists a set of items i punct punct a comma b comma c comma d zz zz zz punct c punct each row ri consists of a sub set of i comma d punct there exists a set of class label c punct punct c1 comma c2 dot dot ck punct e punct each row ri contains a class label from c,task mining association rules from,174,-178,-352,normal.
14,47,0.170212765957447,0.106382978723404,0.212765957446809,dataset in the microarray punct biology punct dataset punct zz each row in the dataset corresponds to a sample each item value in the dataset corresponds to a distretized gene expression value dot class labels correspond to category of sample comma punct cancer punct not cancer punct,dataset in the microarray punct,-178,189,367,normal.
31,83,0.301204819277108,0.132530120481928,0.325301204819277,association rule association rule takes the form of zz lhs punct punct ci zz lhs is a set of items dot ci is a class label dot support of a punct sup punct a punct comma the number of rows in dataset containing a dot support of rule r punct lhs punct punct ci comma sup punct lhs zz zz zz ci punct dot confidence of rule r punct lhs punct punct ci comma sup punct r punct punct sup punct lhs punct,association rule association rule takes,189,-22,-211,normal.
36,27,0.518518518518518,0.148148148148148,0.333333333333333,example rule r punct punct a comma e comma h punct punct punct c support punct r punct punct 2 condifence punct r punct punct 66 punct,example rule r punct punct,-22,7,29,normal.
18,37,0.189189189189189,0.162162162162162,0.162162162162162,general solution step1 punct find all frequently occurred itemsets from dataset d dot step2 punct generate rule in the form of itemset punct punct c dot prune rules that do not have enough support an confidence dot,general solution step1 punct find,7,-74,-81,normal.
18,30,0.1,0.166666666666667,0.166666666666667,previous algorithms item enumeration punct search all the frequent itemsets by checking all possible combinations of items dot we can simulate the search process in an item enumeration tree dot,previous algorithms item enumeration punct,-74,67,141,normal.
21,63,0.492063492063492,0.0476190476190476,0.333333333333333,previous algorithms rule generation punct e dot g dot comma we get frequent itemset punct a comma e comma h punct zz zz punct a comma e comma h punct punct punct c comma sup punct 2 comma confidence punct 66 punct zz punct a comma e comma h punct punct punct punct c comma sup punct 1 comma confidence punct 33 punct,previous algorithms rule generation punct,67,26,-41,normal.
16,32,0.125,0.125,0.21875,microarray data features of microarray data a few rows punct 100 punct 1000 a large number of items comma 10000 the space of all the combinations of items is large 210000 dot,microarray data features of microarray,26,2,-24,normal.
21,48,0.0416666666666667,0.125,0.145833333333333,motivations punct punct challenges very slow for existing rule mining algorithms item search space is exponential to the number of item use the idea of row enumeration to design new algorithm the number of association rules are too huge even for a given consequent mine interesting rule groups,motivations punct punct challenges very,2,-19,-21,normal.
77,74,0.135135135135135,0.0675675675675676,0.459459459459459,definition row support set punct given a set of items i zz zz zz comma we denote r punct i zz zz zz punct as the largest set of rows that contain i dot item support set punct given a set of rows r zz zz zz comma we denote i punct r zz zz zz punct as the largest set of items that are common among rows in r zz zz zz dot,definition row support set punct,-19,-9,10,normal.
31,57,0.43859649122807,0.0175438596491228,0.508771929824561,example i zz zz zz punct punct a comma e comma h punct comma then r punct i zz zz zz punct punct punct r2 comma r3 comma r4 punct r zz zz zz punct punct r2 comma r3 punct comma then i punct r zz zz zz punct punct punct a comma e comma h punct,example i zz zz zz,-9,19,28,normal.
33,93,0.225806451612903,0.0967741935483871,0.247311827956989,farmer punct rule group what is rule group punct zz given a one row dataset punct punct a comma b comma c comma d comma e comma cancer punct comma 31 rules in the form of lhs zz zz zz cancer dot the same row and the same confidence punct 100 punct punct dot 1 upper bound and 5 lower bound rule group punct a set of association rules whose lhs itemsets occurs in a same set of rows dot rule group has a unique upper bound dot zz abcde punct punct cancer,farmer punct rule group what,19,-1,-20,normal.
36,118,0.127118644067797,0.101694915254237,0.466101694915254,farmer punct interesting rule group consider two rules punct zz abcd zz zz zz cancer punct confidence 90 punct punct zz ab zz zz zz cancer punct confidence 95 punct punct dot ab is a better indicator of cancer than abcd ab zz zz zz cancer has a higher confidence and all rows covering abcd zz zz zz cancer must cover ab zz zz zz cancer irg punct rule group r is irg if there exists no other irg r zz zz zz whose upper bound rule r zz zz zz u is a subset of r zz zz zz s upper bound ru and confidence punct r zz zz zz u punct punct confidence punct ru punct,farmer punct interesting rule group,-1,-54,-53,normal.
26,70,0.157142857142857,0.0428571428571429,0.414285714285714,irg each irg corresponds to a unique row set r dot each irg has a unique upper bound rule ru dot given a row set r zz zz zz comma we can get a unique irg whose upper bound rule is zz i punct r zz zz zz punct punct punct c zz and whose corresponding row set is zz r punct i punct r zz zz zz punct punct,irg each irg corresponds to,-54,36,90,normal.
30,112,0.491071428571429,0.0357142857142857,0.428571428571429,example given row set r zz zz zz punct punct r2 comma r3 punct i punct r zz zz zz punct punct punct a comma e comma h punct irg punct zz ru punct punct punct a comma e comma h punct punct punct c zz row set punct r punct i punct r zz zz zz punct punct punct r punct punct a comma e comma h punct punct punct punct r2 comma r3 comma r4 punct support punct ru punct punct 2 zz confidence punct ru punct punct 66 punct punct a comma e punct punct punct c comma punct a comma h punct punct punct c zz zz zz,example given row set r,36,-35,-71,normal.
20,48,0.229166666666667,0.125,0.1875,farmer punct row enumeration search in the space of all combinations of rows dot smaller size 21000 dot punct punct punct 210000 punct since zz each irg punct punct a unique rowset zz each rowset punct punct a unique irg we can get all irg by row enumeration,farmer punct row enumeration search,-35,1,36,normal.
42,3,0,1,0,row enumeration tree,,1,-70,-71,normal.
20,15,0,0.4,0,general pruning method estimate upper bound for pruning minimum support minimum confidence minimum chi square,general pruning method estimate upper,-70,108,178,normal.
20,42,0.0714285714285714,0.0952380952380952,0.166666666666667,irg and association rules from irg comma we can get the entire set of association rules found by any other item enumeration rule mining algorithms dot any association rule found in those algorithm belongs to one of the irg we found dot,irg and association rules from,108,-9,-117,na.
31,94,0.372340425531915,0.0425531914893617,0.340425531914894,irg and association rules given an irg with upper bound ru and lower bound set rl dot zz any rule r zz zz zz with zz belongs to irg and has same support and confidence dot irg1 punct ru punct punct punct a comma e comma h punct punct punct c zz rl punct punct punct e punct punct punct c comma punct h punct punct punct c comma punct zz punct a comma e punct punct punct c comma punct a comma h punct punct punct c zz zz zz belongs to irg1,irg and association rules given,-9,-147,-138,normal.
20,32,0.0625,0.1875,0.125,lower bound lower bound can be generated from upper bound dot find smallest subset of upper bound that occurs only in the row set of the irg dot use incremental generate method,lower bound lower bound can,-147,145,292,normal.
14,32,0.0625,0.34375,0.09375,experimental studies efficiency of farmer on five real punct life dataset varying the minimum support varying the minimum confidence varying the minimum chi punct square benchmark charm columne usefulness of irgs classification,experimental studies efficiency of farmer,145,-164,-309,na.
11,16,0.1875,0.3125,0,dataset clinical dataset punct prostate cancer 136 rows comma 12600 items class1 tumor comma class2 normal,dataset clinical dataset punct prostate,-164,-38,126,normal.
14,5,0.4,0.4,0,example results punct punct prostate,,-38,0,38,normal.
14,5,0.4,0.4,0,example results punct punct prostate,,0,0,0,normal.
40,2,0,0.5,0,classification results,,0,237,237,normal.
15,27,0.0740740740740741,0.111111111111111,0.0740740740740741,conclusions proposed a novel algorithm to discover interesting rule group for given consequent dot much more efficient than previous item enumeration algorithms when handling microarray dataset dot,conclusions proposed a novel algorithm,237,-249,-486,normal.
2,2,0,1,0,thank you,,-249,171,420,na.
14,60,0.116666666666667,0.05,0.433333333333333,prune method 1 removing items that appear in all tuples of transposed db will not affect results r2 r3 punct aeh punct r4 has 100 punct support in the projected table of zz zz zz r2r3 zz zz zz comma therefore branch zz zz zz r2 r3r4 zz zz zz will be pruned dot r2 r3 r4 punct aeh punct,prune method 1 removing items,171,-31,-202,normal.
34,63,0.0952380952380952,0.0634920634920635,0.317460317460317,pruning method 2 at a node comma if an upper bound rule is detected to be discovered before comma we can prune enumeration below this node because all upper bounds below this node has been discovered before for example comma at node 34 comma if we found that 2 appear in all tuple of tt punct 34 comma we can prune node 34,pruning method 2 at a,-31,-3,28,normal.
20,91,0.296703296703297,0.0659340659340659,0.318681318681319,pruning method 3 punct punct zz minimum support given x punct punct x1 comma x2 comma zz zz zz comma xn punct and tt punct x punct xn positive class punct loose upper bound punct obtained before scanning transposed table punct x punct punct lu comma lu punct punct the number of possible extensions of x in tt punct x tight upper bound punct obtained after scanning transposed table punct x punct punct tu comma tu punct punct the maximal number of possible extension in all tuples of tt punct x,pruning method 3 punct punct,-3,-3,0,normal.
25,99,0.171717171717172,0.101010101010101,0.414141414141414,pruning method 3 punct punct minimum confidence given x punct punct x1 comma x2 comma zz zz zz comma xn punct and tt punct x rule r conf punct r punct punct a punct punct a punct b punct a zz zz zz the occurrences of rule r in positive b zz zz zz the occurrences of rule r in negative is maximized at largest possible a and smallest b loose upper bound punct the maximal possible a before scanning b at the node x tight upper bound the maximal possible a after scanning b at the node x,pruning method 3 punct punct,-3,-108,-105,normal.
36,11,0.0909090909090909,0.181818181818182,0.454545454545455,pruning method 3 zz zz zz zz minimum chi punct square,pruning method 3 zz zz,-108,23,131,normal.
28,6,0.166666666666667,0.666666666666667,0.166666666666667,example figure 1 punct example table,example figure 1 punct example,23,13,-10,normal.
35,94,0.297872340425532,0.0851063829787234,0.319148936170213,lower bounds algorithm of discovering lower bounds for an upper bound incremental method to update example punct an upper bound rule with antecedent a punct abcde and two rows punct r1 punct abcf punct and punct r2 punct cdeg punct initialize lower bounds punct a comma b comma c comma d comma e punct add zz zz zz abc zz zz zz punct punct punct new lower punct d comma e punct add zz zz zz cde zz zz zz punct punct punct new lower punct ad comma bd comma ae comma be punct,lower bounds algorithm of discovering,13,-100,-100,normal.
46,16,0.125,0.625,0.1875,fast computation of database operations using graphics processors naga k dot govindaraju		univ dot of north carolina,fast computation of database operations,-100,-100,-100,normal.
46,11,0,0.181818181818182,0.0909090909090909,goal utilize graphics processors for fast computation of common database operations,goal utilize graphics processors for,-100,-100,-100,normal.
12,27,0.0740740740740741,0.333333333333333,0.0740740740740741,motivation punct fast operations increasing database sizes faster processor speeds but low improvement in query execution time memory stalls branch mispredictions resource stalls eg dot instruction dependency,motivation punct fast operations increasing,-100,-2,-100,normal.
10,18,0,0.333333333333333,0.222222222222222,graphics processors present in most pcs designed primarily for fast rendering zz zz zz games high growth rate,graphics processors present in most,-2,-143,-141,normal.
16,1,0,0,0,cpu,,-143,-9,134,na.
16,2,0,0,0,gpu cpu,,-9,153,162,na.
17,16,0,0.5,0,graphics processors large computational power simple but efficient pipeline design multiple processing units programmable vector processors,graphics processors large computational power,153,11,-142,normal.
14,6,0,0.5,0.166666666666667,graphics processors low bandwidth to cpu,graphics processors low bandwidth to,11,-164,-175,normal.
14,3,0,0.333333333333333,0,bandwidth cpu gpu,,-164,-100,-100,na.
12,40,0.05,0.225,0.075,graphics processors punct zz design issues design database operations avoiding frame buffer readbacks no arbitrary writes design algorithms avoiding data rearrangements programmable pipeline has poor branching design algorithms without branching in programmable pipeline punct evaluate branches using fixed function tests,graphics processors punct zz design,-100,-100,-100,normal.
18,57,0.140350877192982,0.245614035087719,0.157894736842105,related work hardware acceleration for db operations vector processors for relational db operations zz punct meki and kambayashi 2000 punct simd instructions for relational db operations zz punct zhou and ross 2002 punct gpus for spatial selections and joins punct sun et al dot 2003 punct general purpose computing using gpus presented in rest of course dot,related work hardware acceleration for,-100,-168,-100,normal.
21,10,0.1,0.8,0.1,outline database operations on gpus implementation punct results analysis conclusions,outline database operations on gpus,-168,0,168,na.
21,10,0.1,0.8,0.1,outline database operations on gpus implementation punct results analysis conclusions,outline database operations on gpus,0,138,138,na.
19,49,0.346938775510204,0.122448979591837,0.0408163265306122,overview database operations require comparisons utilize depth test functionality of gpus for performing comparisons implements all possible comparisons punct comma punct punct comma punct punct comma punct comma punct punct comma punct punct comma always comma never utilize stencil test for data validation and storing results of comparison operations,overview database operations require comparisons,138,-22,-160,normal.
29,43,0.255813953488372,0.209302325581395,0.209302325581395,basic operations basic sql query select a from t where c a punct attributes or aggregations punct sum comma count comma max etc punct t punct relational table c punct boolean combination of predicates punct using operators and comma or comma not punct,basic operations basic sql query,-22,-100,-100,normal.
20,11,0.0909090909090909,0.818181818181818,0.0909090909090909,outline punct database operations predicate evaluation boolean combinations of predicates aggregations,outline punct database operations predicate,-100,-100,-100,na.
20,11,0.0909090909090909,0.818181818181818,0.0909090909090909,outline punct database operations predicate evaluation boolean combinations of predicates aggregations,outline punct database operations predicate,-100,-100,-100,na.
21,62,0.354838709677419,0.145161290322581,0.306451612903226,basic operations predicates zz zz zz ai op constant or zz ai op aj op is one of punct comma punct comma punct punct comma punct punct comma punct punct comma punct comma true comma false boolean combinations zz zz zz conjunctive normal form punct cnf punct expression evaluation aggregations zz zz zz count comma sum comma max comma median comma avg,basic operations predicates zz zz,-100,-13,-100,normal.
25,31,0.0645161290322581,0.161290322580645,0.225806451612903,predicate evaluation ai op constant punct d punct copy the attribute values ai into depth buffer define the comparison operation using depth test draw a screen filling quad at depth d,predicate evaluation ai op constant,-13,-7,6,normal.
13,17,0.117647058823529,0.176470588235294,0.529411764705882,screen if punct ai op d punct zz 	pass fragment else 	reject fragment ai op d d,screen if punct ai op,-7,2,9,normal.
19,49,0.0612244897959184,0.163265306122449,0.387755102040816,predicate evaluation ai op aj treat as punct ai zz zz zz aj punct op 0 semi punct linear queries defined as linear combination of attribute values compared against a constant linear combination is computed as a dot product of two vectors utilize the vector processing capabilities of gpus,predicate evaluation ai op aj,2,31,29,normal.
22,38,0,0.131578947368421,0.421052631578947,data validation performed using stencil test valid stencil values are set to a given value zz zz zz s zz zz zz data values that fail predicate evaluation are set to zz zz zz zero zz zz zz,data validation performed using stencil,31,-100,-100,normal.
20,11,0.0909090909090909,0.818181818181818,0.0909090909090909,outline punct database operations predicate evaluation boolean combinations of predicates aggregations,outline punct database operations predicate,-100,-100,-100,na.
27,72,0.222222222222222,0.138888888888889,0.361111111111111,boolean combinations expression provided as a cnf cnf is of form zz punct a1 and a2 and zz zz zz and ak punct where ai punct punct bi1 or bi2 or zz zz zz or bimi punct cnf does not have not operator if cnf has a not operator comma invert comparison operation to eliminate not eg dot not punct ai punct d punct punct punct punct ai punct punct d punct,boolean combinations expression provided as,-100,71,-100,normal.
10,50,0.28,0.22,0.4,boolean combination we will focus on punct a1 and a2 punct all cases are considered a1 punct punct true and a1 punct if ei punct punct a1 and a2 and zz zz zz and ai punct 1 and ai punct comma ei punct punct ei punct 1 and ai punct,boolean combination we will focus,71,-96,-167,normal.
9,7,0,0,0.428571428571429,a1 and a2 a1 b21 b22 b23,a1 and a2 a1 b21,-96,0,96,na.
12,4,0,0,0.75,a1 and a2 a1,,0,65,65,na.
18,12,0.166666666666667,0.166666666666667,0.416666666666667,a1 and a2 a1 stencil value punct 0 stencil value punct 1,a1 and a2 a1 stencil,65,-78,-143,na.
16,22,0.227272727272727,0.227272727272727,0.363636363636364,a1 and a2 a1 stencil punct 0 stencil punct 1 b21 stencil punct 2 b22 stencil punct 2 b23 stencil punct 2,a1 and a2 a1 stencil,-78,0,78,na.
16,22,0.227272727272727,0.227272727272727,0.363636363636364,a1 and a2 a1 stencil punct 0 stencil punct 1 b21 b22 b23 stencil punct 2 stencil punct 2 stencil punct 2,a1 and a2 a1 stencil,0,0,0,na.
18,25,0.16,0.16,0.4,a1 and a2 stencil punct 0 stencil punct 2 a1 and b21 stencil punct 2 zz a1 and b22 stencil punct 2 a1 and b23,a1 and a2 stencil punct,0,-31,-31,na.
15,25,0.44,0.16,0.16,range query compute ai within punct low comma high punct evaluated as punct ai punct punct low punct and punct ai punct punct high punct,range query compute ai within,-31,-100,-100,normal.
20,11,0.0909090909090909,0.818181818181818,0.0909090909090909,outline punct database operations predicate evaluation boolean combinations of predicates aggregations,outline punct database operations predicate,-100,-100,-100,na.
19,13,0.307692307692308,0.153846153846154,0.0769230769230769,aggregations count comma max comma min comma sum comma avg no data rearrangements,aggregations count comma max comma,-100,-32,-100,normal.
18,35,0.0571428571428571,0.2,0.114285714285714,count use occlusion queries to get pixel pass count syntax punct begin occlusion query perform database operation end occlusion query get count of number of attributes that passed database operation involves no additional overhead punct,count use occlusion queries to,-32,-7,25,normal.
10,26,0.153846153846154,0.153846153846154,0.153846153846154,max comma min comma median we compute kth punct largest number traditional algorithms require data rearrangements we perform no data rearrangements comma no frame buffer readbacks,max comma min comma median,-7,0,7,normal.
20,38,0.105263157894737,0.131578947368421,0.447368421052632,k punct th largest number say vk is the k punct th largest number how do we generate a number m equal to vk punct without knowing vk zz zz zz s bit punct representation and using comparisons,k punct th largest number,0,-31,-31,normal.
17,44,0.0909090909090909,0.136363636363636,0.295454545454545,our algorithm initialize m to 0 start with the msb and scan all bits till lsb at each bit comma put 1 in the corresponding bit punct position of m if m punct vk comma make that bit 0 proceed to the next bit,our algorithm initialize m to,-31,57,88,normal.
14,7,0.285714285714286,0.285714285714286,0.285714285714286,example vk punct 11101001 m punct 00000000,example vk punct 11101001 m,57,0,-57,na.
14,11,0.363636363636364,0.272727272727273,0.363636363636364,example vk punct 11101001 m punct 10000000 m punct punct vk,example vk punct 11101001 m,0,0,0,na.
14,11,0.363636363636364,0.272727272727273,0.363636363636364,example vk punct 11101001 m punct 11000000 m punct punct vk,example vk punct 11101001 m,0,0,0,na.
14,11,0.363636363636364,0.272727272727273,0.363636363636364,example vk punct 11101001 m punct 11100000 m punct punct vk,example vk punct 11101001 m,0,-97,-97,na.
10,17,0.235294117647059,0.235294117647059,0.352941176470588,example vk punct 11101001 m punct 11110000 m punct vk make the bit 0 m punct 11100000,example vk punct 11101001 m,-97,97,194,na.
14,11,0.363636363636364,0.272727272727273,0.363636363636364,example vk punct 11101001 m punct 11101000 m punct punct vk,example vk punct 11101001 m,97,0,-97,na.
8,17,0.235294117647059,0.235294117647059,0.352941176470588,example vk punct 11101001 m punct 11101100 m punct vk make this bit 0 m punct 11101000,example vk punct 11101001 m,0,0,0,na.
12,13,0.307692307692308,0.230769230769231,0.384615384615385,example vk punct 11101001 m punct 11101010 m punct vk m punct 11101000,example vk punct 11101001 m,0,0,0,na.
16,11,0.363636363636364,0.272727272727273,0.363636363636364,example vk punct 11101001 m punct 11101001 m punct punct vk,example vk punct 11101001 m,0,-29,-29,na.
23,66,0.363636363636364,0.121212121212121,0.318181818181818,k punct th largest number lemma punct let vk be the k punct th largest number dot let count be the number of values punct punct m if count punct punct k punct 1 punct punct m punct punct vk if count punct punct punct k punct 1 punct punct m punct vk apply the earlier algorithm ensuring that count punct punct k punct 1 punct,k punct th largest number,-29,36,65,normal.
18,31,0.0645161290322581,0.193548387096774,0.290322580645161,example integers ranging from 0 to 255 represent them in depth buffer idea zz zz zz use depth functions to perform comparisons use nv punct occlusion punct query to determine maximum,example integers ranging from 0,36,-48,-84,na.
16,158,0.367088607594937,0.151898734177215,0.284810126582278,example punct parallel max s punct punct 10 comma 24 comma 37 comma 99 comma 192 comma 200 comma 200 comma 232 punct step 1 punct draw quad at 128 s punct punct 10 comma 24 comma 37 comma 99 comma 192 comma 200 comma 200 comma 232 punct step 2 punct draw quad at 192 s punct punct 10 comma 24 comma 37 comma 192 comma 200 comma 200 comma 232 punct step 3 punct draw quad at 224 s punct punct 10 comma 24 comma 37 comma 192 comma 200 comma 200 comma 232 punct step 4 punct draw quad at 240 zz zz zz no values pass step 5 punct draw quad at 232 s punct punct 10 comma 24 comma 37 comma 192 comma 200 comma 200 comma 232 punct step 6 comma 7 comma 8 punct draw quads at 236 comma 234 comma 233 zz zz zz no values pass max is 232,example punct parallel max s,-48,85,133,na.
20,15,0,0.266666666666667,0.133333333333333,parallel max use occlusion queries to determine the next stepping value no frame buffer readbacks,parallel max use occlusion queries,85,-102,-187,na.
8,57,0.157894736842105,0.210526315789474,0.245614035087719,accumulator comma mean accumulator punct use sorting algorithm and add all the values mean zz zz zz use accumulator and divide by n interval range arithmetic alternative algorithm use fragment programs zz zz zz requires very few renderings use mipmaps punct harris et al dot 02 punct comma fragment programs punct coombe et al dot 03 punct,accumulator comma mean accumulator punct,-102,96,198,normal.
16,55,0.327272727272727,0.0909090909090909,0.418181818181818,accumulator data representation is of form ak 2k punct ak punct 1 2k punct 1 punct zz zz zz punct a0 sum punct sum punct ak punct 2k punct sum punct ak punct 1 punct 2k punct 1 punct zz zz zz punct sum punct a0 punct current gpus support no bit punct masking operations,accumulator data representation is of,96,-70,-166,normal.
22,54,0.259259259259259,0.0925925925925926,0.37037037037037,testbit read the data value from texture comma say ai f punct frac punct ai punct 2k punct if f punct punct 0 dot 5 comma then k punct th bit of ai is 1 set f to alpha value dot alpha test passes a fragment if alpha value punct punct 0 dot 5,testbit read the data value,-70,-68,2,normal.
21,10,0.1,0.8,0.1,outline database operations on gpus implementation punct results analysis conclusions,outline database operations on gpus,-68,40,108,na.
20,19,0.0526315789473684,0.526315789473684,0.105263157894737,implementation dell precision workstation with dual 2 dot 8ghz xeon processor nvidia geforce fx 5900 ultra gpu 2gb ram,implementation dell precision workstation with,40,-6,-46,normal.
23,26,0.153846153846154,0.153846153846154,0.346153846153846,implementation cpu zz zz zz intel compiler 7 dot 1 with hyperthreading comma multi punct threading comma simd optimizations gpu zz zz zz nvidia cg compiler,implementation cpu zz zz zz,-6,2,8,normal.
25,17,0.0588235294117647,0.117647058823529,0.117647058823529,benchmarks tcp punct ip database with 1 million records and four attributes census database with 360k records,benchmarks tcp punct ip database,2,-13,-15,normal.
16,2,0,1,0,copy time,,-13,-3,10,normal.
50,2,0,1,0,predicate evaluation,,-3,-2,1,normal.
40,2,0,1,0,range query,,-2,-2,0,normal.
50,4,0.25,0.75,0,multi punct attribute query,,-2,-5,-3,normal.
50,4,0.25,0.5,0,semi punct linear query,,-5,15,20,normal.
22,6,0,0.166666666666667,0,count same timings for gpu implementation,count same timings for gpu,15,47,32,normal.
16,3,0.333333333333333,0.666666666666667,0,kth punct largest,,47,0,-47,normal.
16,3,0.333333333333333,0.666666666666667,0,kth punct largest,,0,0,0,normal.
14,4,0.25,0.5,0,kth punct largest conditional,,0,-66,-66,normal.
25,1,0,1,0,accumulator,,-66,-7,59,normal.
21,10,0.1,0.8,0.1,outline database operations on gpus implementation punct results analysis conclusions,outline database operations on gpus,-7,-1,6,na.
7,18,0.0555555555555556,0.555555555555556,0.111111111111111,analysis punct issues precision copy time integer arithmetic depth compare masking memory management no branching no random writes,analysis punct issues precision copy,-1,-17,-16,normal.
14,38,0.210526315789474,0.368421052631579,0.157894736842105,analysis punct performance relative performance gain high performance zz zz zz predicate evaluation comma multi punct attribute queries comma semi punct linear queries comma count medium performance zz zz zz kth punct largest number low performance punct accumulator,analysis punct performance relative performance,-17,10,27,normal.
12,14,0.0714285714285714,0.428571428571429,0.0714285714285714,high performance parallel pixel processing engines pipelining early z punct cull eliminate branch mispredictions,high performance parallel pixel processing,10,-3,-13,normal.
16,44,0.181818181818182,0.159090909090909,0.204545454545455,medium performance parallelism fx 5900 has clock speed 450mhz comma 8 pixel processing engines rendering single 1000x1000 quad takes 0 dot 278ms rendering 19 such quads take 5 dot 28ms dot observed time is 6 dot 6ms 80 punct efficiency in parallelism punct punct,medium performance parallelism fx 5900,-3,-2,1,normal.
16,20,0.1,0.3,0.1,low performance no gain over simd based cpu implementation two main reasons punct lack of integer punct arithmetic clock rate,low performance no gain over,-2,187,189,normal.
10,33,0.0303030303030303,0.242424242424242,0.212121212121212,advantages algorithms progress at gpu growth rate offload cpu work fast due to massive parallelism on gpus algorithms could be generalized to any geometric shape eg dot max value within a triangular region,advantages algorithms progress at gpu,187,-194,-381,normal.
6,4,0.25,0.5,0,advantages commodity hardware punct,,-194,20,214,normal.
21,10,0.1,0.8,0.1,outline database operations on gpus implementation punct results analysis conclusions,outline database operations on gpus,20,174,154,na.
22,32,0.0625,0.21875,0.1875,conclusions novel algorithms to perform database operations on gpus evaluation of predicates comma boolean combinations of predicates comma aggregations algorithms take into account gpu limitations no data rearrangements no frame buffer readbacks,conclusions novel algorithms to perform,174,-197,-371,normal.
15,21,0.0476190476190476,0.19047619047619,0.238095238095238,conclusions preliminary comparisons with optimized cpu implementations is promising discussed possible improvements on gpus gpu as a useful co punct processor,conclusions preliminary comparisons with optimized,-197,-1,196,normal.
29,28,0.107142857142857,0.178571428571429,0.142857142857143,future work improve performance of many of our algorithms more database operations such as join comma sorting comma classification and clustering dot queries on spatial and temporal databases,future work improve performance of,-1,-2,-1,normal.
9,22,0.0454545454545455,0.727272727272727,0.0454545454545455,acknowledgements army research office national science foundation office of naval research intel corporation nvidia corporation jasleen sahni comma unc unc gamma group,acknowledgements army research office national,-2,-100,-100,normal.
32,34,0.205882352941176,0.617647058823529,0.0294117647058824,fault punct tolerance in the borealis distributed stream processing system magdalena balazinska comma hari balakrishnan comma samuel madden comma and michael stonebraker mit computer science punct artificial intelligence lab dot presenter punct youngki lee,fault punct tolerance in the,-100,-100,-100,normal.
9,18,0.111111111111111,0.611111111111111,0,contents one punct line comments motivation scenario technical challenges fault punct tolerance approach experimental results critics new ideas,contents one punct line comments,-100,-100,-100,na.
27,32,0.15625,0.0625,0.125,one line comment the paper present a replication punct based approach to fault punct tolerant distributed stream processing in the face of node failures comma network failures comma and network partitions dot,one line comment the paper,-100,-145,-100,normal.
13,47,0.127659574468085,0.0851063829787234,0.297872340425532,motivation scenario spe spe spe x punct 3 seconds spe x punct 60 seconds x punct 1 second downstream neighbors want 1 dot new tuples to be processed within time threshold x 2 dot to get eventual correct result x punct 3 seconds upstream neighbor downstream neighbor,motivation scenario spe spe spe,-145,135,280,normal.
7,15,0.0666666666666667,0.266666666666667,0,technical challenges provide user punct defined availability keep consistency among replicas provide eventual correct result,technical challenges provide user punct,135,-32,-167,normal.
17,40,0.075,0.25,0.1,fault punct tolerance approach if an input stream fails comma find another replica no replica available comma produce tentative tuples correct tentative results after failures stable upstream failure stabilizing failure heals another upstream failure in progress reconcile state corrected output,fault punct tolerance approach if,-32,-98,-66,normal.
11,32,0.0625,0.21875,0.34375,fault punct tolerance approach punct stable only need to keep consistency among replicas deterministic operators sunion s1 s2 node 1 sunion s tcp connection node 1 zz zz zz sunion s s3,fault punct tolerance approach punct,-98,49,147,normal.
26,65,0.107692307692308,0.123076923076923,0.292307692307692,fault punct tolerance approach punct upstream failire if an upstream neighbor is no longer in the stable state or is unreachable switch to another stable replica if no stable replica exists comma it continues with data from a replica in the up punct failure state delay new tuples as much as possible punct x punct p punct and process or just process without any delay,fault punct tolerance approach punct,49,40,-9,normal.
16,42,0.214285714285714,0.261904761904762,0.119047619047619,fault punct tolerance approach punct stabilization state reconciliation checkpoint punct redo undo punct redo stabilizing output streams processing new tuples during reconciliation if punct reconciliation time punct x punct p punct then suspend zz else delay comma or process failed node recovery,fault punct tolerance approach punct,40,-159,-199,normal.
25,7,0.428571428571429,0.142857142857143,0.285714285714286,experimental results punct 1 punct 2 punct,experimental results punct 1 punct,-159,1,160,normal.
20,13,0.461538461538462,0.153846153846154,0.153846153846154,experimental results punct 1 punct 2 punct reconciliation punct performance punct overhead punct,experimental results punct 1 punct,1,172,171,normal.
14,76,0.0394736842105263,0.197368421052632,0.0789473684210526,critiques strong points their method reduce the degree of inconsistency while guaranteeing high availability using the characteristics of data streams actually implement their scheme in borealis system weak points only support deterministic operator solving consistency problems only serializing input streams time window punct punct not exact consistency too much overhead processing overhead by replications memory overhead buffering tentative input streams buffering output streams which might used by other downstream neighbors is result modification actually necessary punct,critiques strong points their method,172,9,-163,normal.
14,93,0.0645161290322581,0.0967741935483871,0.129032258064516,new ideas put replicas in regionally distributed area and construct content distribution stream network dot downstream users are distributed scalability and fast response time also provides fault punct tolerance and high availability overlay multicasting of source streams comma service discovery might be necessary what if different users pose all the different queries fine punct granularity stabilization is necessary dot user must be able to specify the eventual correct result is necessary or not communication between replicas could reduce the computations and might support non punct deterministic operators k out of n replicas process,new ideas put replicas in,9,-100,-100,normal.
0,2,0.5,0.5,0,questions punct,,-100,-100,-100,na.
20,15,0.0666666666666667,0.2,0.6,operator punct level scenario s1 s2 node 1 u s node 2 m s3 s4,operator punct level scenario s1,-100,-100,-100,na.
37,31,0.161290322580645,0.67741935483871,0.161290322580645,multiple aggregations over zz data streams rui zhang		national univ dot of singapore nick koudas		univ dot of toronto beng chin ooi		national univ dot of singapore divesh srivastava	at punct t labs punct research,multiple aggregations over zz data,-100,-23,-100,normal.
13,20,0,0.55,0,outline introduction query example and gigascope single aggregation multiple aggregations problem definition algorithmic strategies analysis experiments conclusion and future work,outline introduction query example and,-23,-5,18,na.
22,84,0.285714285714286,0.30952380952381,0.285714285714286,aggregate query over streams select tb comma srcip comma count punct punct punct 	from ippackets 	group by time punct 60 as tb comma srcip more examples punct gigascope punct a stream database for network applications punct sigmod zz zz zz 03 punct dot holistic udafs at streaming speed punct sigmod zz zz zz 04 punct dot sampling algorithms in a stream operator punct sigmod zz zz zz 05 punct punct srcip comma srcport comma dstip comma dstport comma time comma zz zz zz punct,aggregate query over streams select,-5,3,8,normal.
23,49,0.224489795918367,0.183673469387755,0.0816326530612245,gigascope all inputs and outputs are streams dot two level structure punct lfta and hfta dot lfta punct hfta punct low punct high punct level filter transform and aggregation dot simple operations in lfta punct reduce the amount of data sent to hfta dot fit into l3 cache dot,gigascope all inputs and outputs,3,2,-1,normal.
13,20,0,0.55,0,outline introduction query example and gigascope single aggregation multiple aggregations problem definition algorithmic strategies analysis experiments conclusion and future work,outline introduction query example and,2,-5,-7,na.
20,65,0.2,0.138461538461538,0.338461538461538,select tb comma srcip comma count punct punct punct 	from ippackets 	group by time punct 60 as tb comma srcip example punct 2 comma 24 comma 2 comma 17 comma 12 zz zz zz hash by modulo 10 costs c1 for probing the hash table in lfta c2 for updating hfta from lfta bottleneck is the total of c1 and c2 cost dot single aggregation,select tb comma srcip comma,-5,0,5,normal.
20,65,0.2,0.138461538461538,0.338461538461538,select tb comma srcip comma count punct punct punct 	from ippackets 	group by time punct 60 as tb comma srcip example punct 2 comma 24 comma 2 comma 17 comma 12 zz zz zz hash by modulo 10 costs c1 for probing the hash table in lfta c2 for updating hfta from lfta bottleneck is the total of c1 and c2 cost dot single aggregation,select tb comma srcip comma,0,0,0,normal.
20,65,0.2,0.138461538461538,0.338461538461538,select tb comma srcip comma count punct punct punct 	from ippackets 	group by time punct 60 as tb comma srcip example punct 2 comma 24 comma 2 comma 17 comma 12 zz zz zz hash by modulo 10 costs c1 for probing the hash table in lfta c2 for updating hfta from lfta bottleneck is the total of c1 and c2 cost dot single aggregation,select tb comma srcip comma,0,0,0,normal.
20,65,0.2,0.138461538461538,0.338461538461538,select tb comma srcip comma count punct punct punct 	from ippackets 	group by time punct 60 as tb comma srcip example punct 2 comma 24 comma 2 comma 17 comma 12 zz zz zz hash by modulo 10 costs c1 for probing the hash table in lfta c2 for updating hfta from lfta bottleneck is the total of c1 and c2 cost dot single aggregation,select tb comma srcip comma,0,0,0,normal.
20,65,0.2,0.138461538461538,0.338461538461538,select tb comma srcip comma count punct punct punct 	from ippackets 	group by time punct 60 as tb comma srcip example punct 2 comma 24 comma 2 comma 17 comma 12 zz zz zz hash by modulo 10 costs c1 for probing the hash table in lfta c2 for updating hfta from lfta bottleneck is the total of c1 and c2 cost dot single aggregation,select tb comma srcip comma,0,0,0,normal.
20,70,0.228571428571429,0.128571428571429,0.342857142857143,select tb comma srcip comma count punct punct punct 	from ippackets 	group by time punct 60 as tb comma srcip example punct 2 comma 24 comma 2 comma 17 comma 12 zz zz zz hash by modulo 10 costs c1 for probing the hash table in lfta c2 for updating hfta from lfta bottleneck is the total of c1 and c2 cost dot punct 2 comma 2 punct single aggregation,select tb comma srcip comma,0,-10,-10,normal.
18,85,0.211764705882353,0.141176470588235,0.305882352941176,single aggregation select tb comma srcip comma count punct punct punct 	from ippackets 	group by time punct 60 as tb comma srcip example punct 2 comma 24 comma 2 comma 17 comma 12 zz zz zz hash by modulo 10 costs probe cost punct c1 for probing the hash table in lfta dot eviction cost punct c2 for updating hfta from lfta dot bottleneck is the total of c1 and c2 costs dot evicting everything at the end of each time bucket dot c1 c2,single aggregation select tb comma,-10,15,25,normal.
13,20,0,0.55,0,outline introduction query example and gigascope single aggregation multiple aggregations problem definition algorithmic strategies analysis experiments conclusion and future work,outline introduction query example and,15,-5,-20,na.
28,105,0.285714285714286,0.0952380952380952,0.419047619047619,multiple aggregations relation r containing attributes a comma b comma c 3 queries select tb comma a comma count punct punct punct 		from r 		group by time punct 60 as tb comma a select tb comma b comma count punct punct punct 		from r 		group by time punct 60 as tb comma b select tb comma c comma count punct punct punct 		from r 		group by time punct 60 as tb comma c cost punct e1 punct n 3 c1 punct 3n x1 c2 	 n punct number of records coming in 	x1 punct collision rate of a comma b comma c lftas hftas c2,multiple aggregations relation r containing,-5,-44,-39,normal.
18,58,0.155172413793103,0.103448275862069,0.448275862068966,alternatively zz zz zz maintain a phantom total size being the same dot cost punct e2 punct nc1 punct 3x2nc1 punct 3 x1 zz zz zz x2nc2 	x1 zz zz zz punct collision rate of a comma b comma c 	x2 punct collision rate of abc lftas hftas c2 c1 a b c abc c1 c1 c1 phantom,alternatively zz zz zz maintain,-44,-10,34,normal.
16,61,0.344262295081967,0.0983606557377049,0.39344262295082,cost comparison without phantom punct e1 punct 3nc1 punct 3x1nc2 with phantom e2 punct nc1 punct 3x2nc1 punct 3x1 zz zz zz x2nc2 difference e1 punct e2 punct punct punct 2 punct 3x2 punct c1 punct 3 punct x1 punct x1 zz zz zz x2 punct c2 punct n if x2 is small comma then e1 punct e2 punct 0 dot,cost comparison without phantom punct,-10,-259,-249,normal.
38,25,0.32,0.16,0.4,more phantoms relation r contains attributes a comma b comma c comma d dot queries punct group by ab comma bc comma bd comma cd,more phantoms relation r contains,-259,318,577,normal.
13,20,0,0.55,0,outline introduction query example and gigascope single aggregation multiple aggregations problem definition algorithmic strategies analysis experiments conclusion and future work,outline introduction query example and,318,-66,-384,na.
21,77,0.194805194805195,0.155844155844156,0.233766233766234,problem definition constraint punct given fixed size of memory m dot guarantee low loss rate when evicting everything at the end of time window size should be small to fit in l3 cache hardware punct the network card punct memory size limit dot problems punct 1 punct phantom choosing dot configuation punct a set of queries and phantoms dot 2 punct space allocation dot x zz zz zz g punct b objective punct minimize the cost dot,problem definition constraint punct given,-66,-138,-72,normal.
13,28,0.142857142857143,0.142857142857143,0.607142857142857,the view materialization problem psc 6m ps 0 dot 8m pc 6m sc 6m p 0 dot 2m s 0 dot 01m c 0 dot 1m none 1,the view materialization problem psc,-138,-134,4,normal.
1,1,0,1,0,differences,,-134,338,472,normal.
13,20,0,0.55,0,outline introduction query example and gigascope single aggregation multiple aggregations problem definition algorithmic strategies analysis experiments conclusion and future work,outline introduction query example and,338,-308,-646,na.
19,74,0.189189189189189,0.0810810810810811,0.256756756756757,algorithmic strategies brute punct force punct try all possibilities of phantom combinations and all possibilities of space allocation too expensive dot greedy by increasing space used punct hint punct x zz zz zz g punct b comma see analysis later punct b punct zz zz g comma zz zz is large enough to guarantee a low collision rate dot greedy by increasing collision rate punct our proposal punct modeling the collision rate accurately dot,algorithmic strategies brute punct force,-308,0,308,normal.
19,74,0.189189189189189,0.0810810810810811,0.256756756756757,algorithmic strategies brute punct force punct try all possibilities of phantom combinations and all possibilities of space allocation too expensive dot greedy by increasing space used punct hint punct x zz zz zz g punct b comma see analysis later punct b punct zz zz g comma zz zz is large enough to guarantee a low collision rate dot greedy by increasing collision rate punct our proposal punct modeling the collision rate accurately dot,algorithmic strategies brute punct force,0,0,0,normal.
19,74,0.189189189189189,0.0810810810810811,0.256756756756757,algorithmic strategies brute punct force punct try all possibilities of phantom combinations and all possibilities of space allocation too expensive dot greedy by increasing space used punct hint punct x zz zz zz g punct b comma see analysis later punct b punct zz zz g comma zz zz is large enough to guarantee a low collision rate dot greedy by increasing collision rate punct our proposal punct modeling the collision rate accurately dot,algorithmic strategies brute punct force,0,0,0,normal.
19,74,0.189189189189189,0.0810810810810811,0.256756756756757,algorithmic strategies brute punct force punct try all possibilities of phantom combinations and all possibilities of space allocation too expensive dot greedy by increasing space used punct hint punct x zz zz zz g punct b comma see analysis later punct b punct zz zz g comma zz zz is large enough to guarantee a low collision rate dot greedy by increasing collision rate punct our proposal punct modeling the collision rate accurately dot,algorithmic strategies brute punct force,0,0,0,normal.
19,74,0.189189189189189,0.0810810810810811,0.256756756756757,algorithmic strategies brute punct force punct try all possibilities of phantom combinations and all possibilities of space allocation too expensive dot greedy by increasing space used punct hint punct x zz zz zz g punct b comma see analysis later punct b punct zz zz g comma zz zz is large enough to guarantee a low collision rate dot greedy by increasing collision rate punct our proposal punct modeling the collision rate accurately dot,algorithmic strategies brute punct force,0,0,0,normal.
19,74,0.189189189189189,0.0810810810810811,0.256756756756757,algorithmic strategies brute punct force punct try all possibilities of phantom combinations and all possibilities of space allocation too expensive dot greedy by increasing space used punct hint punct x zz zz zz g punct b comma see analysis later punct b punct zz zz g comma zz zz is large enough to guarantee a low collision rate dot greedy by increasing collision rate punct our proposal punct modeling the collision rate accurately dot,algorithmic strategies brute punct force,0,0,0,normal.
19,74,0.189189189189189,0.0810810810810811,0.256756756756757,algorithmic strategies brute punct force punct try all possibilities of phantom combinations and all possibilities of space allocation too expensive dot greedy by increasing space used punct hint punct x zz zz zz g punct b comma see analysis later punct b punct zz zz g comma zz zz is large enough to guarantee a low collision rate dot greedy by increasing collision rate punct our proposal punct modeling the collision rate accurately dot,algorithmic strategies brute punct force,0,0,0,normal.
19,74,0.189189189189189,0.0810810810810811,0.256756756756757,algorithmic strategies brute punct force punct try all possibilities of phantom combinations and all possibilities of space allocation too expensive dot greedy by increasing space used punct hint punct x zz zz zz g punct b comma see analysis later punct b punct zz zz g comma zz zz is large enough to guarantee a low collision rate dot greedy by increasing collision rate punct our proposal punct modeling the collision rate accurately dot,algorithmic strategies brute punct force,0,0,0,normal.
18,75,0.186666666666667,0.0933333333333333,0.253333333333333,algorithmic strategies brute punct force punct try all possibilities of phantom combinations and all possibilities of space allocation too expensive dot greedy by increasing space used punct hint punct x zz zz zz g punct b comma see analysis later punct b punct zz zz g comma zz zz is large enough to guarantee a low collision rate dot greedy by increasing collision rate punct our proposal punct modeling the collision rate accurately dot jump,algorithmic strategies brute punct force,0,308,308,normal.
13,20,0,0.55,0,outline introduction query example and gigascope single aggregation multiple aggregations problem definition algorithmic strategies analysis experiments conclusion and future work,outline introduction query example and,308,-170,-478,na.
31,85,0.164705882352941,0.0705882352941176,0.341176470588235,collision rate model random data distribution nrg punct expected number of records in a group k punct number of groups hashing to a bucket nrg k punct number of records hashing to a bucket random hash punct probability of collision 1 zz zz zz 1 punct k nrg k punct 1 punct 1 punct k punct punct number of collisions in the bucket g punct total number of groups b punct total number of buckets comma where clustered data distribution la punct average flow length,collision rate model random data,-170,121,291,normal.
22,34,0.0882352941176471,0.205882352941176,0.147058823529412,the low collision rate part 	phantom is beneficial only when the collision rate is low comma therefore the low collision rate part of the collision rate curve is of interest dot 	linear regression punct,the low collision rate part,121,-231,-352,normal.
16,58,0.224137931034483,0.155172413793103,0.344827586206897,space allocation punct the two punct level case one phantom r0 feeding all queries r1 comma r2 comma zz zz zz comma rf dot their hash tables zz zz zz collision rates are x0 comma x1 comma zz zz zz comma xf dot result punct quadratic equation dot let partial derivative of e over bi equal 0 dot,space allocation punct the two,-231,1,232,normal.
26,106,0.19811320754717,0.160377358490566,0.235849056603774,space allocation punct general cases resulted in equations of order higher than 4 comma which are un solvable algebraically punct abel zz zz zz s theorem punct dot partial results punct b12 is proportional to heuristics punct treat the configuration as 	two punct level cases recursively dot supernode dot implementation punct sl punct supernode with linear combination of the number of groups dot sr punct supernode with square root combination of the number of groups dot pl punct proportional linearly to the number of groups dot pr punct proportional to the square root of the number of groups dot es punct exhaustive space allocation dot supernode,space allocation punct general cases,1,279,278,normal.
13,20,0,0.55,0,outline introduction query example and gigascope single aggregation multiple aggregations problem definition algorithmic strategies analysis experiments conclusion and future work,outline introduction query example and,279,-311,-590,na.
20,119,0.235294117647059,0.0756302521008403,0.252100840336134,experiments punct space allocation punct abcd punct abc punct a bc punct b c punct punct d punct punct comparison of space allocation schemes queries in red punct phantoms in blue dot x punct axis punct memory constraint punct y punct axis punct relative error compared to the optimal space allocation dot heuristics sl punct supernode with linear combination of the number of groups dot sr punct supernode with square root combination of the number of groups dot pl punct proportional linearly to the number of groups dot pr punct proportional to the square root of the number of groups dot result punct sl is the best punct sl and sr are generally better than pl and pr dot,experiments punct space allocation punct,-311,30,341,normal.
18,69,0.173913043478261,0.202898550724638,0.188405797101449,experiments punct phantom choosing heuristics gcsl punct greedy by increasing collision rate punct allocating space using supernode with linear combination of the number of groups dot gcpl punct greedy by increasing collision rate punct allocating space using proportional linearly to the number of groups dot gs punct greedy by increasing space dot recall results punct gcsl is better than gs punct gcpl is the lower bound of gs dot,experiments punct phantom choosing heuristics,30,-81,-111,normal.
22,70,0.157142857142857,0.0714285714285714,0.214285714285714,experiments punct real data experiments on real data actually let the data records stream by the hash tables and calculate the cost dot x punct axis punct memory constraint punct y punct axis punct relative cost compared to the optimal cost dot results gcsl is very close to optimal and always better than gs dot by maintaining phantoms comma we reduce the cost up to a factor of 35 dot,experiments punct real data experiments,-81,362,443,normal.
13,20,0,0.55,0,outline introduction query example and gigascope single aggregation multiple aggregations problem definition algorithmic strategies analysis experiments conclusion and future work,outline introduction query example and,362,-375,-737,na.
40,92,0.0978260869565217,0.0652173913043478,0.206521739130435,conclusion and future work we introduced the notion of phantoms punct fine granularity aggregation queries punct that has the benefit of supporting shared computation dot we formulated the ma problem comma analyzed its components and proposed greedy heuristics to solve it dot through experiments on both real and synthetic data sets comma we demonstrate the effectiveness of our techniques dot the cost achieved by our solution is up to 35 times less than that of the existing solution dot we are trying to deploy this framework in the real dsms system dot,conclusion and future work we,-375,-1,374,normal.
2,2,0.5,0.5,0,questions punct,,-1,-100,-100,na.
22,32,0.1875,0.6875,0.09375,online event punct driven subsequence matching over financial data streams huanmei wu comma 	betty salzberg comma donghui zhang northeastern university comma college of computer punct information science presented by punct evangelos kanoulas,online event punct driven subsequence,-100,-223,-100,normal.
24,33,0.0606060606060606,0.242424242424242,0.212121212121212,motivation punct 1 punct an incoming stream of stock market data analyze it and do trend prediction pattern recognition dynamic clustering of multiple data streams rule discovery subsequence matching is the main component,motivation punct 1 punct an,-223,210,433,normal.
19,46,0.130434782608696,0.130434782608696,0.173913043478261,motivation punct 2 punct subsequence similarity over financial data streams has its unique properties zigzag shape of piecewise linear representation punct plr punct relative position of end points is important price change punct amplitude punct is more important than time interval price time s1 s2 s3,motivation punct 2 punct subsequence,210,-17,-227,normal.
21,11,0,1,0,outline	 motivation data stream processing subsequence matching trend prediction performance conclusion,outline	 motivation data stream processing,-17,-3,14,na.
29,41,0.0487804878048781,0.268292682926829,0.146341463414634,data stream processing punct 1 punct zz 	aggregation and smoothing incoming data arrives at any time piecewise linear representation requires a unique value for each time interval aggregation of the raw data smoothing of the aggregated values using the moving average,data stream processing punct 1,-3,-72,-69,normal.
23,47,0.0638297872340425,0.127659574468085,0.212765957446809,data stream processing punct 2 punct zz 	segmentation plr may not be in a zig punct zag shape the end points of the plr should be points at which the trend changes dramatically all other points are considered as noise and should be eliminated aggregated data stream,data stream processing punct 2,-72,59,131,normal.
26,76,0.184210526315789,0.105263157894737,0.236842105263158,data stream processing punct 3 punct zz 	 punct b data stream punct the base for linear segmentation why use punct b punct bollinger band percent punct punct punct b is a widely used financial indicator punct b has a smoothed moving trend similar to the aggregated data stream punct b is normalized value comma most values are between punct 1 and 2 zz zz zz uniform segmentation criteria aggregated data stream punct b data stream,data stream processing punct 3,59,-16,-75,normal.
21,112,0.214285714285714,0.169642857142857,0.446428571428571,data stream processing punct 4 punct zz 	segmentation over punct b t price punct x punct sliding window 1 2 3 5 6 7 8 9 10 11 12 4 13 zz zz zz in the current sliding window comma where pj punct xj comma tj punct is the current point comma pi punct xi comma ti punct is an upper end point if comma xi punct max punct x values of the current sliding window punct xi punct xj punct zz zz zz punct where zz zz zz is the given error threshold punct pi punct xi comma ti punct is the last one satisfying the above two conditions pi pj,data stream processing punct 4,-16,-43,-27,normal.
13,38,0.131578947368421,0.263157894736842,0.315789473684211,data stream processing punct 5 punct zz 	two step pruning filter step on punct b streams refine step on the raw sequence stream to eliminate false positives t4 t0 t1 t2 t3 agg dot stream punct b stream,data stream processing punct 5,-43,75,118,normal.
21,11,0,1,0,outline	 motivation data stream processing subsequence matching trend prediction performance conclusion,outline	 motivation data stream processing,75,-190,-265,na.
22,73,0.0410958904109589,0.0958904109589041,0.342465753424658,subsequence similarity punct 1 punct zz 	event punct driven subsequence matching identifying a new potential end point triggers a subsequent matching search the search algorithm finds subsequences in the historical data similar to a query subsequence the query subsequence consists of the most current n end points price t t5 t6 t7 t8 t9 t10 t11 t12 t13 t14 zz zz zz zz zz zz t37 t38 t39 t40 1 2 3 4,subsequence similarity punct 1 punct,-190,63,253,normal.
26,193,0.466321243523316,0.0518134715025907,0.373056994818653,subsequence similarity punct 2 punct zz 	new similarity measure 		s punct punct punct x1 comma t1 punct comma punct x2 comma t2 punct comma zz zz zz comma punct xn comma tn punct punct 		s punct punct punct punct x1 punct comma t1 punct punct comma punct x2 punct comma t2 punct punct comma zz zz zz comma punct xn punct comma tn punct punct punct s and s punct are similar if they satisfy the following two conditions punct the relative position of s and s punct end points is the same d punct s comma s punct punct punct zz zz zz comma where 	d punct s comma s punct punct punct punct zz zz zz punct zz zz zz punct punct punct xi punct 1 punct xi punct punct punct punct punct xi punct 1 punct punct xi punct punct punct punct punct zz zz zz punct zz zz zz punct punct ti punct 1 punct ti punct punct punct ti punct 1 punct punct ti punct punct punct punct 	where zz zz zz comma zz zz zz comma zz zz zz zz zz zz 0 are user defined parameters,subsequence similarity punct 2 punct,63,33,-30,normal.
20,196,0.51530612244898,0.0816326530612245,0.346938775510204,subsequence similarity punct 3 punct zz 	subsequence permutation s punct punct punct x1 comma t1 punct comma punct x2 comma t2 punct comma zz zz zz comma punct xn comma tn punct punct s zz zz zz punct punct punct punct x1 comma t1 punct comma punct x3 comma t3 punct comma zz zz zz comma punct xn punct 1 comma tn punct 1 punct punct comma punct punct x2 comma t2 punct comma punct x4 comma t4 punct comma zz zz zz comma punct xn comma tn punct punct punct s zz zz zz punct punct punct punct xi1 comma ti1 punct comma punct xi3 comma ti3 punct comma zz zz zz comma punct xi punct n punct 1 punct comma ti punct n punct 1 punct punct punct comma punct punct xi2 comma ti2 punct comma punct xi4 comma ti4 punct comma zz zz zz comma punct xin comma tin punct punct punct separate upper and lower points sort separately based on x values punct i1 comma i3 comma zz zz zz comma i punct n punct 1 punct comma i2 comma i4 comma zz zz zz comma in punct get the subsequence permutation,subsequence similarity punct 3 punct,33,94,61,normal.
21,11,0,1,0,outline	 motivation data stream processing subsequence matching trend prediction performance conclusion,outline	 motivation data stream processing,94,-194,-288,na.
22,32,0.125,0.125,0.28125,trend prediction zz 	subsequence matching application trend punct k at a point p measures the change of the price to the next k points three trends punct up comma down comma notrend,trend prediction zz 	subsequence matching,-194,194,388,normal.
21,11,0,1,0,outline	 motivation data stream processing subsequence matching trend prediction performance conclusion,outline	 motivation data stream processing,194,-221,-415,na.
9,30,0.166666666666667,0.433333333333333,0.366666666666667,performance punct 1 punct zz 	similarity measure 70 65 60 55 50 45 40 35 30 perm punct amp amp only perm only perm punct euc euc only correctness punct,performance punct 1 punct zz,-221,-18,203,normal.
9,71,0.23943661971831,0.0985915492957746,0.352112676056338,performance punct 2 punct zz 	event zz zz zz driven vs dot fixed time periods correctness punct 70 65 60 55 50 45 40 35 30 event punct driven ft1 ft5 ft10 ft15 ft25 ft30 ft20 relative cpu cost 100 punct 90 punct 80 punct 70 punct 60 punct 50 punct 40 punct 30 punct 20 punct 10 punct 0 punct event punct driven ft1 ft5 ft10 ft15 ft25 ft30 ft20,performance punct 2 punct zz,-18,239,257,normal.
21,11,0,1,0,outline	 motivation data stream processing subsequence similarity trend prediction performance conclusion,outline	 motivation data stream processing,239,-242,-481,na.
23,32,0.0625,0.15625,0.125,conclusion proposed an online segmentation and pruning algorithm defined an alternative similarity subsequence measure introduced an event punct driven online similarity matching algorithm achieved 70 punct correct predictions using real world data,conclusion proposed an online segmentation,-242,-100,-100,normal.
54,14,0,0.428571428571429,0.428571428571429,reference reconciliation in complex information spaces erin zz zz g zz zz kdeniz 2004721375,reference reconciliation in complex information,-100,-100,-100,normal.
16,26,0.0384615384615385,0.846153846153846,0,reference reconciliation introduction overview reconciliation algorithm dependency graph exploiting the dependency graph enriching the references enforcing constraints computing similarity scores experimantal results related work punct conclusions,reference reconciliation introduction overview reconciliation,-100,64,-100,na.
32,46,0.130434782608696,0.108695652173913,0.173913043478261,introduction reference reconciliation is the problem of different references in a dataset corresponding to the same real punct world entity because of mis punct spellings comma use of abbreviations comma different naming conventions comma naming variations over time dot mainly a matter for data integration concept,introduction reference reconciliation is the,64,-2,-66,normal.
25,52,0.0961538461538462,0.153846153846154,0.0961538461538462,introduction most of the previous work considers comma techniques for reconciling references to a single class dot the data contains many attributes dot in practice comma complex information spaces where instances of multiple classes rich relationships between the instances classes may have only few attributes references typically have unknown att dot values,introduction most of the previous,-2,-1,1,normal.
23,65,0.169230769230769,0.184615384615385,0.2,proposed reconciliation algorithm main motivation is personal information management supporting higher level browsing of information on one zz zz zz s desktop dot punct pim punct examines data from sources on the desktop punct e dot g dot mails comma files comma spreadsheets punct rec dot algo dot addresses several shortcomings of existing reference reconciliation algorithms that preclude their use in applications such as pim,proposed reconciliation algorithm main motivation,-1,-1,0,normal.
16,43,0.27906976744186,0.348837209302326,0.0232558139534884,personal information management extract instances of multiple classes punct person comma message comma article comma conference extract associations punct senderof comma authorof comma publishedin dot dot also comma punct aside from pim punct publications online product catalogs involves complex relationships between multiple entities,personal information management extract instances,-1,6,7,normal.
35,35,0.0857142857142857,0.171428571428571,0.0857142857142857,proposed reconciliation algorithm exploit the associations between references to design new methods for reference comparison propogate information between reconciliation decisions to accumulate pos dot and neg dot evidences enrich references by merging attribute values dot,proposed reconciliation algorithm exploit the,6,-9,-15,normal.
25,41,0.0731707317073171,0.121951219512195,0.170731707317073,reconciliation algorithm the key ideas of the algorithm punct extensive use of context information to provide evidence for reconciliation decisions example punct for given 2 references algorithm also considers their co punct authors and emails to decide whether to reconcile them,reconciliation algorithm the key ideas,-9,0,9,normal.
26,35,0.0571428571428571,0.114285714285714,0.171428571428571,reconciliation algorithm propagation of information between reconciliation decisions for different pairs of references example punct when we decide to reconcile two papers comma we obtain additional evidence for reconciling the person references to their authors,reconciliation algorithm propagation of information,0,0,0,normal.
29,56,0.107142857142857,0.0892857142857143,0.232142857142857,reconciliation algorithm addressing the lack of information in each reference by reference enrichment example punct when we reconcile two person references comma we gather different representations of the person zz zz zz s name comma different mail addresses and can enlarge the co punct author list dot this enrichment can lead us to another reconciliations dot,reconciliation algorithm addressing the lack,0,-10,-10,normal.
40,34,0.147058823529412,0.235294117647059,0.117647058823529,problem definition a domain is modelled with a schema schema includes classes with attributes attributes punct atomic punct simple type like string comma int associations punct whose values are links to other instances dot,problem definition a domain is,-10,-107,-97,normal.
12,1,0,1,0,schema,,-107,47,154,normal.
20,1,0,1,0,references,,47,45,-2,normal.
20,2,0,1,0,reconciliation results,,45,-100,-100,normal.
0,0,0,0,0,,,-100,-100,-100,normal.
43,39,0.0256410256410256,0.153846153846154,0.179487179487179,measures of quality recall measures the percentage of correctly reconciled pairs of references over all pairs of references that refer to the same entity dot precision measures the percentage of correctly reconciled pairs over all reconciled pairs of references,measures of quality recall measures,-100,-14,-100,normal.
52,50,0.08,0.12,0.1,reconciliation algorithm details first comma costruct the dependency graph that captures the relationships between different reconciliation decisions iteratively re punct compute scores that are assigned to reconciliation decision nodes in the graph until a fixed point is reached dot finally comma compute the transitive closure for the final reconciliation results,reconciliation algorithm details first comma,-14,-2,12,normal.
48,51,0.0392156862745098,0.0980392156862745,0.274509803921569,dependency graph we need to compute the similarity for every pair of references of the same class comma therefore comma atomic and association attributes zz zz zz similarities a node in the graph represents the similarity between a pair of references an edge represents the dependency between a pair of similarities,dependency graph we need to,-2,-144,-142,normal.
16,3,0,0.666666666666667,0.333333333333333,definitions of graph,,-144,-100,-100,normal.
0,0,0,0,0,,,-100,-100,-100,normal.
0,0,0,0,0,,,-100,-100,-100,normal.
52,76,0.0789473684210526,0.0657894736842105,0.434210526315789,some definitions we call n an incoming neighbor of m comma 	and m an outgoing neighbor of n dot if the similarity of a node n depends only whether the references in the node m are reconciled comma then we say m is a boolean punct valued neighbor of n if the similarity of n depends on the actual similarity value of node m comma we call m is a real punct valued neighbor of n,some definitions we call n,-100,-2,-100,normal.
69,103,0.116504854368932,0.0485436893203883,0.359223300970874,some definitions if the reconciliation of m zz zz zz s two references implies that the two references in n should also be reconciled comma m is called n zz zz zz s strong punct boolean punct valued neighbor dot if the reconciliation of m zz zz zz s references only increases the similarity score of n comma but does not directly imply reconciliation comma m is called n zz zz zz s weak punct boolean punct valued neighbor dot e dot g dot dot the similarity score of 2 persons will increase given that they have email correspondence with the same person,some definitions if the reconciliation,-2,18,20,normal.
28,5,0,0.6,0.4,graph construction zz step 1,,18,-30,-48,normal.
22,5,0,0.6,0.4,graph construction zz step 2,,-30,-1,29,normal.
42,59,0.11864406779661,0.101694915254237,0.288135593220339,exploiting the dependency graph algorithm is based on propogating similarity decisions from node to node dot e dot g dot dot after deciding to reconcile articles a1 and a2 we should reconcile their associated conferences c1 and c2 comma further comma re punct computation of the similarities of other papers that mention the conferences c1 and c2 is required,exploiting the dependency graph algorithm,-1,-2,-1,normal.
57,73,0.10958904109589,0.0821917808219178,0.232876712328767,nodes merged punct when a node zz zz zz s similarity score is above a merge punct threshold punct it represents reconciled references punct active punct if a node zz zz zz s similarity is reconsidered inactive punct the rest dot dot initially all nodes representing the similarity between references are marked active the nodes representing the similarity between atomic attribute values are marked merged or inactive depending on their associated similarity score,nodes merged punct when a,-2,-1,1,normal.
70,53,0.0754716981132075,0.0943396226415094,0.283018867924528,nodes at a time one active node is selected and its similarity score is recomputed if the new similarity score is above merge punct threshold comma node is marked as merged otherwise it is marked as inactive in addition comma all its neighbours with similarity scores below 1 is marked as active dot,nodes at a time one,-1,-7,-6,normal.
30,31,0.0645161290322581,0.161290322580645,0.129032258064516,exploiting the dependency graph this algorithm maintains a queue of active nodes containing all reference punct similarity nodes at every iteration comma we compute the similarity score for the top node,exploiting the dependency graph this,-7,-6,1,normal.
29,72,0.0972222222222222,0.0694444444444444,0.305555555555556,enriching the references after merging references r1 and r2 comma all the attributes of r2 can be considered as those of r1 dot when there is another reference r3 comma we choose the one with higher similarity dot example punct connecting all neighbours of n we can remove node n dot if m gets new incoming neighbours and is not active comma then m is inserted at the end of the queue,enriching the references after merging,-6,-100,-100,normal.
0,0,0,0,0,,,-100,-100,-100,normal.
31,73,0.205479452054795,0.0958904109589041,0.219178082191781,enforcing constraints in many cases comma negative evidences can contribute to the reconciliation process dot punct e dot g dot p2 punct p9 punct constraint punct is a rule enforcing that two references are quarenteed to be distinct dot e dot g dot dot the authors of one paper are distinct typically domain punct dependent non punct merge node punct the two elements are quarenteed to be different and should never be reconciled,enforcing constraints in many cases,-100,-83,-100,normal.
16,6,0.333333333333333,0.166666666666667,0.166666666666667,definitions zz punct for constraints punct,definitions zz punct for constraints,-83,75,158,normal.
41,87,0.149425287356322,0.0919540229885057,0.35632183908046,computing zz similarity scores given a node m punct punct r1 comma r2 punct comma the similarity function for m takes the similarity scores of m zz zz zz s neighbors as input and computes a score between 0 and 1 the similarity score is sum of 3 components srv zz zz zz contributed by real punct valued incoming neigh dot ssb zz zz zz contributed by strong punct boolean punct valued neigh dot swb zz zz zz contributed by weak punct boolean punct valued neigh dot,computing zz similarity scores given,75,33,-42,normal.
15,4,0.25,0.75,0,real punct valued neighbors,,33,-36,-69,normal.
6,4,0.25,0.5,0,strong punct boolean neighbors,,-36,0,36,normal.
6,4,0.25,0.5,0,weak punct boolean neighbors,,0,-21,-21,normal.
24,51,0.215686274509804,0.254901960784314,0.156862745098039,experimantal results tests on two domains punct personal information management publication portal different 4 personal datasets is used 	conference and journals are merged punct venue class punct performance is measured by recall comma precision and f punct measure f punct measure punct 2 punct prec punct recall punct prec punct recall,experimantal results tests on two,-21,-1,20,normal.
25,1,0,1,0,datasets,,-1,-18,-17,normal.
28,33,0.0606060606060606,0.181818181818182,0.0303030303030303,experiments proposed algorithm is depgraph general reconciliation approach punct indepdec indepdec compares person names and emails independently and combines the results for reference similarity without exploiting the dependencies between individual reconciliation decisions dot,experiments proposed algorithm is depgraph,-18,0,18,normal.
38,46,0.152173913043478,0.0217391304347826,0.0869565217391304,experiments depgraph comma in addition comma compares the names with the email accounts comma considers the articles authored by the persons comma counts the common people appearing in the coauthor or email punct contact lists comma applies reconciliation propogation and reference enrichment and enforces constraints dot,experiments depgraph comma in addition,0,26,26,normal.
25,1,0,1,0,results,,26,-33,-59,normal.
25,77,0.272727272727273,0.116883116883117,0.0909090909090909,experiment results depgraph obtains higher precision and recall for both person and venue references dot it improved recall for venue ref dot by punct 18 dot 6 					for person ref dot by punct 5 dot 4 				 punct punct punct punct punct punct punct secondly comma examine person references dividing dataset into two one contains person ref dot extracted only from emails punct pemail punct one contains person ref dot extracted from articles 	 punct particle punct,experiment results depgraph obtains higher,-33,-36,-3,normal.
15,31,0.193548387096774,0.032258064516129,0.290322580645161,results depgraph improves recall 	by punct 30 dot 7 on the article datasets 	by punct 7 dot 6 on the email datasets 	by punct 5 dot 4 on the full datasets,results depgraph improves recall 	by,-36,-16,20,normal.
30,47,0.0638297872340425,0.127659574468085,0.170212765957447,conclusions punct future work many applications are based on information spaces that involve multiple classes and rich relationships between instances thus far studies are in the context of reconciling ref dot of a single class dot this paper fills in this gap by proposing a generic framework,conclusions punct future work many,-16,-1,15,normal.
23,52,0.115384615384615,0.153846153846154,0.115384615384615,conclusions punct future work this framework influences later similarity computation with early reconciliation decisions comma and enriches references by instant merging dot proposed algorithm obtains high precision and recall on test datasets dot in the future comma an efficient incremental reconciliation approach learning techniques based on the framework could be considered dot,conclusions punct future work this,-1,-100,-100,normal.
0,4,0.75,0.25,0,questions punct punct punct,,-100,-100,-100,na.
